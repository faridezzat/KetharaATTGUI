//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KetharaATTGUI {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("AttendanceDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AttendanceDataSet : global::System.Data.DataSet {
        
        private MachinesDataTable tableMachines;
        
        private CHECKINOUTDataTable tableCHECKINOUT;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AttendanceDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected AttendanceDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Machines"] != null)) {
                    base.Tables.Add(new MachinesDataTable(ds.Tables["Machines"]));
                }
                if ((ds.Tables["CHECKINOUT"] != null)) {
                    base.Tables.Add(new CHECKINOUTDataTable(ds.Tables["CHECKINOUT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MachinesDataTable Machines {
            get {
                return this.tableMachines;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHECKINOUTDataTable CHECKINOUT {
            get {
                return this.tableCHECKINOUT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            AttendanceDataSet cln = ((AttendanceDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Machines"] != null)) {
                    base.Tables.Add(new MachinesDataTable(ds.Tables["Machines"]));
                }
                if ((ds.Tables["CHECKINOUT"] != null)) {
                    base.Tables.Add(new CHECKINOUTDataTable(ds.Tables["CHECKINOUT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableMachines = ((MachinesDataTable)(base.Tables["Machines"]));
            if ((initTable == true)) {
                if ((this.tableMachines != null)) {
                    this.tableMachines.InitVars();
                }
            }
            this.tableCHECKINOUT = ((CHECKINOUTDataTable)(base.Tables["CHECKINOUT"]));
            if ((initTable == true)) {
                if ((this.tableCHECKINOUT != null)) {
                    this.tableCHECKINOUT.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "AttendanceDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AttendanceDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMachines = new MachinesDataTable();
            base.Tables.Add(this.tableMachines);
            this.tableCHECKINOUT = new CHECKINOUTDataTable();
            base.Tables.Add(this.tableCHECKINOUT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMachines() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCHECKINOUT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            AttendanceDataSet ds = new AttendanceDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MachinesRowChangeEventHandler(object sender, MachinesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CHECKINOUTRowChangeEventHandler(object sender, CHECKINOUTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MachinesDataTable : global::System.Data.TypedTableBase<MachinesRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMachineAlias;
            
            private global::System.Data.DataColumn columnConnectType;
            
            private global::System.Data.DataColumn columnIP;
            
            private global::System.Data.DataColumn columnSerialPort;
            
            private global::System.Data.DataColumn columnPort;
            
            private global::System.Data.DataColumn columnBaudrate;
            
            private global::System.Data.DataColumn columnMachineNumber;
            
            private global::System.Data.DataColumn columnIsHost;
            
            private global::System.Data.DataColumn columnEnabled;
            
            private global::System.Data.DataColumn columnCommPassword;
            
            private global::System.Data.DataColumn columnUILanguage;
            
            private global::System.Data.DataColumn columnDateFormat;
            
            private global::System.Data.DataColumn columnInOutRecordWarn;
            
            private global::System.Data.DataColumn columnIdle;
            
            private global::System.Data.DataColumn columnVoice;
            
            private global::System.Data.DataColumn columnFirmwareVersion;
            
            private global::System.Data.DataColumn columnProductType;
            
            private global::System.Data.DataColumn columnLockControl;
            
            private global::System.Data.DataColumn columnPurpose;
            
            private global::System.Data.DataColumn columnProduceKind;
            
            private global::System.Data.DataColumn columnsn;
            
            private global::System.Data.DataColumn columnPhotoStamp;
            
            private global::System.Data.DataColumn columnIsIfChangeConfigServer2;
            
            private global::System.Data.DataColumn columnpushver;
            
            private global::System.Data.DataColumn columnchange_operator;
            
            private global::System.Data.DataColumn columnchange_time;
            
            private global::System.Data.DataColumn columncreate_operator;
            
            private global::System.Data.DataColumn columncreate_time;
            
            private global::System.Data.DataColumn columndelete_operator;
            
            private global::System.Data.DataColumn columndelete_time;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columndevice_type;
            
            private global::System.Data.DataColumn columnlast_activity;
            
            private global::System.Data.DataColumn columntrans_times;
            
            private global::System.Data.DataColumn columnTransInterval;
            
            private global::System.Data.DataColumn columnlog_stamp;
            
            private global::System.Data.DataColumn columnoplog_stamp;
            
            private global::System.Data.DataColumn columnphoto_stamp;
            
            private global::System.Data.DataColumn columnUpdateDB;
            
            private global::System.Data.DataColumn columndevice_name;
            
            private global::System.Data.DataColumn columntransaction_count;
            
            private global::System.Data.DataColumn columnmain_time;
            
            private global::System.Data.DataColumn columnmax_user_count;
            
            private global::System.Data.DataColumn columnmax_finger_count;
            
            private global::System.Data.DataColumn columnmax_attlog_count;
            
            private global::System.Data.DataColumn columnalg_ver;
            
            private global::System.Data.DataColumn columnflash_size;
            
            private global::System.Data.DataColumn columnfree_flash_size;
            
            private global::System.Data.DataColumn columnlanguage;
            
            private global::System.Data.DataColumn columnlng_encode;
            
            private global::System.Data.DataColumn columnvolume;
            
            private global::System.Data.DataColumn columnis_tft;
            
            private global::System.Data.DataColumn columnplatform;
            
            private global::System.Data.DataColumn columnbrightness;
            
            private global::System.Data.DataColumn columnoem_vendor;
            
            private global::System.Data.DataColumn columncity;
            
            private global::System.Data.DataColumn columnAccFun;
            
            private global::System.Data.DataColumn columnTZAdj;
            
            private global::System.Data.DataColumn columncomm_type;
            
            private global::System.Data.DataColumn columnagent_ipaddress;
            
            private global::System.Data.DataColumn columnsubnet_mask;
            
            private global::System.Data.DataColumn columngateway;
            
            private global::System.Data.DataColumn columnarea_id;
            
            private global::System.Data.DataColumn columnacpanel_type;
            
            private global::System.Data.DataColumn columnsync_time;
            
            private global::System.Data.DataColumn columnfour_to_two;
            
            private global::System.Data.DataColumn columnvideo_login;
            
            private global::System.Data.DataColumn columnfp_mthreshold;
            
            private global::System.Data.DataColumn columnFpversion;
            
            private global::System.Data.DataColumn columnmax_comm_size;
            
            private global::System.Data.DataColumn columnmax_comm_count;
            
            private global::System.Data.DataColumn columnrealtime;
            
            private global::System.Data.DataColumn columndelay;
            
            private global::System.Data.DataColumn columnencrypt;
            
            private global::System.Data.DataColumn columndstime_id;
            
            private global::System.Data.DataColumn columndoor_count;
            
            private global::System.Data.DataColumn columnreader_count;
            
            private global::System.Data.DataColumn columnaux_in_count;
            
            private global::System.Data.DataColumn columnaux_out_count;
            
            private global::System.Data.DataColumn columnIsOnlyRFMachine;
            
            private global::System.Data.DataColumn columnalias;
            
            private global::System.Data.DataColumn columnipaddress;
            
            private global::System.Data.DataColumn columncom_port;
            
            private global::System.Data.DataColumn columncom_address;
            
            private global::System.Data.DataColumn columnSimpleEventType;
            
            private global::System.Data.DataColumn columnFvFunOn;
            
            private global::System.Data.DataColumn columnfvcount;
            
            private global::System.Data.DataColumn columndeviceOption;
            
            private global::System.Data.DataColumn columnDevSDKType;
            
            private global::System.Data.DataColumn columnUTableDesc;
            
            private global::System.Data.DataColumn columnIsTFTMachine;
            
            private global::System.Data.DataColumn columnPinWidth;
            
            private global::System.Data.DataColumn columnUserExtFmt;
            
            private global::System.Data.DataColumn columnFP1_NThreshold;
            
            private global::System.Data.DataColumn columnFP1_1Threshold;
            
            private global::System.Data.DataColumn columnFace1_NThreshold;
            
            private global::System.Data.DataColumn columnFace1_1Threshold;
            
            private global::System.Data.DataColumn columnOnly1_1Mode;
            
            private global::System.Data.DataColumn columnOnlyCheckCard;
            
            private global::System.Data.DataColumn columnMifireMustRegistered;
            
            private global::System.Data.DataColumn columnRFCardOn;
            
            private global::System.Data.DataColumn columnMifire;
            
            private global::System.Data.DataColumn columnMifireId;
            
            private global::System.Data.DataColumn columnNetOn;
            
            private global::System.Data.DataColumn columnRS232On;
            
            private global::System.Data.DataColumn columnRS485On;
            
            private global::System.Data.DataColumn columnFreeType;
            
            private global::System.Data.DataColumn columnFreeTime;
            
            private global::System.Data.DataColumn columnNoDisplayFun;
            
            private global::System.Data.DataColumn columnVoiceTipsOn;
            
            private global::System.Data.DataColumn columnTOMenu;
            
            private global::System.Data.DataColumn columnStdVolume;
            
            private global::System.Data.DataColumn columnVRYVH;
            
            private global::System.Data.DataColumn columnKeyPadBeep;
            
            private global::System.Data.DataColumn columnBatchUpdate;
            
            private global::System.Data.DataColumn columnCardFun;
            
            private global::System.Data.DataColumn columnFaceFunOn;
            
            private global::System.Data.DataColumn columnFaceCount;
            
            private global::System.Data.DataColumn columnTimeAPBFunOn;
            
            private global::System.Data.DataColumn columnFingerFunOn;
            
            private global::System.Data.DataColumn columnCompatOldFirmware;
            
            private global::System.Data.DataColumn columnParamValues;
            
            private global::System.Data.DataColumn columnWirelessSSID;
            
            private global::System.Data.DataColumn columnWirelessKey;
            
            private global::System.Data.DataColumn columnWirelessAddr;
            
            private global::System.Data.DataColumn columnWirelessMask;
            
            private global::System.Data.DataColumn columnWirelessGateWay;
            
            private global::System.Data.DataColumn columnIsWireless;
            
            private global::System.Data.DataColumn columnmanagercount;
            
            private global::System.Data.DataColumn columnusercount;
            
            private global::System.Data.DataColumn columnfingercount;
            
            private global::System.Data.DataColumn columnSecretCount;
            
            private global::System.Data.DataColumn columnACFun;
            
            private global::System.Data.DataColumn columnBiometricType;
            
            private global::System.Data.DataColumn columnBiometricVersion;
            
            private global::System.Data.DataColumn columnBiometricMaxCount;
            
            private global::System.Data.DataColumn columnBiometricUsedCount;
            
            private global::System.Data.DataColumn columnWIFI;
            
            private global::System.Data.DataColumn columnWIFIOn;
            
            private global::System.Data.DataColumn columnWIFIDHCP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MachinesDataTable() {
                this.TableName = "Machines";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MachinesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MachinesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MachineAliasColumn {
                get {
                    return this.columnMachineAlias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConnectTypeColumn {
                get {
                    return this.columnConnectType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IPColumn {
                get {
                    return this.columnIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SerialPortColumn {
                get {
                    return this.columnSerialPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PortColumn {
                get {
                    return this.columnPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaudrateColumn {
                get {
                    return this.columnBaudrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MachineNumberColumn {
                get {
                    return this.columnMachineNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsHostColumn {
                get {
                    return this.columnIsHost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnabledColumn {
                get {
                    return this.columnEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommPasswordColumn {
                get {
                    return this.columnCommPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UILanguageColumn {
                get {
                    return this.columnUILanguage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateFormatColumn {
                get {
                    return this.columnDateFormat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InOutRecordWarnColumn {
                get {
                    return this.columnInOutRecordWarn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdleColumn {
                get {
                    return this.columnIdle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoiceColumn {
                get {
                    return this.columnVoice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FirmwareVersionColumn {
                get {
                    return this.columnFirmwareVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductTypeColumn {
                get {
                    return this.columnProductType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LockControlColumn {
                get {
                    return this.columnLockControl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurposeColumn {
                get {
                    return this.columnPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProduceKindColumn {
                get {
                    return this.columnProduceKind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn snColumn {
                get {
                    return this.columnsn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhotoStampColumn {
                get {
                    return this.columnPhotoStamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsIfChangeConfigServer2Column {
                get {
                    return this.columnIsIfChangeConfigServer2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pushverColumn {
                get {
                    return this.columnpushver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn change_operatorColumn {
                get {
                    return this.columnchange_operator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn change_timeColumn {
                get {
                    return this.columnchange_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn create_operatorColumn {
                get {
                    return this.columncreate_operator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn create_timeColumn {
                get {
                    return this.columncreate_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn delete_operatorColumn {
                get {
                    return this.columndelete_operator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn delete_timeColumn {
                get {
                    return this.columndelete_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn device_typeColumn {
                get {
                    return this.columndevice_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn last_activityColumn {
                get {
                    return this.columnlast_activity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn trans_timesColumn {
                get {
                    return this.columntrans_times;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransIntervalColumn {
                get {
                    return this.columnTransInterval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn log_stampColumn {
                get {
                    return this.columnlog_stamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn oplog_stampColumn {
                get {
                    return this.columnoplog_stamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn photo_stampColumn {
                get {
                    return this.columnphoto_stamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateDBColumn {
                get {
                    return this.columnUpdateDB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn device_nameColumn {
                get {
                    return this.columndevice_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn transaction_countColumn {
                get {
                    return this.columntransaction_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn main_timeColumn {
                get {
                    return this.columnmain_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn max_user_countColumn {
                get {
                    return this.columnmax_user_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn max_finger_countColumn {
                get {
                    return this.columnmax_finger_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn max_attlog_countColumn {
                get {
                    return this.columnmax_attlog_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn alg_verColumn {
                get {
                    return this.columnalg_ver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn flash_sizeColumn {
                get {
                    return this.columnflash_size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn free_flash_sizeColumn {
                get {
                    return this.columnfree_flash_size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn languageColumn {
                get {
                    return this.columnlanguage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn lng_encodeColumn {
                get {
                    return this.columnlng_encode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn volumeColumn {
                get {
                    return this.columnvolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn is_tftColumn {
                get {
                    return this.columnis_tft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn platformColumn {
                get {
                    return this.columnplatform;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn brightnessColumn {
                get {
                    return this.columnbrightness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn oem_vendorColumn {
                get {
                    return this.columnoem_vendor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cityColumn {
                get {
                    return this.columncity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccFunColumn {
                get {
                    return this.columnAccFun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TZAdjColumn {
                get {
                    return this.columnTZAdj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn comm_typeColumn {
                get {
                    return this.columncomm_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn agent_ipaddressColumn {
                get {
                    return this.columnagent_ipaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn subnet_maskColumn {
                get {
                    return this.columnsubnet_mask;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn gatewayColumn {
                get {
                    return this.columngateway;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn area_idColumn {
                get {
                    return this.columnarea_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn acpanel_typeColumn {
                get {
                    return this.columnacpanel_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sync_timeColumn {
                get {
                    return this.columnsync_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn four_to_twoColumn {
                get {
                    return this.columnfour_to_two;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn video_loginColumn {
                get {
                    return this.columnvideo_login;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fp_mthresholdColumn {
                get {
                    return this.columnfp_mthreshold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FpversionColumn {
                get {
                    return this.columnFpversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn max_comm_sizeColumn {
                get {
                    return this.columnmax_comm_size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn max_comm_countColumn {
                get {
                    return this.columnmax_comm_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn realtimeColumn {
                get {
                    return this.columnrealtime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn delayColumn {
                get {
                    return this.columndelay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn encryptColumn {
                get {
                    return this.columnencrypt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dstime_idColumn {
                get {
                    return this.columndstime_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn door_countColumn {
                get {
                    return this.columndoor_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reader_countColumn {
                get {
                    return this.columnreader_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn aux_in_countColumn {
                get {
                    return this.columnaux_in_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn aux_out_countColumn {
                get {
                    return this.columnaux_out_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsOnlyRFMachineColumn {
                get {
                    return this.columnIsOnlyRFMachine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn aliasColumn {
                get {
                    return this.columnalias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ipaddressColumn {
                get {
                    return this.columnipaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn com_portColumn {
                get {
                    return this.columncom_port;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn com_addressColumn {
                get {
                    return this.columncom_address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SimpleEventTypeColumn {
                get {
                    return this.columnSimpleEventType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FvFunOnColumn {
                get {
                    return this.columnFvFunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fvcountColumn {
                get {
                    return this.columnfvcount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn deviceOptionColumn {
                get {
                    return this.columndeviceOption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DevSDKTypeColumn {
                get {
                    return this.columnDevSDKType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UTableDescColumn {
                get {
                    return this.columnUTableDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsTFTMachineColumn {
                get {
                    return this.columnIsTFTMachine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PinWidthColumn {
                get {
                    return this.columnPinWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserExtFmtColumn {
                get {
                    return this.columnUserExtFmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FP1_NThresholdColumn {
                get {
                    return this.columnFP1_NThreshold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FP1_1ThresholdColumn {
                get {
                    return this.columnFP1_1Threshold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Face1_NThresholdColumn {
                get {
                    return this.columnFace1_NThreshold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Face1_1ThresholdColumn {
                get {
                    return this.columnFace1_1Threshold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Only1_1ModeColumn {
                get {
                    return this.columnOnly1_1Mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OnlyCheckCardColumn {
                get {
                    return this.columnOnlyCheckCard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MifireMustRegisteredColumn {
                get {
                    return this.columnMifireMustRegistered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RFCardOnColumn {
                get {
                    return this.columnRFCardOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MifireColumn {
                get {
                    return this.columnMifire;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MifireIdColumn {
                get {
                    return this.columnMifireId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetOnColumn {
                get {
                    return this.columnNetOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RS232OnColumn {
                get {
                    return this.columnRS232On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RS485OnColumn {
                get {
                    return this.columnRS485On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeTypeColumn {
                get {
                    return this.columnFreeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreeTimeColumn {
                get {
                    return this.columnFreeTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NoDisplayFunColumn {
                get {
                    return this.columnNoDisplayFun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoiceTipsOnColumn {
                get {
                    return this.columnVoiceTipsOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOMenuColumn {
                get {
                    return this.columnTOMenu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StdVolumeColumn {
                get {
                    return this.columnStdVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VRYVHColumn {
                get {
                    return this.columnVRYVH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KeyPadBeepColumn {
                get {
                    return this.columnKeyPadBeep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BatchUpdateColumn {
                get {
                    return this.columnBatchUpdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CardFunColumn {
                get {
                    return this.columnCardFun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FaceFunOnColumn {
                get {
                    return this.columnFaceFunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FaceCountColumn {
                get {
                    return this.columnFaceCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeAPBFunOnColumn {
                get {
                    return this.columnTimeAPBFunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FingerFunOnColumn {
                get {
                    return this.columnFingerFunOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompatOldFirmwareColumn {
                get {
                    return this.columnCompatOldFirmware;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParamValuesColumn {
                get {
                    return this.columnParamValues;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WirelessSSIDColumn {
                get {
                    return this.columnWirelessSSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WirelessKeyColumn {
                get {
                    return this.columnWirelessKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WirelessAddrColumn {
                get {
                    return this.columnWirelessAddr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WirelessMaskColumn {
                get {
                    return this.columnWirelessMask;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WirelessGateWayColumn {
                get {
                    return this.columnWirelessGateWay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsWirelessColumn {
                get {
                    return this.columnIsWireless;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn managercountColumn {
                get {
                    return this.columnmanagercount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn usercountColumn {
                get {
                    return this.columnusercount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fingercountColumn {
                get {
                    return this.columnfingercount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SecretCountColumn {
                get {
                    return this.columnSecretCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACFunColumn {
                get {
                    return this.columnACFun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiometricTypeColumn {
                get {
                    return this.columnBiometricType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiometricVersionColumn {
                get {
                    return this.columnBiometricVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiometricMaxCountColumn {
                get {
                    return this.columnBiometricMaxCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiometricUsedCountColumn {
                get {
                    return this.columnBiometricUsedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WIFIColumn {
                get {
                    return this.columnWIFI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WIFIOnColumn {
                get {
                    return this.columnWIFIOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WIFIDHCPColumn {
                get {
                    return this.columnWIFIDHCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MachinesRow this[int index] {
                get {
                    return ((MachinesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MachinesRowChangeEventHandler MachinesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MachinesRowChangeEventHandler MachinesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MachinesRowChangeEventHandler MachinesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MachinesRowChangeEventHandler MachinesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMachinesRow(MachinesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MachinesRow AddMachinesRow(
                        string MachineAlias, 
                        int ConnectType, 
                        string IP, 
                        int SerialPort, 
                        int Port, 
                        int Baudrate, 
                        int MachineNumber, 
                        bool IsHost, 
                        bool Enabled, 
                        string CommPassword, 
                        short UILanguage, 
                        short DateFormat, 
                        short InOutRecordWarn, 
                        short Idle, 
                        short Voice, 
                        string FirmwareVersion, 
                        string ProductType, 
                        short LockControl, 
                        short Purpose, 
                        int ProduceKind, 
                        string sn, 
                        string PhotoStamp, 
                        int IsIfChangeConfigServer2, 
                        int pushver, 
                        string change_operator, 
                        System.DateTime change_time, 
                        string create_operator, 
                        System.DateTime create_time, 
                        string delete_operator, 
                        System.DateTime delete_time, 
                        int status, 
                        int device_type, 
                        System.DateTime last_activity, 
                        string trans_times, 
                        int TransInterval, 
                        string log_stamp, 
                        byte[] oplog_stamp, 
                        byte[] photo_stamp, 
                        string UpdateDB, 
                        string device_name, 
                        int transaction_count, 
                        string main_time, 
                        int max_user_count, 
                        int max_finger_count, 
                        int max_attlog_count, 
                        string alg_ver, 
                        string flash_size, 
                        string free_flash_size, 
                        string language, 
                        string lng_encode, 
                        string volume, 
                        string is_tft, 
                        string platform, 
                        string brightness, 
                        string oem_vendor, 
                        string city, 
                        int AccFun, 
                        int TZAdj, 
                        int comm_type, 
                        string agent_ipaddress, 
                        string subnet_mask, 
                        string gateway, 
                        int area_id, 
                        int acpanel_type, 
                        bool sync_time, 
                        bool four_to_two, 
                        string video_login, 
                        int fp_mthreshold, 
                        int Fpversion, 
                        int max_comm_size, 
                        int max_comm_count, 
                        bool realtime, 
                        int delay, 
                        bool encrypt, 
                        int dstime_id, 
                        int door_count, 
                        int reader_count, 
                        int aux_in_count, 
                        int aux_out_count, 
                        int IsOnlyRFMachine, 
                        string alias, 
                        string ipaddress, 
                        short com_port, 
                        short com_address, 
                        int SimpleEventType, 
                        int FvFunOn, 
                        short fvcount, 
                        byte[] deviceOption, 
                        int DevSDKType, 
                        byte[] UTableDesc, 
                        bool IsTFTMachine, 
                        int PinWidth, 
                        int UserExtFmt, 
                        int FP1_NThreshold, 
                        int FP1_1Threshold, 
                        int Face1_NThreshold, 
                        int Face1_1Threshold, 
                        int Only1_1Mode, 
                        int OnlyCheckCard, 
                        int MifireMustRegistered, 
                        int RFCardOn, 
                        int Mifire, 
                        int MifireId, 
                        int NetOn, 
                        int RS232On, 
                        int RS485On, 
                        int FreeType, 
                        int FreeTime, 
                        int NoDisplayFun, 
                        int VoiceTipsOn, 
                        int TOMenu, 
                        int StdVolume, 
                        int VRYVH, 
                        int KeyPadBeep, 
                        int BatchUpdate, 
                        int CardFun, 
                        int FaceFunOn, 
                        int FaceCount, 
                        int TimeAPBFunOn, 
                        string FingerFunOn, 
                        string CompatOldFirmware, 
                        byte[] ParamValues, 
                        string WirelessSSID, 
                        string WirelessKey, 
                        string WirelessAddr, 
                        string WirelessMask, 
                        string WirelessGateWay, 
                        bool IsWireless, 
                        int managercount, 
                        int usercount, 
                        int fingercount, 
                        int SecretCount, 
                        int ACFun, 
                        string BiometricType, 
                        string BiometricVersion, 
                        string BiometricMaxCount, 
                        string BiometricUsedCount, 
                        int WIFI, 
                        int WIFIOn, 
                        int WIFIDHCP) {
                MachinesRow rowMachinesRow = ((MachinesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MachineAlias,
                        ConnectType,
                        IP,
                        SerialPort,
                        Port,
                        Baudrate,
                        MachineNumber,
                        IsHost,
                        Enabled,
                        CommPassword,
                        UILanguage,
                        DateFormat,
                        InOutRecordWarn,
                        Idle,
                        Voice,
                        FirmwareVersion,
                        ProductType,
                        LockControl,
                        Purpose,
                        ProduceKind,
                        sn,
                        PhotoStamp,
                        IsIfChangeConfigServer2,
                        pushver,
                        change_operator,
                        change_time,
                        create_operator,
                        create_time,
                        delete_operator,
                        delete_time,
                        status,
                        device_type,
                        last_activity,
                        trans_times,
                        TransInterval,
                        log_stamp,
                        oplog_stamp,
                        photo_stamp,
                        UpdateDB,
                        device_name,
                        transaction_count,
                        main_time,
                        max_user_count,
                        max_finger_count,
                        max_attlog_count,
                        alg_ver,
                        flash_size,
                        free_flash_size,
                        language,
                        lng_encode,
                        volume,
                        is_tft,
                        platform,
                        brightness,
                        oem_vendor,
                        city,
                        AccFun,
                        TZAdj,
                        comm_type,
                        agent_ipaddress,
                        subnet_mask,
                        gateway,
                        area_id,
                        acpanel_type,
                        sync_time,
                        four_to_two,
                        video_login,
                        fp_mthreshold,
                        Fpversion,
                        max_comm_size,
                        max_comm_count,
                        realtime,
                        delay,
                        encrypt,
                        dstime_id,
                        door_count,
                        reader_count,
                        aux_in_count,
                        aux_out_count,
                        IsOnlyRFMachine,
                        alias,
                        ipaddress,
                        com_port,
                        com_address,
                        SimpleEventType,
                        FvFunOn,
                        fvcount,
                        deviceOption,
                        DevSDKType,
                        UTableDesc,
                        IsTFTMachine,
                        PinWidth,
                        UserExtFmt,
                        FP1_NThreshold,
                        FP1_1Threshold,
                        Face1_NThreshold,
                        Face1_1Threshold,
                        Only1_1Mode,
                        OnlyCheckCard,
                        MifireMustRegistered,
                        RFCardOn,
                        Mifire,
                        MifireId,
                        NetOn,
                        RS232On,
                        RS485On,
                        FreeType,
                        FreeTime,
                        NoDisplayFun,
                        VoiceTipsOn,
                        TOMenu,
                        StdVolume,
                        VRYVH,
                        KeyPadBeep,
                        BatchUpdate,
                        CardFun,
                        FaceFunOn,
                        FaceCount,
                        TimeAPBFunOn,
                        FingerFunOn,
                        CompatOldFirmware,
                        ParamValues,
                        WirelessSSID,
                        WirelessKey,
                        WirelessAddr,
                        WirelessMask,
                        WirelessGateWay,
                        IsWireless,
                        managercount,
                        usercount,
                        fingercount,
                        SecretCount,
                        ACFun,
                        BiometricType,
                        BiometricVersion,
                        BiometricMaxCount,
                        BiometricUsedCount,
                        WIFI,
                        WIFIOn,
                        WIFIDHCP};
                rowMachinesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMachinesRow);
                return rowMachinesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MachinesRow FindByID(int ID) {
                return ((MachinesRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MachinesDataTable cln = ((MachinesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MachinesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMachineAlias = base.Columns["MachineAlias"];
                this.columnConnectType = base.Columns["ConnectType"];
                this.columnIP = base.Columns["IP"];
                this.columnSerialPort = base.Columns["SerialPort"];
                this.columnPort = base.Columns["Port"];
                this.columnBaudrate = base.Columns["Baudrate"];
                this.columnMachineNumber = base.Columns["MachineNumber"];
                this.columnIsHost = base.Columns["IsHost"];
                this.columnEnabled = base.Columns["Enabled"];
                this.columnCommPassword = base.Columns["CommPassword"];
                this.columnUILanguage = base.Columns["UILanguage"];
                this.columnDateFormat = base.Columns["DateFormat"];
                this.columnInOutRecordWarn = base.Columns["InOutRecordWarn"];
                this.columnIdle = base.Columns["Idle"];
                this.columnVoice = base.Columns["Voice"];
                this.columnFirmwareVersion = base.Columns["FirmwareVersion"];
                this.columnProductType = base.Columns["ProductType"];
                this.columnLockControl = base.Columns["LockControl"];
                this.columnPurpose = base.Columns["Purpose"];
                this.columnProduceKind = base.Columns["ProduceKind"];
                this.columnsn = base.Columns["sn"];
                this.columnPhotoStamp = base.Columns["PhotoStamp"];
                this.columnIsIfChangeConfigServer2 = base.Columns["IsIfChangeConfigServer2"];
                this.columnpushver = base.Columns["pushver"];
                this.columnchange_operator = base.Columns["change_operator"];
                this.columnchange_time = base.Columns["change_time"];
                this.columncreate_operator = base.Columns["create_operator"];
                this.columncreate_time = base.Columns["create_time"];
                this.columndelete_operator = base.Columns["delete_operator"];
                this.columndelete_time = base.Columns["delete_time"];
                this.columnstatus = base.Columns["status"];
                this.columndevice_type = base.Columns["device_type"];
                this.columnlast_activity = base.Columns["last_activity"];
                this.columntrans_times = base.Columns["trans_times"];
                this.columnTransInterval = base.Columns["TransInterval"];
                this.columnlog_stamp = base.Columns["log_stamp"];
                this.columnoplog_stamp = base.Columns["oplog_stamp"];
                this.columnphoto_stamp = base.Columns["photo_stamp"];
                this.columnUpdateDB = base.Columns["UpdateDB"];
                this.columndevice_name = base.Columns["device_name"];
                this.columntransaction_count = base.Columns["transaction_count"];
                this.columnmain_time = base.Columns["main_time"];
                this.columnmax_user_count = base.Columns["max_user_count"];
                this.columnmax_finger_count = base.Columns["max_finger_count"];
                this.columnmax_attlog_count = base.Columns["max_attlog_count"];
                this.columnalg_ver = base.Columns["alg_ver"];
                this.columnflash_size = base.Columns["flash_size"];
                this.columnfree_flash_size = base.Columns["free_flash_size"];
                this.columnlanguage = base.Columns["language"];
                this.columnlng_encode = base.Columns["lng_encode"];
                this.columnvolume = base.Columns["volume"];
                this.columnis_tft = base.Columns["is_tft"];
                this.columnplatform = base.Columns["platform"];
                this.columnbrightness = base.Columns["brightness"];
                this.columnoem_vendor = base.Columns["oem_vendor"];
                this.columncity = base.Columns["city"];
                this.columnAccFun = base.Columns["AccFun"];
                this.columnTZAdj = base.Columns["TZAdj"];
                this.columncomm_type = base.Columns["comm_type"];
                this.columnagent_ipaddress = base.Columns["agent_ipaddress"];
                this.columnsubnet_mask = base.Columns["subnet_mask"];
                this.columngateway = base.Columns["gateway"];
                this.columnarea_id = base.Columns["area_id"];
                this.columnacpanel_type = base.Columns["acpanel_type"];
                this.columnsync_time = base.Columns["sync_time"];
                this.columnfour_to_two = base.Columns["four_to_two"];
                this.columnvideo_login = base.Columns["video_login"];
                this.columnfp_mthreshold = base.Columns["fp_mthreshold"];
                this.columnFpversion = base.Columns["Fpversion"];
                this.columnmax_comm_size = base.Columns["max_comm_size"];
                this.columnmax_comm_count = base.Columns["max_comm_count"];
                this.columnrealtime = base.Columns["realtime"];
                this.columndelay = base.Columns["delay"];
                this.columnencrypt = base.Columns["encrypt"];
                this.columndstime_id = base.Columns["dstime_id"];
                this.columndoor_count = base.Columns["door_count"];
                this.columnreader_count = base.Columns["reader_count"];
                this.columnaux_in_count = base.Columns["aux_in_count"];
                this.columnaux_out_count = base.Columns["aux_out_count"];
                this.columnIsOnlyRFMachine = base.Columns["IsOnlyRFMachine"];
                this.columnalias = base.Columns["alias"];
                this.columnipaddress = base.Columns["ipaddress"];
                this.columncom_port = base.Columns["com_port"];
                this.columncom_address = base.Columns["com_address"];
                this.columnSimpleEventType = base.Columns["SimpleEventType"];
                this.columnFvFunOn = base.Columns["FvFunOn"];
                this.columnfvcount = base.Columns["fvcount"];
                this.columndeviceOption = base.Columns["deviceOption"];
                this.columnDevSDKType = base.Columns["DevSDKType"];
                this.columnUTableDesc = base.Columns["UTableDesc"];
                this.columnIsTFTMachine = base.Columns["IsTFTMachine"];
                this.columnPinWidth = base.Columns["PinWidth"];
                this.columnUserExtFmt = base.Columns["UserExtFmt"];
                this.columnFP1_NThreshold = base.Columns["FP1_NThreshold"];
                this.columnFP1_1Threshold = base.Columns["FP1_1Threshold"];
                this.columnFace1_NThreshold = base.Columns["Face1_NThreshold"];
                this.columnFace1_1Threshold = base.Columns["Face1_1Threshold"];
                this.columnOnly1_1Mode = base.Columns["Only1_1Mode"];
                this.columnOnlyCheckCard = base.Columns["OnlyCheckCard"];
                this.columnMifireMustRegistered = base.Columns["MifireMustRegistered"];
                this.columnRFCardOn = base.Columns["RFCardOn"];
                this.columnMifire = base.Columns["Mifire"];
                this.columnMifireId = base.Columns["MifireId"];
                this.columnNetOn = base.Columns["NetOn"];
                this.columnRS232On = base.Columns["RS232On"];
                this.columnRS485On = base.Columns["RS485On"];
                this.columnFreeType = base.Columns["FreeType"];
                this.columnFreeTime = base.Columns["FreeTime"];
                this.columnNoDisplayFun = base.Columns["NoDisplayFun"];
                this.columnVoiceTipsOn = base.Columns["VoiceTipsOn"];
                this.columnTOMenu = base.Columns["TOMenu"];
                this.columnStdVolume = base.Columns["StdVolume"];
                this.columnVRYVH = base.Columns["VRYVH"];
                this.columnKeyPadBeep = base.Columns["KeyPadBeep"];
                this.columnBatchUpdate = base.Columns["BatchUpdate"];
                this.columnCardFun = base.Columns["CardFun"];
                this.columnFaceFunOn = base.Columns["FaceFunOn"];
                this.columnFaceCount = base.Columns["FaceCount"];
                this.columnTimeAPBFunOn = base.Columns["TimeAPBFunOn"];
                this.columnFingerFunOn = base.Columns["FingerFunOn"];
                this.columnCompatOldFirmware = base.Columns["CompatOldFirmware"];
                this.columnParamValues = base.Columns["ParamValues"];
                this.columnWirelessSSID = base.Columns["WirelessSSID"];
                this.columnWirelessKey = base.Columns["WirelessKey"];
                this.columnWirelessAddr = base.Columns["WirelessAddr"];
                this.columnWirelessMask = base.Columns["WirelessMask"];
                this.columnWirelessGateWay = base.Columns["WirelessGateWay"];
                this.columnIsWireless = base.Columns["IsWireless"];
                this.columnmanagercount = base.Columns["managercount"];
                this.columnusercount = base.Columns["usercount"];
                this.columnfingercount = base.Columns["fingercount"];
                this.columnSecretCount = base.Columns["SecretCount"];
                this.columnACFun = base.Columns["ACFun"];
                this.columnBiometricType = base.Columns["BiometricType"];
                this.columnBiometricVersion = base.Columns["BiometricVersion"];
                this.columnBiometricMaxCount = base.Columns["BiometricMaxCount"];
                this.columnBiometricUsedCount = base.Columns["BiometricUsedCount"];
                this.columnWIFI = base.Columns["WIFI"];
                this.columnWIFIOn = base.Columns["WIFIOn"];
                this.columnWIFIDHCP = base.Columns["WIFIDHCP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMachineAlias = new global::System.Data.DataColumn("MachineAlias", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMachineAlias);
                this.columnConnectType = new global::System.Data.DataColumn("ConnectType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConnectType);
                this.columnIP = new global::System.Data.DataColumn("IP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP);
                this.columnSerialPort = new global::System.Data.DataColumn("SerialPort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialPort);
                this.columnPort = new global::System.Data.DataColumn("Port", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPort);
                this.columnBaudrate = new global::System.Data.DataColumn("Baudrate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaudrate);
                this.columnMachineNumber = new global::System.Data.DataColumn("MachineNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMachineNumber);
                this.columnIsHost = new global::System.Data.DataColumn("IsHost", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHost);
                this.columnEnabled = new global::System.Data.DataColumn("Enabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnabled);
                this.columnCommPassword = new global::System.Data.DataColumn("CommPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommPassword);
                this.columnUILanguage = new global::System.Data.DataColumn("UILanguage", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUILanguage);
                this.columnDateFormat = new global::System.Data.DataColumn("DateFormat", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFormat);
                this.columnInOutRecordWarn = new global::System.Data.DataColumn("InOutRecordWarn", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInOutRecordWarn);
                this.columnIdle = new global::System.Data.DataColumn("Idle", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdle);
                this.columnVoice = new global::System.Data.DataColumn("Voice", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoice);
                this.columnFirmwareVersion = new global::System.Data.DataColumn("FirmwareVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirmwareVersion);
                this.columnProductType = new global::System.Data.DataColumn("ProductType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductType);
                this.columnLockControl = new global::System.Data.DataColumn("LockControl", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLockControl);
                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurpose);
                this.columnProduceKind = new global::System.Data.DataColumn("ProduceKind", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduceKind);
                this.columnsn = new global::System.Data.DataColumn("sn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsn);
                this.columnPhotoStamp = new global::System.Data.DataColumn("PhotoStamp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhotoStamp);
                this.columnIsIfChangeConfigServer2 = new global::System.Data.DataColumn("IsIfChangeConfigServer2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsIfChangeConfigServer2);
                this.columnpushver = new global::System.Data.DataColumn("pushver", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpushver);
                this.columnchange_operator = new global::System.Data.DataColumn("change_operator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchange_operator);
                this.columnchange_time = new global::System.Data.DataColumn("change_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchange_time);
                this.columncreate_operator = new global::System.Data.DataColumn("create_operator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_operator);
                this.columncreate_time = new global::System.Data.DataColumn("create_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_time);
                this.columndelete_operator = new global::System.Data.DataColumn("delete_operator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndelete_operator);
                this.columndelete_time = new global::System.Data.DataColumn("delete_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndelete_time);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columndevice_type = new global::System.Data.DataColumn("device_type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndevice_type);
                this.columnlast_activity = new global::System.Data.DataColumn("last_activity", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_activity);
                this.columntrans_times = new global::System.Data.DataColumn("trans_times", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrans_times);
                this.columnTransInterval = new global::System.Data.DataColumn("TransInterval", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransInterval);
                this.columnlog_stamp = new global::System.Data.DataColumn("log_stamp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlog_stamp);
                this.columnoplog_stamp = new global::System.Data.DataColumn("oplog_stamp", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoplog_stamp);
                this.columnphoto_stamp = new global::System.Data.DataColumn("photo_stamp", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoto_stamp);
                this.columnUpdateDB = new global::System.Data.DataColumn("UpdateDB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDB);
                this.columndevice_name = new global::System.Data.DataColumn("device_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndevice_name);
                this.columntransaction_count = new global::System.Data.DataColumn("transaction_count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransaction_count);
                this.columnmain_time = new global::System.Data.DataColumn("main_time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmain_time);
                this.columnmax_user_count = new global::System.Data.DataColumn("max_user_count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_user_count);
                this.columnmax_finger_count = new global::System.Data.DataColumn("max_finger_count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_finger_count);
                this.columnmax_attlog_count = new global::System.Data.DataColumn("max_attlog_count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_attlog_count);
                this.columnalg_ver = new global::System.Data.DataColumn("alg_ver", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalg_ver);
                this.columnflash_size = new global::System.Data.DataColumn("flash_size", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnflash_size);
                this.columnfree_flash_size = new global::System.Data.DataColumn("free_flash_size", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfree_flash_size);
                this.columnlanguage = new global::System.Data.DataColumn("language", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlanguage);
                this.columnlng_encode = new global::System.Data.DataColumn("lng_encode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlng_encode);
                this.columnvolume = new global::System.Data.DataColumn("volume", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvolume);
                this.columnis_tft = new global::System.Data.DataColumn("is_tft", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_tft);
                this.columnplatform = new global::System.Data.DataColumn("platform", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplatform);
                this.columnbrightness = new global::System.Data.DataColumn("brightness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbrightness);
                this.columnoem_vendor = new global::System.Data.DataColumn("oem_vendor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoem_vendor);
                this.columncity = new global::System.Data.DataColumn("city", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncity);
                this.columnAccFun = new global::System.Data.DataColumn("AccFun", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccFun);
                this.columnTZAdj = new global::System.Data.DataColumn("TZAdj", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTZAdj);
                this.columncomm_type = new global::System.Data.DataColumn("comm_type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomm_type);
                this.columnagent_ipaddress = new global::System.Data.DataColumn("agent_ipaddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagent_ipaddress);
                this.columnsubnet_mask = new global::System.Data.DataColumn("subnet_mask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubnet_mask);
                this.columngateway = new global::System.Data.DataColumn("gateway", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngateway);
                this.columnarea_id = new global::System.Data.DataColumn("area_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnarea_id);
                this.columnacpanel_type = new global::System.Data.DataColumn("acpanel_type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnacpanel_type);
                this.columnsync_time = new global::System.Data.DataColumn("sync_time", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsync_time);
                this.columnfour_to_two = new global::System.Data.DataColumn("four_to_two", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfour_to_two);
                this.columnvideo_login = new global::System.Data.DataColumn("video_login", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvideo_login);
                this.columnfp_mthreshold = new global::System.Data.DataColumn("fp_mthreshold", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfp_mthreshold);
                this.columnFpversion = new global::System.Data.DataColumn("Fpversion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFpversion);
                this.columnmax_comm_size = new global::System.Data.DataColumn("max_comm_size", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_comm_size);
                this.columnmax_comm_count = new global::System.Data.DataColumn("max_comm_count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_comm_count);
                this.columnrealtime = new global::System.Data.DataColumn("realtime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrealtime);
                this.columndelay = new global::System.Data.DataColumn("delay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndelay);
                this.columnencrypt = new global::System.Data.DataColumn("encrypt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnencrypt);
                this.columndstime_id = new global::System.Data.DataColumn("dstime_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndstime_id);
                this.columndoor_count = new global::System.Data.DataColumn("door_count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoor_count);
                this.columnreader_count = new global::System.Data.DataColumn("reader_count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreader_count);
                this.columnaux_in_count = new global::System.Data.DataColumn("aux_in_count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaux_in_count);
                this.columnaux_out_count = new global::System.Data.DataColumn("aux_out_count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaux_out_count);
                this.columnIsOnlyRFMachine = new global::System.Data.DataColumn("IsOnlyRFMachine", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOnlyRFMachine);
                this.columnalias = new global::System.Data.DataColumn("alias", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalias);
                this.columnipaddress = new global::System.Data.DataColumn("ipaddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnipaddress);
                this.columncom_port = new global::System.Data.DataColumn("com_port", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncom_port);
                this.columncom_address = new global::System.Data.DataColumn("com_address", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncom_address);
                this.columnSimpleEventType = new global::System.Data.DataColumn("SimpleEventType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSimpleEventType);
                this.columnFvFunOn = new global::System.Data.DataColumn("FvFunOn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFvFunOn);
                this.columnfvcount = new global::System.Data.DataColumn("fvcount", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfvcount);
                this.columndeviceOption = new global::System.Data.DataColumn("deviceOption", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeviceOption);
                this.columnDevSDKType = new global::System.Data.DataColumn("DevSDKType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDevSDKType);
                this.columnUTableDesc = new global::System.Data.DataColumn("UTableDesc", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTableDesc);
                this.columnIsTFTMachine = new global::System.Data.DataColumn("IsTFTMachine", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTFTMachine);
                this.columnPinWidth = new global::System.Data.DataColumn("PinWidth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPinWidth);
                this.columnUserExtFmt = new global::System.Data.DataColumn("UserExtFmt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserExtFmt);
                this.columnFP1_NThreshold = new global::System.Data.DataColumn("FP1_NThreshold", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFP1_NThreshold);
                this.columnFP1_1Threshold = new global::System.Data.DataColumn("FP1_1Threshold", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFP1_1Threshold);
                this.columnFace1_NThreshold = new global::System.Data.DataColumn("Face1_NThreshold", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFace1_NThreshold);
                this.columnFace1_1Threshold = new global::System.Data.DataColumn("Face1_1Threshold", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFace1_1Threshold);
                this.columnOnly1_1Mode = new global::System.Data.DataColumn("Only1_1Mode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnly1_1Mode);
                this.columnOnlyCheckCard = new global::System.Data.DataColumn("OnlyCheckCard", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnlyCheckCard);
                this.columnMifireMustRegistered = new global::System.Data.DataColumn("MifireMustRegistered", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMifireMustRegistered);
                this.columnRFCardOn = new global::System.Data.DataColumn("RFCardOn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFCardOn);
                this.columnMifire = new global::System.Data.DataColumn("Mifire", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMifire);
                this.columnMifireId = new global::System.Data.DataColumn("MifireId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMifireId);
                this.columnNetOn = new global::System.Data.DataColumn("NetOn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetOn);
                this.columnRS232On = new global::System.Data.DataColumn("RS232On", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRS232On);
                this.columnRS485On = new global::System.Data.DataColumn("RS485On", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRS485On);
                this.columnFreeType = new global::System.Data.DataColumn("FreeType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeType);
                this.columnFreeTime = new global::System.Data.DataColumn("FreeTime", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeTime);
                this.columnNoDisplayFun = new global::System.Data.DataColumn("NoDisplayFun", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoDisplayFun);
                this.columnVoiceTipsOn = new global::System.Data.DataColumn("VoiceTipsOn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoiceTipsOn);
                this.columnTOMenu = new global::System.Data.DataColumn("TOMenu", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOMenu);
                this.columnStdVolume = new global::System.Data.DataColumn("StdVolume", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStdVolume);
                this.columnVRYVH = new global::System.Data.DataColumn("VRYVH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVRYVH);
                this.columnKeyPadBeep = new global::System.Data.DataColumn("KeyPadBeep", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyPadBeep);
                this.columnBatchUpdate = new global::System.Data.DataColumn("BatchUpdate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchUpdate);
                this.columnCardFun = new global::System.Data.DataColumn("CardFun", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardFun);
                this.columnFaceFunOn = new global::System.Data.DataColumn("FaceFunOn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaceFunOn);
                this.columnFaceCount = new global::System.Data.DataColumn("FaceCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaceCount);
                this.columnTimeAPBFunOn = new global::System.Data.DataColumn("TimeAPBFunOn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeAPBFunOn);
                this.columnFingerFunOn = new global::System.Data.DataColumn("FingerFunOn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFingerFunOn);
                this.columnCompatOldFirmware = new global::System.Data.DataColumn("CompatOldFirmware", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompatOldFirmware);
                this.columnParamValues = new global::System.Data.DataColumn("ParamValues", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParamValues);
                this.columnWirelessSSID = new global::System.Data.DataColumn("WirelessSSID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWirelessSSID);
                this.columnWirelessKey = new global::System.Data.DataColumn("WirelessKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWirelessKey);
                this.columnWirelessAddr = new global::System.Data.DataColumn("WirelessAddr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWirelessAddr);
                this.columnWirelessMask = new global::System.Data.DataColumn("WirelessMask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWirelessMask);
                this.columnWirelessGateWay = new global::System.Data.DataColumn("WirelessGateWay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWirelessGateWay);
                this.columnIsWireless = new global::System.Data.DataColumn("IsWireless", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsWireless);
                this.columnmanagercount = new global::System.Data.DataColumn("managercount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmanagercount);
                this.columnusercount = new global::System.Data.DataColumn("usercount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusercount);
                this.columnfingercount = new global::System.Data.DataColumn("fingercount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfingercount);
                this.columnSecretCount = new global::System.Data.DataColumn("SecretCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecretCount);
                this.columnACFun = new global::System.Data.DataColumn("ACFun", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACFun);
                this.columnBiometricType = new global::System.Data.DataColumn("BiometricType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiometricType);
                this.columnBiometricVersion = new global::System.Data.DataColumn("BiometricVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiometricVersion);
                this.columnBiometricMaxCount = new global::System.Data.DataColumn("BiometricMaxCount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiometricMaxCount);
                this.columnBiometricUsedCount = new global::System.Data.DataColumn("BiometricUsedCount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiometricUsedCount);
                this.columnWIFI = new global::System.Data.DataColumn("WIFI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWIFI);
                this.columnWIFIOn = new global::System.Data.DataColumn("WIFIOn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWIFIOn);
                this.columnWIFIDHCP = new global::System.Data.DataColumn("WIFIDHCP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWIFIDHCP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnMachineAlias.MaxLength = 20;
                this.columnIP.MaxLength = 20;
                this.columnMachineNumber.AllowDBNull = false;
                this.columnEnabled.AllowDBNull = false;
                this.columnCommPassword.MaxLength = 12;
                this.columnFirmwareVersion.MaxLength = 50;
                this.columnProductType.MaxLength = 20;
                this.columnsn.MaxLength = 20;
                this.columnPhotoStamp.MaxLength = 20;
                this.columnchange_operator.MaxLength = 50;
                this.columncreate_operator.MaxLength = 50;
                this.columndelete_operator.MaxLength = 50;
                this.columntrans_times.MaxLength = 50;
                this.columnlog_stamp.MaxLength = 50;
                this.columnUpdateDB.MaxLength = 50;
                this.columndevice_name.MaxLength = 50;
                this.columnmain_time.MaxLength = 50;
                this.columnalg_ver.MaxLength = 50;
                this.columnflash_size.MaxLength = 50;
                this.columnfree_flash_size.MaxLength = 50;
                this.columnlanguage.MaxLength = 50;
                this.columnlng_encode.MaxLength = 50;
                this.columnvolume.MaxLength = 50;
                this.columnis_tft.MaxLength = 50;
                this.columnplatform.MaxLength = 50;
                this.columnbrightness.MaxLength = 50;
                this.columnoem_vendor.MaxLength = 50;
                this.columncity.MaxLength = 50;
                this.columnagent_ipaddress.MaxLength = 50;
                this.columnsubnet_mask.MaxLength = 50;
                this.columngateway.MaxLength = 50;
                this.columnsync_time.AllowDBNull = false;
                this.columnfour_to_two.AllowDBNull = false;
                this.columnvideo_login.MaxLength = 50;
                this.columnrealtime.AllowDBNull = false;
                this.columnencrypt.AllowDBNull = false;
                this.columnalias.MaxLength = 50;
                this.columnipaddress.MaxLength = 50;
                this.columnFingerFunOn.MaxLength = 5;
                this.columnCompatOldFirmware.MaxLength = 5;
                this.columnWirelessSSID.MaxLength = 50;
                this.columnWirelessKey.MaxLength = 50;
                this.columnWirelessAddr.MaxLength = 50;
                this.columnWirelessMask.MaxLength = 50;
                this.columnWirelessGateWay.MaxLength = 50;
                this.columnBiometricType.MaxLength = 100;
                this.columnBiometricVersion.MaxLength = 100;
                this.columnBiometricMaxCount.MaxLength = 100;
                this.columnBiometricUsedCount.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MachinesRow NewMachinesRow() {
                return ((MachinesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MachinesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MachinesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MachinesRowChanged != null)) {
                    this.MachinesRowChanged(this, new MachinesRowChangeEvent(((MachinesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MachinesRowChanging != null)) {
                    this.MachinesRowChanging(this, new MachinesRowChangeEvent(((MachinesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MachinesRowDeleted != null)) {
                    this.MachinesRowDeleted(this, new MachinesRowChangeEvent(((MachinesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MachinesRowDeleting != null)) {
                    this.MachinesRowDeleting(this, new MachinesRowChangeEvent(((MachinesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMachinesRow(MachinesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AttendanceDataSet ds = new AttendanceDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MachinesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CHECKINOUTDataTable : global::System.Data.TypedTableBase<CHECKINOUTRow> {
            
            private global::System.Data.DataColumn columnUSERID;
            
            private global::System.Data.DataColumn columnCHECKTIME;
            
            private global::System.Data.DataColumn columnCHECKTYPE;
            
            private global::System.Data.DataColumn columnVERIFYCODE;
            
            private global::System.Data.DataColumn columnSENSORID;
            
            private global::System.Data.DataColumn columnLOGID;
            
            private global::System.Data.DataColumn columnMachineId;
            
            private global::System.Data.DataColumn columnUserExtFmt;
            
            private global::System.Data.DataColumn columnWorkCode;
            
            private global::System.Data.DataColumn columnMemoinfo;
            
            private global::System.Data.DataColumn columnsn;
            
            private global::System.Data.DataColumn columnisDone;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CHECKINOUTDataTable() {
                this.TableName = "CHECKINOUT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CHECKINOUTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CHECKINOUTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USERIDColumn {
                get {
                    return this.columnUSERID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHECKTIMEColumn {
                get {
                    return this.columnCHECKTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHECKTYPEColumn {
                get {
                    return this.columnCHECKTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VERIFYCODEColumn {
                get {
                    return this.columnVERIFYCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SENSORIDColumn {
                get {
                    return this.columnSENSORID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOGIDColumn {
                get {
                    return this.columnLOGID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MachineIdColumn {
                get {
                    return this.columnMachineId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserExtFmtColumn {
                get {
                    return this.columnUserExtFmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WorkCodeColumn {
                get {
                    return this.columnWorkCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MemoinfoColumn {
                get {
                    return this.columnMemoinfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn snColumn {
                get {
                    return this.columnsn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isDoneColumn {
                get {
                    return this.columnisDone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CHECKINOUTRow this[int index] {
                get {
                    return ((CHECKINOUTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CHECKINOUTRowChangeEventHandler CHECKINOUTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CHECKINOUTRowChangeEventHandler CHECKINOUTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CHECKINOUTRowChangeEventHandler CHECKINOUTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CHECKINOUTRowChangeEventHandler CHECKINOUTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCHECKINOUTRow(CHECKINOUTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CHECKINOUTRow AddCHECKINOUTRow(int USERID, System.DateTime CHECKTIME, string CHECKTYPE, int VERIFYCODE, string SENSORID, int MachineId, int UserExtFmt, int WorkCode, string Memoinfo, string sn, bool isDone) {
                CHECKINOUTRow rowCHECKINOUTRow = ((CHECKINOUTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        USERID,
                        CHECKTIME,
                        CHECKTYPE,
                        VERIFYCODE,
                        SENSORID,
                        null,
                        MachineId,
                        UserExtFmt,
                        WorkCode,
                        Memoinfo,
                        sn,
                        isDone};
                rowCHECKINOUTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCHECKINOUTRow);
                return rowCHECKINOUTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CHECKINOUTRow FindByLOGID(int LOGID) {
                return ((CHECKINOUTRow)(this.Rows.Find(new object[] {
                            LOGID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CHECKINOUTDataTable cln = ((CHECKINOUTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CHECKINOUTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnUSERID = base.Columns["USERID"];
                this.columnCHECKTIME = base.Columns["CHECKTIME"];
                this.columnCHECKTYPE = base.Columns["CHECKTYPE"];
                this.columnVERIFYCODE = base.Columns["VERIFYCODE"];
                this.columnSENSORID = base.Columns["SENSORID"];
                this.columnLOGID = base.Columns["LOGID"];
                this.columnMachineId = base.Columns["MachineId"];
                this.columnUserExtFmt = base.Columns["UserExtFmt"];
                this.columnWorkCode = base.Columns["WorkCode"];
                this.columnMemoinfo = base.Columns["Memoinfo"];
                this.columnsn = base.Columns["sn"];
                this.columnisDone = base.Columns["isDone"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnUSERID = new global::System.Data.DataColumn("USERID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERID);
                this.columnCHECKTIME = new global::System.Data.DataColumn("CHECKTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHECKTIME);
                this.columnCHECKTYPE = new global::System.Data.DataColumn("CHECKTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHECKTYPE);
                this.columnVERIFYCODE = new global::System.Data.DataColumn("VERIFYCODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVERIFYCODE);
                this.columnSENSORID = new global::System.Data.DataColumn("SENSORID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENSORID);
                this.columnLOGID = new global::System.Data.DataColumn("LOGID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGID);
                this.columnMachineId = new global::System.Data.DataColumn("MachineId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMachineId);
                this.columnUserExtFmt = new global::System.Data.DataColumn("UserExtFmt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserExtFmt);
                this.columnWorkCode = new global::System.Data.DataColumn("WorkCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkCode);
                this.columnMemoinfo = new global::System.Data.DataColumn("Memoinfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemoinfo);
                this.columnsn = new global::System.Data.DataColumn("sn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsn);
                this.columnisDone = new global::System.Data.DataColumn("isDone", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisDone);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLOGID}, true));
                this.columnUSERID.AllowDBNull = false;
                this.columnCHECKTIME.AllowDBNull = false;
                this.columnCHECKTYPE.MaxLength = 1;
                this.columnSENSORID.MaxLength = 5;
                this.columnLOGID.AutoIncrement = true;
                this.columnLOGID.AutoIncrementSeed = -1;
                this.columnLOGID.AutoIncrementStep = -1;
                this.columnLOGID.AllowDBNull = false;
                this.columnLOGID.ReadOnly = true;
                this.columnLOGID.Unique = true;
                this.columnMemoinfo.MaxLength = 20;
                this.columnsn.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CHECKINOUTRow NewCHECKINOUTRow() {
                return ((CHECKINOUTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CHECKINOUTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CHECKINOUTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHECKINOUTRowChanged != null)) {
                    this.CHECKINOUTRowChanged(this, new CHECKINOUTRowChangeEvent(((CHECKINOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHECKINOUTRowChanging != null)) {
                    this.CHECKINOUTRowChanging(this, new CHECKINOUTRowChangeEvent(((CHECKINOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHECKINOUTRowDeleted != null)) {
                    this.CHECKINOUTRowDeleted(this, new CHECKINOUTRowChangeEvent(((CHECKINOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHECKINOUTRowDeleting != null)) {
                    this.CHECKINOUTRowDeleting(this, new CHECKINOUTRowChangeEvent(((CHECKINOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCHECKINOUTRow(CHECKINOUTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AttendanceDataSet ds = new AttendanceDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CHECKINOUTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MachinesRow : global::System.Data.DataRow {
            
            private MachinesDataTable tableMachines;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MachinesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMachines = ((MachinesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableMachines.IDColumn]));
                }
                set {
                    this[this.tableMachines.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MachineAlias {
                get {
                    try {
                        return ((string)(this[this.tableMachines.MachineAliasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MachineAlias\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.MachineAliasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConnectType {
                get {
                    try {
                        return ((int)(this[this.tableMachines.ConnectTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConnectType\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.ConnectTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IP {
                get {
                    try {
                        return ((string)(this[this.tableMachines.IPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.IPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SerialPort {
                get {
                    try {
                        return ((int)(this[this.tableMachines.SerialPortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SerialPort\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.SerialPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Port {
                get {
                    try {
                        return ((int)(this[this.tableMachines.PortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Port\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.PortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Baudrate {
                get {
                    try {
                        return ((int)(this[this.tableMachines.BaudrateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Baudrate\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.BaudrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MachineNumber {
                get {
                    return ((int)(this[this.tableMachines.MachineNumberColumn]));
                }
                set {
                    this[this.tableMachines.MachineNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHost {
                get {
                    try {
                        return ((bool)(this[this.tableMachines.IsHostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsHost\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.IsHostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Enabled {
                get {
                    return ((bool)(this[this.tableMachines.EnabledColumn]));
                }
                set {
                    this[this.tableMachines.EnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CommPassword {
                get {
                    try {
                        return ((string)(this[this.tableMachines.CommPasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommPassword\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.CommPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short UILanguage {
                get {
                    try {
                        return ((short)(this[this.tableMachines.UILanguageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UILanguage\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.UILanguageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DateFormat {
                get {
                    try {
                        return ((short)(this[this.tableMachines.DateFormatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFormat\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.DateFormatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short InOutRecordWarn {
                get {
                    try {
                        return ((short)(this[this.tableMachines.InOutRecordWarnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InOutRecordWarn\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.InOutRecordWarnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Idle {
                get {
                    try {
                        return ((short)(this[this.tableMachines.IdleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Idle\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.IdleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Voice {
                get {
                    try {
                        return ((short)(this[this.tableMachines.VoiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Voice\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.VoiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FirmwareVersion {
                get {
                    try {
                        return ((string)(this[this.tableMachines.FirmwareVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirmwareVersion\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.FirmwareVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProductType {
                get {
                    try {
                        return ((string)(this[this.tableMachines.ProductTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductType\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.ProductTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short LockControl {
                get {
                    try {
                        return ((short)(this[this.tableMachines.LockControlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LockControl\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.LockControlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Purpose {
                get {
                    try {
                        return ((short)(this[this.tableMachines.PurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purpose\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.PurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProduceKind {
                get {
                    try {
                        return ((int)(this[this.tableMachines.ProduceKindColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProduceKind\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.ProduceKindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sn {
                get {
                    try {
                        return ((string)(this[this.tableMachines.snColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sn\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.snColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhotoStamp {
                get {
                    try {
                        return ((string)(this[this.tableMachines.PhotoStampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhotoStamp\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.PhotoStampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsIfChangeConfigServer2 {
                get {
                    try {
                        return ((int)(this[this.tableMachines.IsIfChangeConfigServer2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsIfChangeConfigServer2\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.IsIfChangeConfigServer2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int pushver {
                get {
                    try {
                        return ((int)(this[this.tableMachines.pushverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pushver\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.pushverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string change_operator {
                get {
                    try {
                        return ((string)(this[this.tableMachines.change_operatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'change_operator\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.change_operatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime change_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMachines.change_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'change_time\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.change_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string create_operator {
                get {
                    try {
                        return ((string)(this[this.tableMachines.create_operatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'create_operator\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.create_operatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime create_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMachines.create_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'create_time\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.create_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string delete_operator {
                get {
                    try {
                        return ((string)(this[this.tableMachines.delete_operatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'delete_operator\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.delete_operatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime delete_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMachines.delete_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'delete_time\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.delete_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int status {
                get {
                    try {
                        return ((int)(this[this.tableMachines.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int device_type {
                get {
                    try {
                        return ((int)(this[this.tableMachines.device_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'device_type\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.device_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime last_activity {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMachines.last_activityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'last_activity\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.last_activityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string trans_times {
                get {
                    try {
                        return ((string)(this[this.tableMachines.trans_timesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trans_times\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.trans_timesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TransInterval {
                get {
                    try {
                        return ((int)(this[this.tableMachines.TransIntervalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransInterval\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.TransIntervalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string log_stamp {
                get {
                    try {
                        return ((string)(this[this.tableMachines.log_stampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'log_stamp\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.log_stampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] oplog_stamp {
                get {
                    try {
                        return ((byte[])(this[this.tableMachines.oplog_stampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oplog_stamp\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.oplog_stampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] photo_stamp {
                get {
                    try {
                        return ((byte[])(this[this.tableMachines.photo_stampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'photo_stamp\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.photo_stampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateDB {
                get {
                    try {
                        return ((string)(this[this.tableMachines.UpdateDBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateDB\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.UpdateDBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string device_name {
                get {
                    try {
                        return ((string)(this[this.tableMachines.device_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'device_name\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.device_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int transaction_count {
                get {
                    try {
                        return ((int)(this[this.tableMachines.transaction_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'transaction_count\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.transaction_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string main_time {
                get {
                    try {
                        return ((string)(this[this.tableMachines.main_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'main_time\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.main_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int max_user_count {
                get {
                    try {
                        return ((int)(this[this.tableMachines.max_user_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'max_user_count\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.max_user_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int max_finger_count {
                get {
                    try {
                        return ((int)(this[this.tableMachines.max_finger_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'max_finger_count\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.max_finger_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int max_attlog_count {
                get {
                    try {
                        return ((int)(this[this.tableMachines.max_attlog_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'max_attlog_count\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.max_attlog_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string alg_ver {
                get {
                    try {
                        return ((string)(this[this.tableMachines.alg_verColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alg_ver\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.alg_verColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string flash_size {
                get {
                    try {
                        return ((string)(this[this.tableMachines.flash_sizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'flash_size\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.flash_sizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string free_flash_size {
                get {
                    try {
                        return ((string)(this[this.tableMachines.free_flash_sizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'free_flash_size\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.free_flash_sizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string language {
                get {
                    try {
                        return ((string)(this[this.tableMachines.languageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'language\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.languageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string lng_encode {
                get {
                    try {
                        return ((string)(this[this.tableMachines.lng_encodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lng_encode\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.lng_encodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string volume {
                get {
                    try {
                        return ((string)(this[this.tableMachines.volumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'volume\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.volumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string is_tft {
                get {
                    try {
                        return ((string)(this[this.tableMachines.is_tftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'is_tft\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.is_tftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string platform {
                get {
                    try {
                        return ((string)(this[this.tableMachines.platformColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'platform\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.platformColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string brightness {
                get {
                    try {
                        return ((string)(this[this.tableMachines.brightnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'brightness\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.brightnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string oem_vendor {
                get {
                    try {
                        return ((string)(this[this.tableMachines.oem_vendorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oem_vendor\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.oem_vendorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string city {
                get {
                    try {
                        return ((string)(this[this.tableMachines.cityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'city\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.cityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AccFun {
                get {
                    try {
                        return ((int)(this[this.tableMachines.AccFunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccFun\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.AccFunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TZAdj {
                get {
                    try {
                        return ((int)(this[this.tableMachines.TZAdjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TZAdj\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.TZAdjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int comm_type {
                get {
                    try {
                        return ((int)(this[this.tableMachines.comm_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'comm_type\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.comm_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string agent_ipaddress {
                get {
                    try {
                        return ((string)(this[this.tableMachines.agent_ipaddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agent_ipaddress\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.agent_ipaddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string subnet_mask {
                get {
                    try {
                        return ((string)(this[this.tableMachines.subnet_maskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subnet_mask\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.subnet_maskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string gateway {
                get {
                    try {
                        return ((string)(this[this.tableMachines.gatewayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gateway\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.gatewayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int area_id {
                get {
                    try {
                        return ((int)(this[this.tableMachines.area_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'area_id\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.area_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int acpanel_type {
                get {
                    try {
                        return ((int)(this[this.tableMachines.acpanel_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'acpanel_type\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.acpanel_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool sync_time {
                get {
                    return ((bool)(this[this.tableMachines.sync_timeColumn]));
                }
                set {
                    this[this.tableMachines.sync_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool four_to_two {
                get {
                    return ((bool)(this[this.tableMachines.four_to_twoColumn]));
                }
                set {
                    this[this.tableMachines.four_to_twoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string video_login {
                get {
                    try {
                        return ((string)(this[this.tableMachines.video_loginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'video_login\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.video_loginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fp_mthreshold {
                get {
                    try {
                        return ((int)(this[this.tableMachines.fp_mthresholdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fp_mthreshold\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.fp_mthresholdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Fpversion {
                get {
                    try {
                        return ((int)(this[this.tableMachines.FpversionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fpversion\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.FpversionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int max_comm_size {
                get {
                    try {
                        return ((int)(this[this.tableMachines.max_comm_sizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'max_comm_size\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.max_comm_sizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int max_comm_count {
                get {
                    try {
                        return ((int)(this[this.tableMachines.max_comm_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'max_comm_count\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.max_comm_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool realtime {
                get {
                    return ((bool)(this[this.tableMachines.realtimeColumn]));
                }
                set {
                    this[this.tableMachines.realtimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int delay {
                get {
                    try {
                        return ((int)(this[this.tableMachines.delayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'delay\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.delayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool encrypt {
                get {
                    return ((bool)(this[this.tableMachines.encryptColumn]));
                }
                set {
                    this[this.tableMachines.encryptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int dstime_id {
                get {
                    try {
                        return ((int)(this[this.tableMachines.dstime_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dstime_id\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.dstime_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int door_count {
                get {
                    try {
                        return ((int)(this[this.tableMachines.door_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'door_count\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.door_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int reader_count {
                get {
                    try {
                        return ((int)(this[this.tableMachines.reader_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reader_count\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.reader_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int aux_in_count {
                get {
                    try {
                        return ((int)(this[this.tableMachines.aux_in_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aux_in_count\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.aux_in_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int aux_out_count {
                get {
                    try {
                        return ((int)(this[this.tableMachines.aux_out_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aux_out_count\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.aux_out_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsOnlyRFMachine {
                get {
                    try {
                        return ((int)(this[this.tableMachines.IsOnlyRFMachineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOnlyRFMachine\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.IsOnlyRFMachineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string alias {
                get {
                    try {
                        return ((string)(this[this.tableMachines.aliasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alias\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.aliasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ipaddress {
                get {
                    try {
                        return ((string)(this[this.tableMachines.ipaddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ipaddress\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.ipaddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short com_port {
                get {
                    try {
                        return ((short)(this[this.tableMachines.com_portColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'com_port\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.com_portColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short com_address {
                get {
                    try {
                        return ((short)(this[this.tableMachines.com_addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'com_address\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.com_addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SimpleEventType {
                get {
                    try {
                        return ((int)(this[this.tableMachines.SimpleEventTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SimpleEventType\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.SimpleEventTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FvFunOn {
                get {
                    try {
                        return ((int)(this[this.tableMachines.FvFunOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FvFunOn\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.FvFunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short fvcount {
                get {
                    try {
                        return ((short)(this[this.tableMachines.fvcountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fvcount\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.fvcountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] deviceOption {
                get {
                    try {
                        return ((byte[])(this[this.tableMachines.deviceOptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deviceOption\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.deviceOptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DevSDKType {
                get {
                    try {
                        return ((int)(this[this.tableMachines.DevSDKTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DevSDKType\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.DevSDKTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] UTableDesc {
                get {
                    try {
                        return ((byte[])(this[this.tableMachines.UTableDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UTableDesc\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.UTableDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTFTMachine {
                get {
                    try {
                        return ((bool)(this[this.tableMachines.IsTFTMachineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsTFTMachine\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.IsTFTMachineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PinWidth {
                get {
                    try {
                        return ((int)(this[this.tableMachines.PinWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PinWidth\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.PinWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UserExtFmt {
                get {
                    try {
                        return ((int)(this[this.tableMachines.UserExtFmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserExtFmt\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.UserExtFmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FP1_NThreshold {
                get {
                    try {
                        return ((int)(this[this.tableMachines.FP1_NThresholdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FP1_NThreshold\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.FP1_NThresholdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FP1_1Threshold {
                get {
                    try {
                        return ((int)(this[this.tableMachines.FP1_1ThresholdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FP1_1Threshold\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.FP1_1ThresholdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Face1_NThreshold {
                get {
                    try {
                        return ((int)(this[this.tableMachines.Face1_NThresholdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Face1_NThreshold\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.Face1_NThresholdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Face1_1Threshold {
                get {
                    try {
                        return ((int)(this[this.tableMachines.Face1_1ThresholdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Face1_1Threshold\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.Face1_1ThresholdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Only1_1Mode {
                get {
                    try {
                        return ((int)(this[this.tableMachines.Only1_1ModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Only1_1Mode\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.Only1_1ModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OnlyCheckCard {
                get {
                    try {
                        return ((int)(this[this.tableMachines.OnlyCheckCardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OnlyCheckCard\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.OnlyCheckCardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MifireMustRegistered {
                get {
                    try {
                        return ((int)(this[this.tableMachines.MifireMustRegisteredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MifireMustRegistered\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.MifireMustRegisteredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RFCardOn {
                get {
                    try {
                        return ((int)(this[this.tableMachines.RFCardOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RFCardOn\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.RFCardOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mifire {
                get {
                    try {
                        return ((int)(this[this.tableMachines.MifireColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mifire\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.MifireColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MifireId {
                get {
                    try {
                        return ((int)(this[this.tableMachines.MifireIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MifireId\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.MifireIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NetOn {
                get {
                    try {
                        return ((int)(this[this.tableMachines.NetOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetOn\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.NetOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RS232On {
                get {
                    try {
                        return ((int)(this[this.tableMachines.RS232OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RS232On\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.RS232OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RS485On {
                get {
                    try {
                        return ((int)(this[this.tableMachines.RS485OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RS485On\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.RS485OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeType {
                get {
                    try {
                        return ((int)(this[this.tableMachines.FreeTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreeType\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.FreeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FreeTime {
                get {
                    try {
                        return ((int)(this[this.tableMachines.FreeTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreeTime\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.FreeTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NoDisplayFun {
                get {
                    try {
                        return ((int)(this[this.tableMachines.NoDisplayFunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoDisplayFun\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.NoDisplayFunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VoiceTipsOn {
                get {
                    try {
                        return ((int)(this[this.tableMachines.VoiceTipsOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoiceTipsOn\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.VoiceTipsOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TOMenu {
                get {
                    try {
                        return ((int)(this[this.tableMachines.TOMenuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOMenu\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.TOMenuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StdVolume {
                get {
                    try {
                        return ((int)(this[this.tableMachines.StdVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StdVolume\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.StdVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VRYVH {
                get {
                    try {
                        return ((int)(this[this.tableMachines.VRYVHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VRYVH\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.VRYVHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KeyPadBeep {
                get {
                    try {
                        return ((int)(this[this.tableMachines.KeyPadBeepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KeyPadBeep\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.KeyPadBeepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BatchUpdate {
                get {
                    try {
                        return ((int)(this[this.tableMachines.BatchUpdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchUpdate\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.BatchUpdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CardFun {
                get {
                    try {
                        return ((int)(this[this.tableMachines.CardFunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CardFun\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.CardFunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FaceFunOn {
                get {
                    try {
                        return ((int)(this[this.tableMachines.FaceFunOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FaceFunOn\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.FaceFunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FaceCount {
                get {
                    try {
                        return ((int)(this[this.tableMachines.FaceCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FaceCount\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.FaceCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TimeAPBFunOn {
                get {
                    try {
                        return ((int)(this[this.tableMachines.TimeAPBFunOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeAPBFunOn\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.TimeAPBFunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FingerFunOn {
                get {
                    try {
                        return ((string)(this[this.tableMachines.FingerFunOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FingerFunOn\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.FingerFunOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CompatOldFirmware {
                get {
                    try {
                        return ((string)(this[this.tableMachines.CompatOldFirmwareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompatOldFirmware\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.CompatOldFirmwareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] ParamValues {
                get {
                    try {
                        return ((byte[])(this[this.tableMachines.ParamValuesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParamValues\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.ParamValuesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WirelessSSID {
                get {
                    try {
                        return ((string)(this[this.tableMachines.WirelessSSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WirelessSSID\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.WirelessSSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WirelessKey {
                get {
                    try {
                        return ((string)(this[this.tableMachines.WirelessKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WirelessKey\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.WirelessKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WirelessAddr {
                get {
                    try {
                        return ((string)(this[this.tableMachines.WirelessAddrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WirelessAddr\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.WirelessAddrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WirelessMask {
                get {
                    try {
                        return ((string)(this[this.tableMachines.WirelessMaskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WirelessMask\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.WirelessMaskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WirelessGateWay {
                get {
                    try {
                        return ((string)(this[this.tableMachines.WirelessGateWayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WirelessGateWay\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.WirelessGateWayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWireless {
                get {
                    try {
                        return ((bool)(this[this.tableMachines.IsWirelessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsWireless\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.IsWirelessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int managercount {
                get {
                    try {
                        return ((int)(this[this.tableMachines.managercountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'managercount\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.managercountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int usercount {
                get {
                    try {
                        return ((int)(this[this.tableMachines.usercountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'usercount\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.usercountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fingercount {
                get {
                    try {
                        return ((int)(this[this.tableMachines.fingercountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fingercount\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.fingercountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SecretCount {
                get {
                    try {
                        return ((int)(this[this.tableMachines.SecretCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecretCount\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.SecretCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ACFun {
                get {
                    try {
                        return ((int)(this[this.tableMachines.ACFunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACFun\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.ACFunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BiometricType {
                get {
                    try {
                        return ((string)(this[this.tableMachines.BiometricTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiometricType\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.BiometricTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BiometricVersion {
                get {
                    try {
                        return ((string)(this[this.tableMachines.BiometricVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiometricVersion\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.BiometricVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BiometricMaxCount {
                get {
                    try {
                        return ((string)(this[this.tableMachines.BiometricMaxCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiometricMaxCount\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.BiometricMaxCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BiometricUsedCount {
                get {
                    try {
                        return ((string)(this[this.tableMachines.BiometricUsedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiometricUsedCount\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.BiometricUsedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WIFI {
                get {
                    try {
                        return ((int)(this[this.tableMachines.WIFIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WIFI\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.WIFIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WIFIOn {
                get {
                    try {
                        return ((int)(this[this.tableMachines.WIFIOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WIFIOn\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.WIFIOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WIFIDHCP {
                get {
                    try {
                        return ((int)(this[this.tableMachines.WIFIDHCPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WIFIDHCP\' in table \'Machines\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMachines.WIFIDHCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMachineAliasNull() {
                return this.IsNull(this.tableMachines.MachineAliasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMachineAliasNull() {
                this[this.tableMachines.MachineAliasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConnectTypeNull() {
                return this.IsNull(this.tableMachines.ConnectTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConnectTypeNull() {
                this[this.tableMachines.ConnectTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIPNull() {
                return this.IsNull(this.tableMachines.IPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIPNull() {
                this[this.tableMachines.IPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSerialPortNull() {
                return this.IsNull(this.tableMachines.SerialPortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSerialPortNull() {
                this[this.tableMachines.SerialPortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPortNull() {
                return this.IsNull(this.tableMachines.PortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPortNull() {
                this[this.tableMachines.PortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaudrateNull() {
                return this.IsNull(this.tableMachines.BaudrateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaudrateNull() {
                this[this.tableMachines.BaudrateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsHostNull() {
                return this.IsNull(this.tableMachines.IsHostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsHostNull() {
                this[this.tableMachines.IsHostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommPasswordNull() {
                return this.IsNull(this.tableMachines.CommPasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommPasswordNull() {
                this[this.tableMachines.CommPasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUILanguageNull() {
                return this.IsNull(this.tableMachines.UILanguageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUILanguageNull() {
                this[this.tableMachines.UILanguageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateFormatNull() {
                return this.IsNull(this.tableMachines.DateFormatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateFormatNull() {
                this[this.tableMachines.DateFormatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInOutRecordWarnNull() {
                return this.IsNull(this.tableMachines.InOutRecordWarnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInOutRecordWarnNull() {
                this[this.tableMachines.InOutRecordWarnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdleNull() {
                return this.IsNull(this.tableMachines.IdleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdleNull() {
                this[this.tableMachines.IdleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoiceNull() {
                return this.IsNull(this.tableMachines.VoiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoiceNull() {
                this[this.tableMachines.VoiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFirmwareVersionNull() {
                return this.IsNull(this.tableMachines.FirmwareVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFirmwareVersionNull() {
                this[this.tableMachines.FirmwareVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProductTypeNull() {
                return this.IsNull(this.tableMachines.ProductTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProductTypeNull() {
                this[this.tableMachines.ProductTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLockControlNull() {
                return this.IsNull(this.tableMachines.LockControlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLockControlNull() {
                this[this.tableMachines.LockControlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurposeNull() {
                return this.IsNull(this.tableMachines.PurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurposeNull() {
                this[this.tableMachines.PurposeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProduceKindNull() {
                return this.IsNull(this.tableMachines.ProduceKindColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProduceKindNull() {
                this[this.tableMachines.ProduceKindColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssnNull() {
                return this.IsNull(this.tableMachines.snColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsnNull() {
                this[this.tableMachines.snColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhotoStampNull() {
                return this.IsNull(this.tableMachines.PhotoStampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhotoStampNull() {
                this[this.tableMachines.PhotoStampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsIfChangeConfigServer2Null() {
                return this.IsNull(this.tableMachines.IsIfChangeConfigServer2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsIfChangeConfigServer2Null() {
                this[this.tableMachines.IsIfChangeConfigServer2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspushverNull() {
                return this.IsNull(this.tableMachines.pushverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpushverNull() {
                this[this.tableMachines.pushverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ischange_operatorNull() {
                return this.IsNull(this.tableMachines.change_operatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setchange_operatorNull() {
                this[this.tableMachines.change_operatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ischange_timeNull() {
                return this.IsNull(this.tableMachines.change_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setchange_timeNull() {
                this[this.tableMachines.change_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscreate_operatorNull() {
                return this.IsNull(this.tableMachines.create_operatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcreate_operatorNull() {
                this[this.tableMachines.create_operatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscreate_timeNull() {
                return this.IsNull(this.tableMachines.create_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcreate_timeNull() {
                this[this.tableMachines.create_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdelete_operatorNull() {
                return this.IsNull(this.tableMachines.delete_operatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdelete_operatorNull() {
                this[this.tableMachines.delete_operatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdelete_timeNull() {
                return this.IsNull(this.tableMachines.delete_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdelete_timeNull() {
                this[this.tableMachines.delete_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstatusNull() {
                return this.IsNull(this.tableMachines.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstatusNull() {
                this[this.tableMachines.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdevice_typeNull() {
                return this.IsNull(this.tableMachines.device_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdevice_typeNull() {
                this[this.tableMachines.device_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Islast_activityNull() {
                return this.IsNull(this.tableMachines.last_activityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setlast_activityNull() {
                this[this.tableMachines.last_activityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istrans_timesNull() {
                return this.IsNull(this.tableMachines.trans_timesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settrans_timesNull() {
                this[this.tableMachines.trans_timesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransIntervalNull() {
                return this.IsNull(this.tableMachines.TransIntervalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransIntervalNull() {
                this[this.tableMachines.TransIntervalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Islog_stampNull() {
                return this.IsNull(this.tableMachines.log_stampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setlog_stampNull() {
                this[this.tableMachines.log_stampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isoplog_stampNull() {
                return this.IsNull(this.tableMachines.oplog_stampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setoplog_stampNull() {
                this[this.tableMachines.oplog_stampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isphoto_stampNull() {
                return this.IsNull(this.tableMachines.photo_stampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setphoto_stampNull() {
                this[this.tableMachines.photo_stampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateDBNull() {
                return this.IsNull(this.tableMachines.UpdateDBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateDBNull() {
                this[this.tableMachines.UpdateDBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdevice_nameNull() {
                return this.IsNull(this.tableMachines.device_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdevice_nameNull() {
                this[this.tableMachines.device_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istransaction_countNull() {
                return this.IsNull(this.tableMachines.transaction_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settransaction_countNull() {
                this[this.tableMachines.transaction_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismain_timeNull() {
                return this.IsNull(this.tableMachines.main_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmain_timeNull() {
                this[this.tableMachines.main_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismax_user_countNull() {
                return this.IsNull(this.tableMachines.max_user_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmax_user_countNull() {
                this[this.tableMachines.max_user_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismax_finger_countNull() {
                return this.IsNull(this.tableMachines.max_finger_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmax_finger_countNull() {
                this[this.tableMachines.max_finger_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismax_attlog_countNull() {
                return this.IsNull(this.tableMachines.max_attlog_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmax_attlog_countNull() {
                this[this.tableMachines.max_attlog_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isalg_verNull() {
                return this.IsNull(this.tableMachines.alg_verColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setalg_verNull() {
                this[this.tableMachines.alg_verColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isflash_sizeNull() {
                return this.IsNull(this.tableMachines.flash_sizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setflash_sizeNull() {
                this[this.tableMachines.flash_sizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isfree_flash_sizeNull() {
                return this.IsNull(this.tableMachines.free_flash_sizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setfree_flash_sizeNull() {
                this[this.tableMachines.free_flash_sizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslanguageNull() {
                return this.IsNull(this.tableMachines.languageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlanguageNull() {
                this[this.tableMachines.languageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Islng_encodeNull() {
                return this.IsNull(this.tableMachines.lng_encodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setlng_encodeNull() {
                this[this.tableMachines.lng_encodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsvolumeNull() {
                return this.IsNull(this.tableMachines.volumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetvolumeNull() {
                this[this.tableMachines.volumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isis_tftNull() {
                return this.IsNull(this.tableMachines.is_tftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setis_tftNull() {
                this[this.tableMachines.is_tftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsplatformNull() {
                return this.IsNull(this.tableMachines.platformColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetplatformNull() {
                this[this.tableMachines.platformColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbrightnessNull() {
                return this.IsNull(this.tableMachines.brightnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbrightnessNull() {
                this[this.tableMachines.brightnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isoem_vendorNull() {
                return this.IsNull(this.tableMachines.oem_vendorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setoem_vendorNull() {
                this[this.tableMachines.oem_vendorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscityNull() {
                return this.IsNull(this.tableMachines.cityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcityNull() {
                this[this.tableMachines.cityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccFunNull() {
                return this.IsNull(this.tableMachines.AccFunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccFunNull() {
                this[this.tableMachines.AccFunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTZAdjNull() {
                return this.IsNull(this.tableMachines.TZAdjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTZAdjNull() {
                this[this.tableMachines.TZAdjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscomm_typeNull() {
                return this.IsNull(this.tableMachines.comm_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcomm_typeNull() {
                this[this.tableMachines.comm_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isagent_ipaddressNull() {
                return this.IsNull(this.tableMachines.agent_ipaddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setagent_ipaddressNull() {
                this[this.tableMachines.agent_ipaddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issubnet_maskNull() {
                return this.IsNull(this.tableMachines.subnet_maskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsubnet_maskNull() {
                this[this.tableMachines.subnet_maskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsgatewayNull() {
                return this.IsNull(this.tableMachines.gatewayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetgatewayNull() {
                this[this.tableMachines.gatewayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isarea_idNull() {
                return this.IsNull(this.tableMachines.area_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setarea_idNull() {
                this[this.tableMachines.area_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isacpanel_typeNull() {
                return this.IsNull(this.tableMachines.acpanel_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setacpanel_typeNull() {
                this[this.tableMachines.acpanel_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isvideo_loginNull() {
                return this.IsNull(this.tableMachines.video_loginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setvideo_loginNull() {
                this[this.tableMachines.video_loginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isfp_mthresholdNull() {
                return this.IsNull(this.tableMachines.fp_mthresholdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setfp_mthresholdNull() {
                this[this.tableMachines.fp_mthresholdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFpversionNull() {
                return this.IsNull(this.tableMachines.FpversionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFpversionNull() {
                this[this.tableMachines.FpversionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismax_comm_sizeNull() {
                return this.IsNull(this.tableMachines.max_comm_sizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmax_comm_sizeNull() {
                this[this.tableMachines.max_comm_sizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ismax_comm_countNull() {
                return this.IsNull(this.tableMachines.max_comm_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setmax_comm_countNull() {
                this[this.tableMachines.max_comm_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdelayNull() {
                return this.IsNull(this.tableMachines.delayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdelayNull() {
                this[this.tableMachines.delayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdstime_idNull() {
                return this.IsNull(this.tableMachines.dstime_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdstime_idNull() {
                this[this.tableMachines.dstime_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isdoor_countNull() {
                return this.IsNull(this.tableMachines.door_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setdoor_countNull() {
                this[this.tableMachines.door_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isreader_countNull() {
                return this.IsNull(this.tableMachines.reader_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setreader_countNull() {
                this[this.tableMachines.reader_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isaux_in_countNull() {
                return this.IsNull(this.tableMachines.aux_in_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setaux_in_countNull() {
                this[this.tableMachines.aux_in_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isaux_out_countNull() {
                return this.IsNull(this.tableMachines.aux_out_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setaux_out_countNull() {
                this[this.tableMachines.aux_out_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsOnlyRFMachineNull() {
                return this.IsNull(this.tableMachines.IsOnlyRFMachineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsOnlyRFMachineNull() {
                this[this.tableMachines.IsOnlyRFMachineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsaliasNull() {
                return this.IsNull(this.tableMachines.aliasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetaliasNull() {
                this[this.tableMachines.aliasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsipaddressNull() {
                return this.IsNull(this.tableMachines.ipaddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetipaddressNull() {
                this[this.tableMachines.ipaddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscom_portNull() {
                return this.IsNull(this.tableMachines.com_portColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcom_portNull() {
                this[this.tableMachines.com_portColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscom_addressNull() {
                return this.IsNull(this.tableMachines.com_addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcom_addressNull() {
                this[this.tableMachines.com_addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSimpleEventTypeNull() {
                return this.IsNull(this.tableMachines.SimpleEventTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSimpleEventTypeNull() {
                this[this.tableMachines.SimpleEventTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFvFunOnNull() {
                return this.IsNull(this.tableMachines.FvFunOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFvFunOnNull() {
                this[this.tableMachines.FvFunOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfvcountNull() {
                return this.IsNull(this.tableMachines.fvcountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfvcountNull() {
                this[this.tableMachines.fvcountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdeviceOptionNull() {
                return this.IsNull(this.tableMachines.deviceOptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdeviceOptionNull() {
                this[this.tableMachines.deviceOptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDevSDKTypeNull() {
                return this.IsNull(this.tableMachines.DevSDKTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDevSDKTypeNull() {
                this[this.tableMachines.DevSDKTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUTableDescNull() {
                return this.IsNull(this.tableMachines.UTableDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUTableDescNull() {
                this[this.tableMachines.UTableDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsTFTMachineNull() {
                return this.IsNull(this.tableMachines.IsTFTMachineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsTFTMachineNull() {
                this[this.tableMachines.IsTFTMachineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPinWidthNull() {
                return this.IsNull(this.tableMachines.PinWidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPinWidthNull() {
                this[this.tableMachines.PinWidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserExtFmtNull() {
                return this.IsNull(this.tableMachines.UserExtFmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserExtFmtNull() {
                this[this.tableMachines.UserExtFmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFP1_NThresholdNull() {
                return this.IsNull(this.tableMachines.FP1_NThresholdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFP1_NThresholdNull() {
                this[this.tableMachines.FP1_NThresholdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFP1_1ThresholdNull() {
                return this.IsNull(this.tableMachines.FP1_1ThresholdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFP1_1ThresholdNull() {
                this[this.tableMachines.FP1_1ThresholdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFace1_NThresholdNull() {
                return this.IsNull(this.tableMachines.Face1_NThresholdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFace1_NThresholdNull() {
                this[this.tableMachines.Face1_NThresholdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFace1_1ThresholdNull() {
                return this.IsNull(this.tableMachines.Face1_1ThresholdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFace1_1ThresholdNull() {
                this[this.tableMachines.Face1_1ThresholdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOnly1_1ModeNull() {
                return this.IsNull(this.tableMachines.Only1_1ModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOnly1_1ModeNull() {
                this[this.tableMachines.Only1_1ModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOnlyCheckCardNull() {
                return this.IsNull(this.tableMachines.OnlyCheckCardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOnlyCheckCardNull() {
                this[this.tableMachines.OnlyCheckCardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMifireMustRegisteredNull() {
                return this.IsNull(this.tableMachines.MifireMustRegisteredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMifireMustRegisteredNull() {
                this[this.tableMachines.MifireMustRegisteredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRFCardOnNull() {
                return this.IsNull(this.tableMachines.RFCardOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRFCardOnNull() {
                this[this.tableMachines.RFCardOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMifireNull() {
                return this.IsNull(this.tableMachines.MifireColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMifireNull() {
                this[this.tableMachines.MifireColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMifireIdNull() {
                return this.IsNull(this.tableMachines.MifireIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMifireIdNull() {
                this[this.tableMachines.MifireIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetOnNull() {
                return this.IsNull(this.tableMachines.NetOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetOnNull() {
                this[this.tableMachines.NetOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRS232OnNull() {
                return this.IsNull(this.tableMachines.RS232OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRS232OnNull() {
                this[this.tableMachines.RS232OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRS485OnNull() {
                return this.IsNull(this.tableMachines.RS485OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRS485OnNull() {
                this[this.tableMachines.RS485OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeTypeNull() {
                return this.IsNull(this.tableMachines.FreeTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeTypeNull() {
                this[this.tableMachines.FreeTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreeTimeNull() {
                return this.IsNull(this.tableMachines.FreeTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreeTimeNull() {
                this[this.tableMachines.FreeTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNoDisplayFunNull() {
                return this.IsNull(this.tableMachines.NoDisplayFunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNoDisplayFunNull() {
                this[this.tableMachines.NoDisplayFunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoiceTipsOnNull() {
                return this.IsNull(this.tableMachines.VoiceTipsOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoiceTipsOnNull() {
                this[this.tableMachines.VoiceTipsOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOMenuNull() {
                return this.IsNull(this.tableMachines.TOMenuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOMenuNull() {
                this[this.tableMachines.TOMenuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStdVolumeNull() {
                return this.IsNull(this.tableMachines.StdVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStdVolumeNull() {
                this[this.tableMachines.StdVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVRYVHNull() {
                return this.IsNull(this.tableMachines.VRYVHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVRYVHNull() {
                this[this.tableMachines.VRYVHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKeyPadBeepNull() {
                return this.IsNull(this.tableMachines.KeyPadBeepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKeyPadBeepNull() {
                this[this.tableMachines.KeyPadBeepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBatchUpdateNull() {
                return this.IsNull(this.tableMachines.BatchUpdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBatchUpdateNull() {
                this[this.tableMachines.BatchUpdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCardFunNull() {
                return this.IsNull(this.tableMachines.CardFunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCardFunNull() {
                this[this.tableMachines.CardFunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFaceFunOnNull() {
                return this.IsNull(this.tableMachines.FaceFunOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFaceFunOnNull() {
                this[this.tableMachines.FaceFunOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFaceCountNull() {
                return this.IsNull(this.tableMachines.FaceCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFaceCountNull() {
                this[this.tableMachines.FaceCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTimeAPBFunOnNull() {
                return this.IsNull(this.tableMachines.TimeAPBFunOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTimeAPBFunOnNull() {
                this[this.tableMachines.TimeAPBFunOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFingerFunOnNull() {
                return this.IsNull(this.tableMachines.FingerFunOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFingerFunOnNull() {
                this[this.tableMachines.FingerFunOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompatOldFirmwareNull() {
                return this.IsNull(this.tableMachines.CompatOldFirmwareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompatOldFirmwareNull() {
                this[this.tableMachines.CompatOldFirmwareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParamValuesNull() {
                return this.IsNull(this.tableMachines.ParamValuesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParamValuesNull() {
                this[this.tableMachines.ParamValuesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWirelessSSIDNull() {
                return this.IsNull(this.tableMachines.WirelessSSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWirelessSSIDNull() {
                this[this.tableMachines.WirelessSSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWirelessKeyNull() {
                return this.IsNull(this.tableMachines.WirelessKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWirelessKeyNull() {
                this[this.tableMachines.WirelessKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWirelessAddrNull() {
                return this.IsNull(this.tableMachines.WirelessAddrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWirelessAddrNull() {
                this[this.tableMachines.WirelessAddrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWirelessMaskNull() {
                return this.IsNull(this.tableMachines.WirelessMaskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWirelessMaskNull() {
                this[this.tableMachines.WirelessMaskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWirelessGateWayNull() {
                return this.IsNull(this.tableMachines.WirelessGateWayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWirelessGateWayNull() {
                this[this.tableMachines.WirelessGateWayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsWirelessNull() {
                return this.IsNull(this.tableMachines.IsWirelessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsWirelessNull() {
                this[this.tableMachines.IsWirelessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmanagercountNull() {
                return this.IsNull(this.tableMachines.managercountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmanagercountNull() {
                this[this.tableMachines.managercountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsusercountNull() {
                return this.IsNull(this.tableMachines.usercountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetusercountNull() {
                this[this.tableMachines.usercountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfingercountNull() {
                return this.IsNull(this.tableMachines.fingercountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfingercountNull() {
                this[this.tableMachines.fingercountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSecretCountNull() {
                return this.IsNull(this.tableMachines.SecretCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSecretCountNull() {
                this[this.tableMachines.SecretCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsACFunNull() {
                return this.IsNull(this.tableMachines.ACFunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetACFunNull() {
                this[this.tableMachines.ACFunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiometricTypeNull() {
                return this.IsNull(this.tableMachines.BiometricTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiometricTypeNull() {
                this[this.tableMachines.BiometricTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiometricVersionNull() {
                return this.IsNull(this.tableMachines.BiometricVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiometricVersionNull() {
                this[this.tableMachines.BiometricVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiometricMaxCountNull() {
                return this.IsNull(this.tableMachines.BiometricMaxCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiometricMaxCountNull() {
                this[this.tableMachines.BiometricMaxCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiometricUsedCountNull() {
                return this.IsNull(this.tableMachines.BiometricUsedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiometricUsedCountNull() {
                this[this.tableMachines.BiometricUsedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWIFINull() {
                return this.IsNull(this.tableMachines.WIFIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWIFINull() {
                this[this.tableMachines.WIFIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWIFIOnNull() {
                return this.IsNull(this.tableMachines.WIFIOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWIFIOnNull() {
                this[this.tableMachines.WIFIOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWIFIDHCPNull() {
                return this.IsNull(this.tableMachines.WIFIDHCPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWIFIDHCPNull() {
                this[this.tableMachines.WIFIDHCPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CHECKINOUTRow : global::System.Data.DataRow {
            
            private CHECKINOUTDataTable tableCHECKINOUT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CHECKINOUTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHECKINOUT = ((CHECKINOUTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int USERID {
                get {
                    return ((int)(this[this.tableCHECKINOUT.USERIDColumn]));
                }
                set {
                    this[this.tableCHECKINOUT.USERIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CHECKTIME {
                get {
                    return ((global::System.DateTime)(this[this.tableCHECKINOUT.CHECKTIMEColumn]));
                }
                set {
                    this[this.tableCHECKINOUT.CHECKTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHECKTYPE {
                get {
                    try {
                        return ((string)(this[this.tableCHECKINOUT.CHECKTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHECKTYPE\' in table \'CHECKINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHECKINOUT.CHECKTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VERIFYCODE {
                get {
                    try {
                        return ((int)(this[this.tableCHECKINOUT.VERIFYCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VERIFYCODE\' in table \'CHECKINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHECKINOUT.VERIFYCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SENSORID {
                get {
                    try {
                        return ((string)(this[this.tableCHECKINOUT.SENSORIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SENSORID\' in table \'CHECKINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHECKINOUT.SENSORIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LOGID {
                get {
                    return ((int)(this[this.tableCHECKINOUT.LOGIDColumn]));
                }
                set {
                    this[this.tableCHECKINOUT.LOGIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MachineId {
                get {
                    try {
                        return ((int)(this[this.tableCHECKINOUT.MachineIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MachineId\' in table \'CHECKINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHECKINOUT.MachineIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UserExtFmt {
                get {
                    try {
                        return ((int)(this[this.tableCHECKINOUT.UserExtFmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserExtFmt\' in table \'CHECKINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHECKINOUT.UserExtFmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WorkCode {
                get {
                    try {
                        return ((int)(this[this.tableCHECKINOUT.WorkCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkCode\' in table \'CHECKINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHECKINOUT.WorkCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Memoinfo {
                get {
                    try {
                        return ((string)(this[this.tableCHECKINOUT.MemoinfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Memoinfo\' in table \'CHECKINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHECKINOUT.MemoinfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sn {
                get {
                    try {
                        return ((string)(this[this.tableCHECKINOUT.snColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sn\' in table \'CHECKINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHECKINOUT.snColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isDone {
                get {
                    try {
                        return ((bool)(this[this.tableCHECKINOUT.isDoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isDone\' in table \'CHECKINOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHECKINOUT.isDoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHECKTYPENull() {
                return this.IsNull(this.tableCHECKINOUT.CHECKTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHECKTYPENull() {
                this[this.tableCHECKINOUT.CHECKTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVERIFYCODENull() {
                return this.IsNull(this.tableCHECKINOUT.VERIFYCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVERIFYCODENull() {
                this[this.tableCHECKINOUT.VERIFYCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSENSORIDNull() {
                return this.IsNull(this.tableCHECKINOUT.SENSORIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSENSORIDNull() {
                this[this.tableCHECKINOUT.SENSORIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMachineIdNull() {
                return this.IsNull(this.tableCHECKINOUT.MachineIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMachineIdNull() {
                this[this.tableCHECKINOUT.MachineIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserExtFmtNull() {
                return this.IsNull(this.tableCHECKINOUT.UserExtFmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserExtFmtNull() {
                this[this.tableCHECKINOUT.UserExtFmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorkCodeNull() {
                return this.IsNull(this.tableCHECKINOUT.WorkCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorkCodeNull() {
                this[this.tableCHECKINOUT.WorkCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMemoinfoNull() {
                return this.IsNull(this.tableCHECKINOUT.MemoinfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMemoinfoNull() {
                this[this.tableCHECKINOUT.MemoinfoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssnNull() {
                return this.IsNull(this.tableCHECKINOUT.snColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsnNull() {
                this[this.tableCHECKINOUT.snColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisDoneNull() {
                return this.IsNull(this.tableCHECKINOUT.isDoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisDoneNull() {
                this[this.tableCHECKINOUT.isDoneColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MachinesRowChangeEvent : global::System.EventArgs {
            
            private MachinesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MachinesRowChangeEvent(MachinesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MachinesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CHECKINOUTRowChangeEvent : global::System.EventArgs {
            
            private CHECKINOUTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CHECKINOUTRowChangeEvent(CHECKINOUTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CHECKINOUTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace KetharaATTGUI.AttendanceDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MachinesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MachinesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Machines";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("MachineAlias", "MachineAlias");
            tableMapping.ColumnMappings.Add("ConnectType", "ConnectType");
            tableMapping.ColumnMappings.Add("IP", "IP");
            tableMapping.ColumnMappings.Add("SerialPort", "SerialPort");
            tableMapping.ColumnMappings.Add("Port", "Port");
            tableMapping.ColumnMappings.Add("Baudrate", "Baudrate");
            tableMapping.ColumnMappings.Add("MachineNumber", "MachineNumber");
            tableMapping.ColumnMappings.Add("IsHost", "IsHost");
            tableMapping.ColumnMappings.Add("Enabled", "Enabled");
            tableMapping.ColumnMappings.Add("CommPassword", "CommPassword");
            tableMapping.ColumnMappings.Add("UILanguage", "UILanguage");
            tableMapping.ColumnMappings.Add("DateFormat", "DateFormat");
            tableMapping.ColumnMappings.Add("InOutRecordWarn", "InOutRecordWarn");
            tableMapping.ColumnMappings.Add("Idle", "Idle");
            tableMapping.ColumnMappings.Add("Voice", "Voice");
            tableMapping.ColumnMappings.Add("FirmwareVersion", "FirmwareVersion");
            tableMapping.ColumnMappings.Add("ProductType", "ProductType");
            tableMapping.ColumnMappings.Add("LockControl", "LockControl");
            tableMapping.ColumnMappings.Add("Purpose", "Purpose");
            tableMapping.ColumnMappings.Add("ProduceKind", "ProduceKind");
            tableMapping.ColumnMappings.Add("sn", "sn");
            tableMapping.ColumnMappings.Add("PhotoStamp", "PhotoStamp");
            tableMapping.ColumnMappings.Add("IsIfChangeConfigServer2", "IsIfChangeConfigServer2");
            tableMapping.ColumnMappings.Add("pushver", "pushver");
            tableMapping.ColumnMappings.Add("change_operator", "change_operator");
            tableMapping.ColumnMappings.Add("change_time", "change_time");
            tableMapping.ColumnMappings.Add("create_operator", "create_operator");
            tableMapping.ColumnMappings.Add("create_time", "create_time");
            tableMapping.ColumnMappings.Add("delete_operator", "delete_operator");
            tableMapping.ColumnMappings.Add("delete_time", "delete_time");
            tableMapping.ColumnMappings.Add("status", "status");
            tableMapping.ColumnMappings.Add("device_type", "device_type");
            tableMapping.ColumnMappings.Add("last_activity", "last_activity");
            tableMapping.ColumnMappings.Add("trans_times", "trans_times");
            tableMapping.ColumnMappings.Add("TransInterval", "TransInterval");
            tableMapping.ColumnMappings.Add("log_stamp", "log_stamp");
            tableMapping.ColumnMappings.Add("oplog_stamp", "oplog_stamp");
            tableMapping.ColumnMappings.Add("photo_stamp", "photo_stamp");
            tableMapping.ColumnMappings.Add("UpdateDB", "UpdateDB");
            tableMapping.ColumnMappings.Add("device_name", "device_name");
            tableMapping.ColumnMappings.Add("transaction_count", "transaction_count");
            tableMapping.ColumnMappings.Add("main_time", "main_time");
            tableMapping.ColumnMappings.Add("max_user_count", "max_user_count");
            tableMapping.ColumnMappings.Add("max_finger_count", "max_finger_count");
            tableMapping.ColumnMappings.Add("max_attlog_count", "max_attlog_count");
            tableMapping.ColumnMappings.Add("alg_ver", "alg_ver");
            tableMapping.ColumnMappings.Add("flash_size", "flash_size");
            tableMapping.ColumnMappings.Add("free_flash_size", "free_flash_size");
            tableMapping.ColumnMappings.Add("language", "language");
            tableMapping.ColumnMappings.Add("lng_encode", "lng_encode");
            tableMapping.ColumnMappings.Add("volume", "volume");
            tableMapping.ColumnMappings.Add("is_tft", "is_tft");
            tableMapping.ColumnMappings.Add("platform", "platform");
            tableMapping.ColumnMappings.Add("brightness", "brightness");
            tableMapping.ColumnMappings.Add("oem_vendor", "oem_vendor");
            tableMapping.ColumnMappings.Add("city", "city");
            tableMapping.ColumnMappings.Add("AccFun", "AccFun");
            tableMapping.ColumnMappings.Add("TZAdj", "TZAdj");
            tableMapping.ColumnMappings.Add("comm_type", "comm_type");
            tableMapping.ColumnMappings.Add("agent_ipaddress", "agent_ipaddress");
            tableMapping.ColumnMappings.Add("subnet_mask", "subnet_mask");
            tableMapping.ColumnMappings.Add("gateway", "gateway");
            tableMapping.ColumnMappings.Add("area_id", "area_id");
            tableMapping.ColumnMappings.Add("acpanel_type", "acpanel_type");
            tableMapping.ColumnMappings.Add("sync_time", "sync_time");
            tableMapping.ColumnMappings.Add("four_to_two", "four_to_two");
            tableMapping.ColumnMappings.Add("video_login", "video_login");
            tableMapping.ColumnMappings.Add("fp_mthreshold", "fp_mthreshold");
            tableMapping.ColumnMappings.Add("Fpversion", "Fpversion");
            tableMapping.ColumnMappings.Add("max_comm_size", "max_comm_size");
            tableMapping.ColumnMappings.Add("max_comm_count", "max_comm_count");
            tableMapping.ColumnMappings.Add("realtime", "realtime");
            tableMapping.ColumnMappings.Add("delay", "delay");
            tableMapping.ColumnMappings.Add("encrypt", "encrypt");
            tableMapping.ColumnMappings.Add("dstime_id", "dstime_id");
            tableMapping.ColumnMappings.Add("door_count", "door_count");
            tableMapping.ColumnMappings.Add("reader_count", "reader_count");
            tableMapping.ColumnMappings.Add("aux_in_count", "aux_in_count");
            tableMapping.ColumnMappings.Add("aux_out_count", "aux_out_count");
            tableMapping.ColumnMappings.Add("IsOnlyRFMachine", "IsOnlyRFMachine");
            tableMapping.ColumnMappings.Add("alias", "alias");
            tableMapping.ColumnMappings.Add("ipaddress", "ipaddress");
            tableMapping.ColumnMappings.Add("com_port", "com_port");
            tableMapping.ColumnMappings.Add("com_address", "com_address");
            tableMapping.ColumnMappings.Add("SimpleEventType", "SimpleEventType");
            tableMapping.ColumnMappings.Add("FvFunOn", "FvFunOn");
            tableMapping.ColumnMappings.Add("fvcount", "fvcount");
            tableMapping.ColumnMappings.Add("deviceOption", "deviceOption");
            tableMapping.ColumnMappings.Add("DevSDKType", "DevSDKType");
            tableMapping.ColumnMappings.Add("UTableDesc", "UTableDesc");
            tableMapping.ColumnMappings.Add("IsTFTMachine", "IsTFTMachine");
            tableMapping.ColumnMappings.Add("PinWidth", "PinWidth");
            tableMapping.ColumnMappings.Add("UserExtFmt", "UserExtFmt");
            tableMapping.ColumnMappings.Add("FP1_NThreshold", "FP1_NThreshold");
            tableMapping.ColumnMappings.Add("FP1_1Threshold", "FP1_1Threshold");
            tableMapping.ColumnMappings.Add("Face1_NThreshold", "Face1_NThreshold");
            tableMapping.ColumnMappings.Add("Face1_1Threshold", "Face1_1Threshold");
            tableMapping.ColumnMappings.Add("Only1_1Mode", "Only1_1Mode");
            tableMapping.ColumnMappings.Add("OnlyCheckCard", "OnlyCheckCard");
            tableMapping.ColumnMappings.Add("MifireMustRegistered", "MifireMustRegistered");
            tableMapping.ColumnMappings.Add("RFCardOn", "RFCardOn");
            tableMapping.ColumnMappings.Add("Mifire", "Mifire");
            tableMapping.ColumnMappings.Add("MifireId", "MifireId");
            tableMapping.ColumnMappings.Add("NetOn", "NetOn");
            tableMapping.ColumnMappings.Add("RS232On", "RS232On");
            tableMapping.ColumnMappings.Add("RS485On", "RS485On");
            tableMapping.ColumnMappings.Add("FreeType", "FreeType");
            tableMapping.ColumnMappings.Add("FreeTime", "FreeTime");
            tableMapping.ColumnMappings.Add("NoDisplayFun", "NoDisplayFun");
            tableMapping.ColumnMappings.Add("VoiceTipsOn", "VoiceTipsOn");
            tableMapping.ColumnMappings.Add("TOMenu", "TOMenu");
            tableMapping.ColumnMappings.Add("StdVolume", "StdVolume");
            tableMapping.ColumnMappings.Add("VRYVH", "VRYVH");
            tableMapping.ColumnMappings.Add("KeyPadBeep", "KeyPadBeep");
            tableMapping.ColumnMappings.Add("BatchUpdate", "BatchUpdate");
            tableMapping.ColumnMappings.Add("CardFun", "CardFun");
            tableMapping.ColumnMappings.Add("FaceFunOn", "FaceFunOn");
            tableMapping.ColumnMappings.Add("FaceCount", "FaceCount");
            tableMapping.ColumnMappings.Add("TimeAPBFunOn", "TimeAPBFunOn");
            tableMapping.ColumnMappings.Add("FingerFunOn", "FingerFunOn");
            tableMapping.ColumnMappings.Add("CompatOldFirmware", "CompatOldFirmware");
            tableMapping.ColumnMappings.Add("ParamValues", "ParamValues");
            tableMapping.ColumnMappings.Add("WirelessSSID", "WirelessSSID");
            tableMapping.ColumnMappings.Add("WirelessKey", "WirelessKey");
            tableMapping.ColumnMappings.Add("WirelessAddr", "WirelessAddr");
            tableMapping.ColumnMappings.Add("WirelessMask", "WirelessMask");
            tableMapping.ColumnMappings.Add("WirelessGateWay", "WirelessGateWay");
            tableMapping.ColumnMappings.Add("IsWireless", "IsWireless");
            tableMapping.ColumnMappings.Add("managercount", "managercount");
            tableMapping.ColumnMappings.Add("usercount", "usercount");
            tableMapping.ColumnMappings.Add("fingercount", "fingercount");
            tableMapping.ColumnMappings.Add("SecretCount", "SecretCount");
            tableMapping.ColumnMappings.Add("ACFun", "ACFun");
            tableMapping.ColumnMappings.Add("BiometricType", "BiometricType");
            tableMapping.ColumnMappings.Add("BiometricVersion", "BiometricVersion");
            tableMapping.ColumnMappings.Add("BiometricMaxCount", "BiometricMaxCount");
            tableMapping.ColumnMappings.Add("BiometricUsedCount", "BiometricUsedCount");
            tableMapping.ColumnMappings.Add("WIFI", "WIFI");
            tableMapping.ColumnMappings.Add("WIFIOn", "WIFIOn");
            tableMapping.ColumnMappings.Add("WIFIDHCP", "WIFIDHCP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Machines] WHERE (([ID] = @Original_ID) AND ((@IsNull_MachineAl" +
                "ias = 1 AND [MachineAlias] IS NULL) OR ([MachineAlias] = @Original_MachineAlias)" +
                ") AND ((@IsNull_ConnectType = 1 AND [ConnectType] IS NULL) OR ([ConnectType] = @" +
                "Original_ConnectType)) AND ((@IsNull_IP = 1 AND [IP] IS NULL) OR ([IP] = @Origin" +
                "al_IP)) AND ((@IsNull_SerialPort = 1 AND [SerialPort] IS NULL) OR ([SerialPort] " +
                "= @Original_SerialPort)) AND ((@IsNull_Port = 1 AND [Port] IS NULL) OR ([Port] =" +
                " @Original_Port)) AND ((@IsNull_Baudrate = 1 AND [Baudrate] IS NULL) OR ([Baudra" +
                "te] = @Original_Baudrate)) AND ([MachineNumber] = @Original_MachineNumber) AND (" +
                "(@IsNull_IsHost = 1 AND [IsHost] IS NULL) OR ([IsHost] = @Original_IsHost)) AND " +
                "([Enabled] = @Original_Enabled) AND ((@IsNull_CommPassword = 1 AND [CommPassword" +
                "] IS NULL) OR ([CommPassword] = @Original_CommPassword)) AND ((@IsNull_UILanguag" +
                "e = 1 AND [UILanguage] IS NULL) OR ([UILanguage] = @Original_UILanguage)) AND ((" +
                "@IsNull_DateFormat = 1 AND [DateFormat] IS NULL) OR ([DateFormat] = @Original_Da" +
                "teFormat)) AND ((@IsNull_InOutRecordWarn = 1 AND [InOutRecordWarn] IS NULL) OR (" +
                "[InOutRecordWarn] = @Original_InOutRecordWarn)) AND ((@IsNull_Idle = 1 AND [Idle" +
                "] IS NULL) OR ([Idle] = @Original_Idle)) AND ((@IsNull_Voice = 1 AND [Voice] IS " +
                "NULL) OR ([Voice] = @Original_Voice)) AND ((@IsNull_FirmwareVersion = 1 AND [Fir" +
                "mwareVersion] IS NULL) OR ([FirmwareVersion] = @Original_FirmwareVersion)) AND (" +
                "(@IsNull_ProductType = 1 AND [ProductType] IS NULL) OR ([ProductType] = @Origina" +
                "l_ProductType)) AND ((@IsNull_LockControl = 1 AND [LockControl] IS NULL) OR ([Lo" +
                "ckControl] = @Original_LockControl)) AND ((@IsNull_Purpose = 1 AND [Purpose] IS " +
                "NULL) OR ([Purpose] = @Original_Purpose)) AND ((@IsNull_ProduceKind = 1 AND [Pro" +
                "duceKind] IS NULL) OR ([ProduceKind] = @Original_ProduceKind)) AND ((@IsNull_sn " +
                "= 1 AND [sn] IS NULL) OR ([sn] = @Original_sn)) AND ((@IsNull_PhotoStamp = 1 AND" +
                " [PhotoStamp] IS NULL) OR ([PhotoStamp] = @Original_PhotoStamp)) AND ((@IsNull_I" +
                "sIfChangeConfigServer2 = 1 AND [IsIfChangeConfigServer2] IS NULL) OR ([IsIfChang" +
                "eConfigServer2] = @Original_IsIfChangeConfigServer2)) AND ((@IsNull_pushver = 1 " +
                "AND [pushver] IS NULL) OR ([pushver] = @Original_pushver)) AND ((@IsNull_change_" +
                "operator = 1 AND [change_operator] IS NULL) OR ([change_operator] = @Original_ch" +
                "ange_operator)) AND ((@IsNull_change_time = 1 AND [change_time] IS NULL) OR ([ch" +
                "ange_time] = @Original_change_time)) AND ((@IsNull_create_operator = 1 AND [crea" +
                "te_operator] IS NULL) OR ([create_operator] = @Original_create_operator)) AND ((" +
                "@IsNull_create_time = 1 AND [create_time] IS NULL) OR ([create_time] = @Original" +
                "_create_time)) AND ((@IsNull_delete_operator = 1 AND [delete_operator] IS NULL) " +
                "OR ([delete_operator] = @Original_delete_operator)) AND ((@IsNull_delete_time = " +
                "1 AND [delete_time] IS NULL) OR ([delete_time] = @Original_delete_time)) AND ((@" +
                "IsNull_status = 1 AND [status] IS NULL) OR ([status] = @Original_status)) AND ((" +
                "@IsNull_device_type = 1 AND [device_type] IS NULL) OR ([device_type] = @Original" +
                "_device_type)) AND ((@IsNull_last_activity = 1 AND [last_activity] IS NULL) OR (" +
                "[last_activity] = @Original_last_activity)) AND ((@IsNull_trans_times = 1 AND [t" +
                "rans_times] IS NULL) OR ([trans_times] = @Original_trans_times)) AND ((@IsNull_T" +
                "ransInterval = 1 AND [TransInterval] IS NULL) OR ([TransInterval] = @Original_Tr" +
                "ansInterval)) AND ((@IsNull_log_stamp = 1 AND [log_stamp] IS NULL) OR ([log_stam" +
                "p] = @Original_log_stamp)) AND ((@IsNull_UpdateDB = 1 AND [UpdateDB] IS NULL) OR" +
                " ([UpdateDB] = @Original_UpdateDB)) AND ((@IsNull_device_name = 1 AND [device_na" +
                "me] IS NULL) OR ([device_name] = @Original_device_name)) AND ((@IsNull_transacti" +
                "on_count = 1 AND [transaction_count] IS NULL) OR ([transaction_count] = @Origina" +
                "l_transaction_count)) AND ((@IsNull_main_time = 1 AND [main_time] IS NULL) OR ([" +
                "main_time] = @Original_main_time)) AND ((@IsNull_max_user_count = 1 AND [max_use" +
                "r_count] IS NULL) OR ([max_user_count] = @Original_max_user_count)) AND ((@IsNul" +
                "l_max_finger_count = 1 AND [max_finger_count] IS NULL) OR ([max_finger_count] = " +
                "@Original_max_finger_count)) AND ((@IsNull_max_attlog_count = 1 AND [max_attlog_" +
                "count] IS NULL) OR ([max_attlog_count] = @Original_max_attlog_count)) AND ((@IsN" +
                "ull_alg_ver = 1 AND [alg_ver] IS NULL) OR ([alg_ver] = @Original_alg_ver)) AND (" +
                "(@IsNull_flash_size = 1 AND [flash_size] IS NULL) OR ([flash_size] = @Original_f" +
                "lash_size)) AND ((@IsNull_free_flash_size = 1 AND [free_flash_size] IS NULL) OR " +
                "([free_flash_size] = @Original_free_flash_size)) AND ((@IsNull_language = 1 AND " +
                "[language] IS NULL) OR ([language] = @Original_language)) AND ((@IsNull_lng_enco" +
                "de = 1 AND [lng_encode] IS NULL) OR ([lng_encode] = @Original_lng_encode)) AND (" +
                "(@IsNull_volume = 1 AND [volume] IS NULL) OR ([volume] = @Original_volume)) AND " +
                "((@IsNull_is_tft = 1 AND [is_tft] IS NULL) OR ([is_tft] = @Original_is_tft)) AND" +
                " ((@IsNull_platform = 1 AND [platform] IS NULL) OR ([platform] = @Original_platf" +
                "orm)) AND ((@IsNull_brightness = 1 AND [brightness] IS NULL) OR ([brightness] = " +
                "@Original_brightness)) AND ((@IsNull_oem_vendor = 1 AND [oem_vendor] IS NULL) OR" +
                " ([oem_vendor] = @Original_oem_vendor)) AND ((@IsNull_city = 1 AND [city] IS NUL" +
                "L) OR ([city] = @Original_city)) AND ((@IsNull_AccFun = 1 AND [AccFun] IS NULL) " +
                "OR ([AccFun] = @Original_AccFun)) AND ((@IsNull_TZAdj = 1 AND [TZAdj] IS NULL) O" +
                "R ([TZAdj] = @Original_TZAdj)) AND ((@IsNull_comm_type = 1 AND [comm_type] IS NU" +
                "LL) OR ([comm_type] = @Original_comm_type)) AND ((@IsNull_agent_ipaddress = 1 AN" +
                "D [agent_ipaddress] IS NULL) OR ([agent_ipaddress] = @Original_agent_ipaddress))" +
                " AND ((@IsNull_subnet_mask = 1 AND [subnet_mask] IS NULL) OR ([subnet_mask] = @O" +
                "riginal_subnet_mask)) AND ((@IsNull_gateway = 1 AND [gateway] IS NULL) OR ([gate" +
                "way] = @Original_gateway)) AND ((@IsNull_area_id = 1 AND [area_id] IS NULL) OR (" +
                "[area_id] = @Original_area_id)) AND ((@IsNull_acpanel_type = 1 AND [acpanel_type" +
                "] IS NULL) OR ([acpanel_type] = @Original_acpanel_type)) AND ([sync_time] = @Ori" +
                "ginal_sync_time) AND ([four_to_two] = @Original_four_to_two) AND ((@IsNull_video" +
                "_login = 1 AND [video_login] IS NULL) OR ([video_login] = @Original_video_login)" +
                ") AND ((@IsNull_fp_mthreshold = 1 AND [fp_mthreshold] IS NULL) OR ([fp_mthreshol" +
                "d] = @Original_fp_mthreshold)) AND ((@IsNull_Fpversion = 1 AND [Fpversion] IS NU" +
                "LL) OR ([Fpversion] = @Original_Fpversion)) AND ((@IsNull_max_comm_size = 1 AND " +
                "[max_comm_size] IS NULL) OR ([max_comm_size] = @Original_max_comm_size)) AND ((@" +
                "IsNull_max_comm_count = 1 AND [max_comm_count] IS NULL) OR ([max_comm_count] = @" +
                "Original_max_comm_count)) AND ([realtime] = @Original_realtime) AND ((@IsNull_de" +
                "lay = 1 AND [delay] IS NULL) OR ([delay] = @Original_delay)) AND ([encrypt] = @O" +
                "riginal_encrypt) AND ((@IsNull_dstime_id = 1 AND [dstime_id] IS NULL) OR ([dstim" +
                "e_id] = @Original_dstime_id)) AND ((@IsNull_door_count = 1 AND [door_count] IS N" +
                "ULL) OR ([door_count] = @Original_door_count)) AND ((@IsNull_reader_count = 1 AN" +
                "D [reader_count] IS NULL) OR ([reader_count] = @Original_reader_count)) AND ((@I" +
                "sNull_aux_in_count = 1 AND [aux_in_count] IS NULL) OR ([aux_in_count] = @Origina" +
                "l_aux_in_count)) AND ((@IsNull_aux_out_count = 1 AND [aux_out_count] IS NULL) OR" +
                " ([aux_out_count] = @Original_aux_out_count)) AND ((@IsNull_IsOnlyRFMachine = 1 " +
                "AND [IsOnlyRFMachine] IS NULL) OR ([IsOnlyRFMachine] = @Original_IsOnlyRFMachine" +
                ")) AND ((@IsNull_alias = 1 AND [alias] IS NULL) OR ([alias] = @Original_alias)) " +
                "AND ((@IsNull_ipaddress = 1 AND [ipaddress] IS NULL) OR ([ipaddress] = @Original" +
                "_ipaddress)) AND ((@IsNull_com_port = 1 AND [com_port] IS NULL) OR ([com_port] =" +
                " @Original_com_port)) AND ((@IsNull_com_address = 1 AND [com_address] IS NULL) O" +
                "R ([com_address] = @Original_com_address)) AND ((@IsNull_SimpleEventType = 1 AND" +
                " [SimpleEventType] IS NULL) OR ([SimpleEventType] = @Original_SimpleEventType)) " +
                "AND ((@IsNull_FvFunOn = 1 AND [FvFunOn] IS NULL) OR ([FvFunOn] = @Original_FvFun" +
                "On)) AND ((@IsNull_fvcount = 1 AND [fvcount] IS NULL) OR ([fvcount] = @Original_" +
                "fvcount)) AND ((@IsNull_DevSDKType = 1 AND [DevSDKType] IS NULL) OR ([DevSDKType" +
                "] = @Original_DevSDKType)) AND ((@IsNull_IsTFTMachine = 1 AND [IsTFTMachine] IS " +
                "NULL) OR ([IsTFTMachine] = @Original_IsTFTMachine)) AND ((@IsNull_PinWidth = 1 A" +
                "ND [PinWidth] IS NULL) OR ([PinWidth] = @Original_PinWidth)) AND ((@IsNull_UserE" +
                "xtFmt = 1 AND [UserExtFmt] IS NULL) OR ([UserExtFmt] = @Original_UserExtFmt)) AN" +
                "D ((@IsNull_FP1_NThreshold = 1 AND [FP1_NThreshold] IS NULL) OR ([FP1_NThreshold" +
                "] = @Original_FP1_NThreshold)) AND ((@IsNull_FP1_1Threshold = 1 AND [FP1_1Thresh" +
                "old] IS NULL) OR ([FP1_1Threshold] = @Original_FP1_1Threshold)) AND ((@IsNull_Fa" +
                "ce1_NThreshold = 1 AND [Face1_NThreshold] IS NULL) OR ([Face1_NThreshold] = @Ori" +
                "ginal_Face1_NThreshold)) AND ((@IsNull_Face1_1Threshold = 1 AND [Face1_1Threshol" +
                "d] IS NULL) OR ([Face1_1Threshold] = @Original_Face1_1Threshold)) AND ((@IsNull_" +
                "Only1_1Mode = 1 AND [Only1_1Mode] IS NULL) OR ([Only1_1Mode] = @Original_Only1_1" +
                "Mode)) AND ((@IsNull_OnlyCheckCard = 1 AND [OnlyCheckCard] IS NULL) OR ([OnlyChe" +
                "ckCard] = @Original_OnlyCheckCard)) AND ((@IsNull_MifireMustRegistered = 1 AND [" +
                "MifireMustRegistered] IS NULL) OR ([MifireMustRegistered] = @Original_MifireMust" +
                "Registered)) AND ((@IsNull_RFCardOn = 1 AND [RFCardOn] IS NULL) OR ([RFCardOn] =" +
                " @Original_RFCardOn)) AND ((@IsNull_Mifire = 1 AND [Mifire] IS NULL) OR ([Mifire" +
                "] = @Original_Mifire)) AND ((@IsNull_MifireId = 1 AND [MifireId] IS NULL) OR ([M" +
                "ifireId] = @Original_MifireId)) AND ((@IsNull_NetOn = 1 AND [NetOn] IS NULL) OR " +
                "([NetOn] = @Original_NetOn)) AND ((@IsNull_RS232On = 1 AND [RS232On] IS NULL) OR" +
                " ([RS232On] = @Original_RS232On)) AND ((@IsNull_RS485On = 1 AND [RS485On] IS NUL" +
                "L) OR ([RS485On] = @Original_RS485On)) AND ((@IsNull_FreeType = 1 AND [FreeType]" +
                " IS NULL) OR ([FreeType] = @Original_FreeType)) AND ((@IsNull_FreeTime = 1 AND [" +
                "FreeTime] IS NULL) OR ([FreeTime] = @Original_FreeTime)) AND ((@IsNull_NoDisplay" +
                "Fun = 1 AND [NoDisplayFun] IS NULL) OR ([NoDisplayFun] = @Original_NoDisplayFun)" +
                ") AND ((@IsNull_VoiceTipsOn = 1 AND [VoiceTipsOn] IS NULL) OR ([VoiceTipsOn] = @" +
                "Original_VoiceTipsOn)) AND ((@IsNull_TOMenu = 1 AND [TOMenu] IS NULL) OR ([TOMen" +
                "u] = @Original_TOMenu)) AND ((@IsNull_StdVolume = 1 AND [StdVolume] IS NULL) OR " +
                "([StdVolume] = @Original_StdVolume)) AND ((@IsNull_VRYVH = 1 AND [VRYVH] IS NULL" +
                ") OR ([VRYVH] = @Original_VRYVH)) AND ((@IsNull_KeyPadBeep = 1 AND [KeyPadBeep] " +
                "IS NULL) OR ([KeyPadBeep] = @Original_KeyPadBeep)) AND ((@IsNull_BatchUpdate = 1" +
                " AND [BatchUpdate] IS NULL) OR ([BatchUpdate] = @Original_BatchUpdate)) AND ((@I" +
                "sNull_CardFun = 1 AND [CardFun] IS NULL) OR ([CardFun] = @Original_CardFun)) AND" +
                " ((@IsNull_FaceFunOn = 1 AND [FaceFunOn] IS NULL) OR ([FaceFunOn] = @Original_Fa" +
                "ceFunOn)) AND ((@IsNull_FaceCount = 1 AND [FaceCount] IS NULL) OR ([FaceCount] =" +
                " @Original_FaceCount)) AND ((@IsNull_TimeAPBFunOn = 1 AND [TimeAPBFunOn] IS NULL" +
                ") OR ([TimeAPBFunOn] = @Original_TimeAPBFunOn)) AND ((@IsNull_FingerFunOn = 1 AN" +
                "D [FingerFunOn] IS NULL) OR ([FingerFunOn] = @Original_FingerFunOn)) AND ((@IsNu" +
                "ll_CompatOldFirmware = 1 AND [CompatOldFirmware] IS NULL) OR ([CompatOldFirmware" +
                "] = @Original_CompatOldFirmware)) AND ((@IsNull_WirelessSSID = 1 AND [WirelessSS" +
                "ID] IS NULL) OR ([WirelessSSID] = @Original_WirelessSSID)) AND ((@IsNull_Wireles" +
                "sKey = 1 AND [WirelessKey] IS NULL) OR ([WirelessKey] = @Original_WirelessKey)) " +
                "AND ((@IsNull_WirelessAddr = 1 AND [WirelessAddr] IS NULL) OR ([WirelessAddr] = " +
                "@Original_WirelessAddr)) AND ((@IsNull_WirelessMask = 1 AND [WirelessMask] IS NU" +
                "LL) OR ([WirelessMask] = @Original_WirelessMask)) AND ((@IsNull_WirelessGateWay " +
                "= 1 AND [WirelessGateWay] IS NULL) OR ([WirelessGateWay] = @Original_WirelessGat" +
                "eWay)) AND ((@IsNull_IsWireless = 1 AND [IsWireless] IS NULL) OR ([IsWireless] =" +
                " @Original_IsWireless)) AND ((@IsNull_managercount = 1 AND [managercount] IS NUL" +
                "L) OR ([managercount] = @Original_managercount)) AND ((@IsNull_usercount = 1 AND" +
                " [usercount] IS NULL) OR ([usercount] = @Original_usercount)) AND ((@IsNull_fing" +
                "ercount = 1 AND [fingercount] IS NULL) OR ([fingercount] = @Original_fingercount" +
                ")) AND ((@IsNull_SecretCount = 1 AND [SecretCount] IS NULL) OR ([SecretCount] = " +
                "@Original_SecretCount)) AND ((@IsNull_ACFun = 1 AND [ACFun] IS NULL) OR ([ACFun]" +
                " = @Original_ACFun)) AND ((@IsNull_BiometricType = 1 AND [BiometricType] IS NULL" +
                ") OR ([BiometricType] = @Original_BiometricType)) AND ((@IsNull_BiometricVersion" +
                " = 1 AND [BiometricVersion] IS NULL) OR ([BiometricVersion] = @Original_Biometri" +
                "cVersion)) AND ((@IsNull_BiometricMaxCount = 1 AND [BiometricMaxCount] IS NULL) " +
                "OR ([BiometricMaxCount] = @Original_BiometricMaxCount)) AND ((@IsNull_BiometricU" +
                "sedCount = 1 AND [BiometricUsedCount] IS NULL) OR ([BiometricUsedCount] = @Origi" +
                "nal_BiometricUsedCount)) AND ((@IsNull_WIFI = 1 AND [WIFI] IS NULL) OR ([WIFI] =" +
                " @Original_WIFI)) AND ((@IsNull_WIFIOn = 1 AND [WIFIOn] IS NULL) OR ([WIFIOn] = " +
                "@Original_WIFIOn)) AND ((@IsNull_WIFIDHCP = 1 AND [WIFIDHCP] IS NULL) OR ([WIFID" +
                "HCP] = @Original_WIFIDHCP)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MachineAlias", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineAlias", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MachineAlias", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineAlias", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConnectType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConnectType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SerialPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SerialPort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SerialPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SerialPort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Baudrate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Baudrate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Baudrate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Baudrate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MachineNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsHost", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHost", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsHost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CommPassword", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommPassword", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommPassword", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommPassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UILanguage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UILanguage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UILanguage", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UILanguage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateFormat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFormat", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateFormat", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFormat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InOutRecordWarn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InOutRecordWarn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InOutRecordWarn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InOutRecordWarn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Idle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Idle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Idle", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Idle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Voice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Voice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Voice", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Voice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FirmwareVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirmwareVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FirmwareVersion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirmwareVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LockControl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LockControl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LockControl", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LockControl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Purpose", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Purpose", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProduceKind", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProduceKind", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProduceKind", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProduceKind", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhotoStamp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhotoStamp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhotoStamp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhotoStamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsIfChangeConfigServer2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsIfChangeConfigServer2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsIfChangeConfigServer2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsIfChangeConfigServer2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pushver", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pushver", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pushver", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pushver", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_change_operator", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "change_operator", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_change_operator", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "change_operator", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_change_time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "change_time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_change_time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "change_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_operator", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_operator", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_operator", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_operator", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_delete_operator", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delete_operator", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_delete_operator", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delete_operator", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_delete_time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delete_time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_delete_time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delete_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_device_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "device_type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_device_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "device_type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_last_activity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_activity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_last_activity", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_activity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_trans_times", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trans_times", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_trans_times", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trans_times", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransInterval", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransInterval", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransInterval", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransInterval", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_log_stamp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "log_stamp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_log_stamp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "log_stamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdateDB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateDB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_device_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "device_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_device_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "device_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_transaction_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transaction_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_transaction_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transaction_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_main_time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "main_time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_main_time", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "main_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_max_user_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_user_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_max_user_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_user_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_max_finger_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_finger_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_max_finger_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_finger_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_max_attlog_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_attlog_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_max_attlog_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_attlog_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_alg_ver", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alg_ver", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_alg_ver", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alg_ver", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_flash_size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flash_size", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_flash_size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flash_size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_free_flash_size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "free_flash_size", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_free_flash_size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "free_flash_size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_language", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "language", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_language", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "language", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_lng_encode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lng_encode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lng_encode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lng_encode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_volume", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "volume", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_volume", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "volume", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_tft", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_tft", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_tft", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_tft", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_platform", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "platform", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_platform", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "platform", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_brightness", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "brightness", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_brightness", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "brightness", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_oem_vendor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "oem_vendor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_oem_vendor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "oem_vendor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_city", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_city", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AccFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccFun", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AccFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccFun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TZAdj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TZAdj", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TZAdj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TZAdj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_comm_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "comm_type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_comm_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "comm_type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_agent_ipaddress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_ipaddress", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_agent_ipaddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_ipaddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_subnet_mask", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subnet_mask", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_subnet_mask", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subnet_mask", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_gateway", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gateway", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gateway", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gateway", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_area_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "area_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_area_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "area_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_acpanel_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "acpanel_type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_acpanel_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "acpanel_type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sync_time", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sync_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_four_to_two", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "four_to_two", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_video_login", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "video_login", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_video_login", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "video_login", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fp_mthreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fp_mthreshold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fp_mthreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fp_mthreshold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fpversion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fpversion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fpversion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fpversion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_max_comm_size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_comm_size", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_max_comm_size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_comm_size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_max_comm_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_comm_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_max_comm_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_comm_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_realtime", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "realtime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_encrypt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "encrypt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dstime_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dstime_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dstime_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dstime_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_door_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "door_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_door_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "door_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_reader_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reader_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reader_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reader_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_aux_in_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aux_in_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_aux_in_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aux_in_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_aux_out_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aux_out_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_aux_out_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aux_out_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsOnlyRFMachine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsOnlyRFMachine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsOnlyRFMachine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsOnlyRFMachine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_alias", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alias", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_alias", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alias", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ipaddress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ipaddress", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ipaddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ipaddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_com_port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "com_port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_com_port", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "com_port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_com_address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "com_address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_com_address", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "com_address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SimpleEventType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SimpleEventType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SimpleEventType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SimpleEventType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FvFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FvFunOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FvFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FvFunOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fvcount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fvcount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fvcount", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fvcount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DevSDKType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DevSDKType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DevSDKType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DevSDKType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsTFTMachine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsTFTMachine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsTFTMachine", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsTFTMachine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PinWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PinWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PinWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PinWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserExtFmt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserExtFmt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserExtFmt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserExtFmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FP1_NThreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FP1_NThreshold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FP1_NThreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FP1_NThreshold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FP1_1Threshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FP1_1Threshold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FP1_1Threshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FP1_1Threshold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Face1_NThreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Face1_NThreshold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Face1_NThreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Face1_NThreshold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Face1_1Threshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Face1_1Threshold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Face1_1Threshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Face1_1Threshold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Only1_1Mode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Only1_1Mode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Only1_1Mode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Only1_1Mode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OnlyCheckCard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlyCheckCard", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OnlyCheckCard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlyCheckCard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MifireMustRegistered", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MifireMustRegistered", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MifireMustRegistered", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MifireMustRegistered", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RFCardOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFCardOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RFCardOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFCardOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mifire", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mifire", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mifire", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mifire", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MifireId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MifireId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MifireId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MifireId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NetOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NetOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RS232On", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RS232On", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RS232On", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RS232On", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RS485On", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RS485On", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RS485On", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RS485On", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FreeType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FreeType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FreeTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FreeTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoDisplayFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoDisplayFun", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoDisplayFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoDisplayFun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoiceTipsOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoiceTipsOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoiceTipsOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoiceTipsOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TOMenu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOMenu", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOMenu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOMenu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StdVolume", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StdVolume", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StdVolume", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StdVolume", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VRYVH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VRYVH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VRYVH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VRYVH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KeyPadBeep", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyPadBeep", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KeyPadBeep", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyPadBeep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BatchUpdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchUpdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BatchUpdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchUpdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardFun", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardFun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FaceFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaceFunOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FaceFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaceFunOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FaceCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaceCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FaceCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaceCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TimeAPBFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeAPBFunOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TimeAPBFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeAPBFunOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FingerFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FingerFunOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FingerFunOn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FingerFunOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CompatOldFirmware", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompatOldFirmware", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompatOldFirmware", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompatOldFirmware", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WirelessSSID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessSSID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WirelessSSID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessSSID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WirelessKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessKey", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WirelessKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WirelessAddr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessAddr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WirelessAddr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessAddr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WirelessMask", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessMask", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WirelessMask", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessMask", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WirelessGateWay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessGateWay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WirelessGateWay", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessGateWay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsWireless", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsWireless", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsWireless", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsWireless", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_managercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "managercount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_managercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "managercount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_usercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usercount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_usercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usercount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fingercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fingercount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fingercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fingercount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecretCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecretCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecretCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecretCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACFun", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACFun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiometricType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiometricType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiometricVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiometricVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiometricMaxCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricMaxCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiometricMaxCount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricMaxCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiometricUsedCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricUsedCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiometricUsedCount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricUsedCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WIFI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WIFI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WIFIOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFIOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WIFIOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFIOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WIFIDHCP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFIDHCP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WIFIDHCP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFIDHCP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Machines] ([MachineAlias], [ConnectType], [IP], [SerialPort], " +
                "[Port], [Baudrate], [MachineNumber], [IsHost], [Enabled], [CommPassword], [UILan" +
                "guage], [DateFormat], [InOutRecordWarn], [Idle], [Voice], [FirmwareVersion], [Pr" +
                "oductType], [LockControl], [Purpose], [ProduceKind], [sn], [PhotoStamp], [IsIfCh" +
                "angeConfigServer2], [pushver], [change_operator], [change_time], [create_operato" +
                "r], [create_time], [delete_operator], [delete_time], [status], [device_type], [l" +
                "ast_activity], [trans_times], [TransInterval], [log_stamp], [oplog_stamp], [phot" +
                "o_stamp], [UpdateDB], [device_name], [transaction_count], [main_time], [max_user" +
                "_count], [max_finger_count], [max_attlog_count], [alg_ver], [flash_size], [free_" +
                "flash_size], [language], [lng_encode], [volume], [is_tft], [platform], [brightne" +
                "ss], [oem_vendor], [city], [AccFun], [TZAdj], [comm_type], [agent_ipaddress], [s" +
                "ubnet_mask], [gateway], [area_id], [acpanel_type], [sync_time], [four_to_two], [" +
                "video_login], [fp_mthreshold], [Fpversion], [max_comm_size], [max_comm_count], [" +
                "realtime], [delay], [encrypt], [dstime_id], [door_count], [reader_count], [aux_i" +
                "n_count], [aux_out_count], [IsOnlyRFMachine], [alias], [ipaddress], [com_port], " +
                "[com_address], [SimpleEventType], [FvFunOn], [fvcount], [deviceOption], [DevSDKT" +
                "ype], [UTableDesc], [IsTFTMachine], [PinWidth], [UserExtFmt], [FP1_NThreshold], " +
                "[FP1_1Threshold], [Face1_NThreshold], [Face1_1Threshold], [Only1_1Mode], [OnlyCh" +
                "eckCard], [MifireMustRegistered], [RFCardOn], [Mifire], [MifireId], [NetOn], [RS" +
                "232On], [RS485On], [FreeType], [FreeTime], [NoDisplayFun], [VoiceTipsOn], [TOMen" +
                "u], [StdVolume], [VRYVH], [KeyPadBeep], [BatchUpdate], [CardFun], [FaceFunOn], [" +
                "FaceCount], [TimeAPBFunOn], [FingerFunOn], [CompatOldFirmware], [ParamValues], [" +
                "WirelessSSID], [WirelessKey], [WirelessAddr], [WirelessMask], [WirelessGateWay]," +
                " [IsWireless], [managercount], [usercount], [fingercount], [SecretCount], [ACFun" +
                "], [BiometricType], [BiometricVersion], [BiometricMaxCount], [BiometricUsedCount" +
                "], [WIFI], [WIFIOn], [WIFIDHCP]) VALUES (@MachineAlias, @ConnectType, @IP, @Seri" +
                "alPort, @Port, @Baudrate, @MachineNumber, @IsHost, @Enabled, @CommPassword, @UIL" +
                "anguage, @DateFormat, @InOutRecordWarn, @Idle, @Voice, @FirmwareVersion, @Produc" +
                "tType, @LockControl, @Purpose, @ProduceKind, @sn, @PhotoStamp, @IsIfChangeConfig" +
                "Server2, @pushver, @change_operator, @change_time, @create_operator, @create_tim" +
                "e, @delete_operator, @delete_time, @status, @device_type, @last_activity, @trans" +
                "_times, @TransInterval, @log_stamp, @oplog_stamp, @photo_stamp, @UpdateDB, @devi" +
                "ce_name, @transaction_count, @main_time, @max_user_count, @max_finger_count, @ma" +
                "x_attlog_count, @alg_ver, @flash_size, @free_flash_size, @language, @lng_encode," +
                " @volume, @is_tft, @platform, @brightness, @oem_vendor, @city, @AccFun, @TZAdj, " +
                "@comm_type, @agent_ipaddress, @subnet_mask, @gateway, @area_id, @acpanel_type, @" +
                "sync_time, @four_to_two, @video_login, @fp_mthreshold, @Fpversion, @max_comm_siz" +
                "e, @max_comm_count, @realtime, @delay, @encrypt, @dstime_id, @door_count, @reade" +
                "r_count, @aux_in_count, @aux_out_count, @IsOnlyRFMachine, @alias, @ipaddress, @c" +
                "om_port, @com_address, @SimpleEventType, @FvFunOn, @fvcount, @deviceOption, @Dev" +
                "SDKType, @UTableDesc, @IsTFTMachine, @PinWidth, @UserExtFmt, @FP1_NThreshold, @F" +
                "P1_1Threshold, @Face1_NThreshold, @Face1_1Threshold, @Only1_1Mode, @OnlyCheckCar" +
                "d, @MifireMustRegistered, @RFCardOn, @Mifire, @MifireId, @NetOn, @RS232On, @RS48" +
                "5On, @FreeType, @FreeTime, @NoDisplayFun, @VoiceTipsOn, @TOMenu, @StdVolume, @VR" +
                "YVH, @KeyPadBeep, @BatchUpdate, @CardFun, @FaceFunOn, @FaceCount, @TimeAPBFunOn," +
                " @FingerFunOn, @CompatOldFirmware, @ParamValues, @WirelessSSID, @WirelessKey, @W" +
                "irelessAddr, @WirelessMask, @WirelessGateWay, @IsWireless, @managercount, @userc" +
                "ount, @fingercount, @SecretCount, @ACFun, @BiometricType, @BiometricVersion, @Bi" +
                "ometricMaxCount, @BiometricUsedCount, @WIFI, @WIFIOn, @WIFIDHCP);\r\nSELECT ID, Ma" +
                "chineAlias, ConnectType, IP, SerialPort, Port, Baudrate, MachineNumber, IsHost, " +
                "Enabled, CommPassword, UILanguage, DateFormat, InOutRecordWarn, Idle, Voice, Fir" +
                "mwareVersion, ProductType, LockControl, Purpose, ProduceKind, sn, PhotoStamp, Is" +
                "IfChangeConfigServer2, pushver, change_operator, change_time, create_operator, c" +
                "reate_time, delete_operator, delete_time, status, device_type, last_activity, tr" +
                "ans_times, TransInterval, log_stamp, oplog_stamp, photo_stamp, UpdateDB, device_" +
                "name, transaction_count, main_time, max_user_count, max_finger_count, max_attlog" +
                "_count, alg_ver, flash_size, free_flash_size, language, lng_encode, volume, is_t" +
                "ft, platform, brightness, oem_vendor, city, AccFun, TZAdj, comm_type, agent_ipad" +
                "dress, subnet_mask, gateway, area_id, acpanel_type, sync_time, four_to_two, vide" +
                "o_login, fp_mthreshold, Fpversion, max_comm_size, max_comm_count, realtime, dela" +
                "y, encrypt, dstime_id, door_count, reader_count, aux_in_count, aux_out_count, Is" +
                "OnlyRFMachine, alias, ipaddress, com_port, com_address, SimpleEventType, FvFunOn" +
                ", fvcount, deviceOption, DevSDKType, UTableDesc, IsTFTMachine, PinWidth, UserExt" +
                "Fmt, FP1_NThreshold, FP1_1Threshold, Face1_NThreshold, Face1_1Threshold, Only1_1" +
                "Mode, OnlyCheckCard, MifireMustRegistered, RFCardOn, Mifire, MifireId, NetOn, RS" +
                "232On, RS485On, FreeType, FreeTime, NoDisplayFun, VoiceTipsOn, TOMenu, StdVolume" +
                ", VRYVH, KeyPadBeep, BatchUpdate, CardFun, FaceFunOn, FaceCount, TimeAPBFunOn, F" +
                "ingerFunOn, CompatOldFirmware, ParamValues, WirelessSSID, WirelessKey, WirelessA" +
                "ddr, WirelessMask, WirelessGateWay, IsWireless, managercount, usercount, fingerc" +
                "ount, SecretCount, ACFun, BiometricType, BiometricVersion, BiometricMaxCount, Bi" +
                "ometricUsedCount, WIFI, WIFIOn, WIFIDHCP FROM Machines WHERE (ID = SCOPE_IDENTIT" +
                "Y())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MachineAlias", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineAlias", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConnectType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SerialPort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Baudrate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Baudrate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MachineNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsHost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommPassword", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UILanguage", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UILanguage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateFormat", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFormat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InOutRecordWarn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InOutRecordWarn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Idle", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Idle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Voice", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Voice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirmwareVersion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirmwareVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LockControl", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LockControl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProduceKind", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProduceKind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhotoStamp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhotoStamp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsIfChangeConfigServer2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsIfChangeConfigServer2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pushver", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pushver", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@change_operator", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "change_operator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@change_time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "change_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_operator", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_operator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@delete_operator", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delete_operator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@delete_time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delete_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@device_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "device_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@last_activity", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_activity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trans_times", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trans_times", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransInterval", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransInterval", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@log_stamp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "log_stamp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@oplog_stamp", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "oplog_stamp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@photo_stamp", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "photo_stamp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@device_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "device_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@transaction_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transaction_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@main_time", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "main_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@max_user_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_user_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@max_finger_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_finger_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@max_attlog_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_attlog_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@alg_ver", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alg_ver", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@flash_size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flash_size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@free_flash_size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "free_flash_size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@language", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "language", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lng_encode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lng_encode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@volume", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "volume", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_tft", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_tft", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@platform", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "platform", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@brightness", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "brightness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@oem_vendor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "oem_vendor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@city", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccFun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TZAdj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TZAdj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@comm_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "comm_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agent_ipaddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_ipaddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subnet_mask", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subnet_mask", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gateway", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gateway", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@area_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "area_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acpanel_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "acpanel_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sync_time", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sync_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@four_to_two", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "four_to_two", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@video_login", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "video_login", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fp_mthreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fp_mthreshold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fpversion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fpversion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@max_comm_size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_comm_size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@max_comm_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_comm_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@realtime", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "realtime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@encrypt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "encrypt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dstime_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dstime_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@door_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "door_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reader_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reader_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aux_in_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aux_in_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aux_out_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aux_out_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsOnlyRFMachine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsOnlyRFMachine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@alias", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alias", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ipaddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ipaddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@com_port", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "com_port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@com_address", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "com_address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SimpleEventType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SimpleEventType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FvFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FvFunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fvcount", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fvcount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@deviceOption", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "deviceOption", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DevSDKType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DevSDKType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTableDesc", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UTableDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsTFTMachine", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsTFTMachine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PinWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PinWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserExtFmt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserExtFmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FP1_NThreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FP1_NThreshold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FP1_1Threshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FP1_1Threshold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Face1_NThreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Face1_NThreshold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Face1_1Threshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Face1_1Threshold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Only1_1Mode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Only1_1Mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnlyCheckCard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlyCheckCard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MifireMustRegistered", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MifireMustRegistered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RFCardOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFCardOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mifire", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mifire", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MifireId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MifireId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RS232On", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RS232On", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RS485On", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RS485On", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FreeType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FreeTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoDisplayFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoDisplayFun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoiceTipsOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoiceTipsOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOMenu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOMenu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StdVolume", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StdVolume", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VRYVH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VRYVH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KeyPadBeep", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyPadBeep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchUpdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardFun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FaceFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaceFunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FaceCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaceCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeAPBFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeAPBFunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FingerFunOn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FingerFunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompatOldFirmware", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompatOldFirmware", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParamValues", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParamValues", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WirelessSSID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessSSID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WirelessKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WirelessAddr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessAddr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WirelessMask", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessMask", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WirelessGateWay", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessGateWay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsWireless", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsWireless", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@managercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "managercount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@usercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usercount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fingercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fingercount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecretCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecretCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACFun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiometricType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiometricVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiometricMaxCount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricMaxCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiometricUsedCount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricUsedCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WIFI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WIFIOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFIOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WIFIDHCP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFIDHCP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Machines] SET [MachineAlias] = @MachineAlias, [ConnectType] = @Conn" +
                "ectType, [IP] = @IP, [SerialPort] = @SerialPort, [Port] = @Port, [Baudrate] = @B" +
                "audrate, [MachineNumber] = @MachineNumber, [IsHost] = @IsHost, [Enabled] = @Enab" +
                "led, [CommPassword] = @CommPassword, [UILanguage] = @UILanguage, [DateFormat] = " +
                "@DateFormat, [InOutRecordWarn] = @InOutRecordWarn, [Idle] = @Idle, [Voice] = @Vo" +
                "ice, [FirmwareVersion] = @FirmwareVersion, [ProductType] = @ProductType, [LockCo" +
                "ntrol] = @LockControl, [Purpose] = @Purpose, [ProduceKind] = @ProduceKind, [sn] " +
                "= @sn, [PhotoStamp] = @PhotoStamp, [IsIfChangeConfigServer2] = @IsIfChangeConfig" +
                "Server2, [pushver] = @pushver, [change_operator] = @change_operator, [change_tim" +
                "e] = @change_time, [create_operator] = @create_operator, [create_time] = @create" +
                "_time, [delete_operator] = @delete_operator, [delete_time] = @delete_time, [stat" +
                "us] = @status, [device_type] = @device_type, [last_activity] = @last_activity, [" +
                "trans_times] = @trans_times, [TransInterval] = @TransInterval, [log_stamp] = @lo" +
                "g_stamp, [oplog_stamp] = @oplog_stamp, [photo_stamp] = @photo_stamp, [UpdateDB] " +
                "= @UpdateDB, [device_name] = @device_name, [transaction_count] = @transaction_co" +
                "unt, [main_time] = @main_time, [max_user_count] = @max_user_count, [max_finger_c" +
                "ount] = @max_finger_count, [max_attlog_count] = @max_attlog_count, [alg_ver] = @" +
                "alg_ver, [flash_size] = @flash_size, [free_flash_size] = @free_flash_size, [lang" +
                "uage] = @language, [lng_encode] = @lng_encode, [volume] = @volume, [is_tft] = @i" +
                "s_tft, [platform] = @platform, [brightness] = @brightness, [oem_vendor] = @oem_v" +
                "endor, [city] = @city, [AccFun] = @AccFun, [TZAdj] = @TZAdj, [comm_type] = @comm" +
                "_type, [agent_ipaddress] = @agent_ipaddress, [subnet_mask] = @subnet_mask, [gate" +
                "way] = @gateway, [area_id] = @area_id, [acpanel_type] = @acpanel_type, [sync_tim" +
                "e] = @sync_time, [four_to_two] = @four_to_two, [video_login] = @video_login, [fp" +
                "_mthreshold] = @fp_mthreshold, [Fpversion] = @Fpversion, [max_comm_size] = @max_" +
                "comm_size, [max_comm_count] = @max_comm_count, [realtime] = @realtime, [delay] =" +
                " @delay, [encrypt] = @encrypt, [dstime_id] = @dstime_id, [door_count] = @door_co" +
                "unt, [reader_count] = @reader_count, [aux_in_count] = @aux_in_count, [aux_out_co" +
                "unt] = @aux_out_count, [IsOnlyRFMachine] = @IsOnlyRFMachine, [alias] = @alias, [" +
                "ipaddress] = @ipaddress, [com_port] = @com_port, [com_address] = @com_address, [" +
                "SimpleEventType] = @SimpleEventType, [FvFunOn] = @FvFunOn, [fvcount] = @fvcount," +
                " [deviceOption] = @deviceOption, [DevSDKType] = @DevSDKType, [UTableDesc] = @UTa" +
                "bleDesc, [IsTFTMachine] = @IsTFTMachine, [PinWidth] = @PinWidth, [UserExtFmt] = " +
                "@UserExtFmt, [FP1_NThreshold] = @FP1_NThreshold, [FP1_1Threshold] = @FP1_1Thresh" +
                "old, [Face1_NThreshold] = @Face1_NThreshold, [Face1_1Threshold] = @Face1_1Thresh" +
                "old, [Only1_1Mode] = @Only1_1Mode, [OnlyCheckCard] = @OnlyCheckCard, [MifireMust" +
                "Registered] = @MifireMustRegistered, [RFCardOn] = @RFCardOn, [Mifire] = @Mifire," +
                " [MifireId] = @MifireId, [NetOn] = @NetOn, [RS232On] = @RS232On, [RS485On] = @RS" +
                "485On, [FreeType] = @FreeType, [FreeTime] = @FreeTime, [NoDisplayFun] = @NoDispl" +
                "ayFun, [VoiceTipsOn] = @VoiceTipsOn, [TOMenu] = @TOMenu, [StdVolume] = @StdVolum" +
                "e, [VRYVH] = @VRYVH, [KeyPadBeep] = @KeyPadBeep, [BatchUpdate] = @BatchUpdate, [" +
                "CardFun] = @CardFun, [FaceFunOn] = @FaceFunOn, [FaceCount] = @FaceCount, [TimeAP" +
                "BFunOn] = @TimeAPBFunOn, [FingerFunOn] = @FingerFunOn, [CompatOldFirmware] = @Co" +
                "mpatOldFirmware, [ParamValues] = @ParamValues, [WirelessSSID] = @WirelessSSID, [" +
                "WirelessKey] = @WirelessKey, [WirelessAddr] = @WirelessAddr, [WirelessMask] = @W" +
                "irelessMask, [WirelessGateWay] = @WirelessGateWay, [IsWireless] = @IsWireless, [" +
                "managercount] = @managercount, [usercount] = @usercount, [fingercount] = @finger" +
                "count, [SecretCount] = @SecretCount, [ACFun] = @ACFun, [BiometricType] = @Biomet" +
                "ricType, [BiometricVersion] = @BiometricVersion, [BiometricMaxCount] = @Biometri" +
                "cMaxCount, [BiometricUsedCount] = @BiometricUsedCount, [WIFI] = @WIFI, [WIFIOn] " +
                "= @WIFIOn, [WIFIDHCP] = @WIFIDHCP WHERE (([ID] = @Original_ID) AND ((@IsNull_Mac" +
                "hineAlias = 1 AND [MachineAlias] IS NULL) OR ([MachineAlias] = @Original_Machine" +
                "Alias)) AND ((@IsNull_ConnectType = 1 AND [ConnectType] IS NULL) OR ([ConnectTyp" +
                "e] = @Original_ConnectType)) AND ((@IsNull_IP = 1 AND [IP] IS NULL) OR ([IP] = @" +
                "Original_IP)) AND ((@IsNull_SerialPort = 1 AND [SerialPort] IS NULL) OR ([Serial" +
                "Port] = @Original_SerialPort)) AND ((@IsNull_Port = 1 AND [Port] IS NULL) OR ([P" +
                "ort] = @Original_Port)) AND ((@IsNull_Baudrate = 1 AND [Baudrate] IS NULL) OR ([" +
                "Baudrate] = @Original_Baudrate)) AND ([MachineNumber] = @Original_MachineNumber)" +
                " AND ((@IsNull_IsHost = 1 AND [IsHost] IS NULL) OR ([IsHost] = @Original_IsHost)" +
                ") AND ([Enabled] = @Original_Enabled) AND ((@IsNull_CommPassword = 1 AND [CommPa" +
                "ssword] IS NULL) OR ([CommPassword] = @Original_CommPassword)) AND ((@IsNull_UIL" +
                "anguage = 1 AND [UILanguage] IS NULL) OR ([UILanguage] = @Original_UILanguage)) " +
                "AND ((@IsNull_DateFormat = 1 AND [DateFormat] IS NULL) OR ([DateFormat] = @Origi" +
                "nal_DateFormat)) AND ((@IsNull_InOutRecordWarn = 1 AND [InOutRecordWarn] IS NULL" +
                ") OR ([InOutRecordWarn] = @Original_InOutRecordWarn)) AND ((@IsNull_Idle = 1 AND" +
                " [Idle] IS NULL) OR ([Idle] = @Original_Idle)) AND ((@IsNull_Voice = 1 AND [Voic" +
                "e] IS NULL) OR ([Voice] = @Original_Voice)) AND ((@IsNull_FirmwareVersion = 1 AN" +
                "D [FirmwareVersion] IS NULL) OR ([FirmwareVersion] = @Original_FirmwareVersion))" +
                " AND ((@IsNull_ProductType = 1 AND [ProductType] IS NULL) OR ([ProductType] = @O" +
                "riginal_ProductType)) AND ((@IsNull_LockControl = 1 AND [LockControl] IS NULL) O" +
                "R ([LockControl] = @Original_LockControl)) AND ((@IsNull_Purpose = 1 AND [Purpos" +
                "e] IS NULL) OR ([Purpose] = @Original_Purpose)) AND ((@IsNull_ProduceKind = 1 AN" +
                "D [ProduceKind] IS NULL) OR ([ProduceKind] = @Original_ProduceKind)) AND ((@IsNu" +
                "ll_sn = 1 AND [sn] IS NULL) OR ([sn] = @Original_sn)) AND ((@IsNull_PhotoStamp =" +
                " 1 AND [PhotoStamp] IS NULL) OR ([PhotoStamp] = @Original_PhotoStamp)) AND ((@Is" +
                "Null_IsIfChangeConfigServer2 = 1 AND [IsIfChangeConfigServer2] IS NULL) OR ([IsI" +
                "fChangeConfigServer2] = @Original_IsIfChangeConfigServer2)) AND ((@IsNull_pushve" +
                "r = 1 AND [pushver] IS NULL) OR ([pushver] = @Original_pushver)) AND ((@IsNull_c" +
                "hange_operator = 1 AND [change_operator] IS NULL) OR ([change_operator] = @Origi" +
                "nal_change_operator)) AND ((@IsNull_change_time = 1 AND [change_time] IS NULL) O" +
                "R ([change_time] = @Original_change_time)) AND ((@IsNull_create_operator = 1 AND" +
                " [create_operator] IS NULL) OR ([create_operator] = @Original_create_operator)) " +
                "AND ((@IsNull_create_time = 1 AND [create_time] IS NULL) OR ([create_time] = @Or" +
                "iginal_create_time)) AND ((@IsNull_delete_operator = 1 AND [delete_operator] IS " +
                "NULL) OR ([delete_operator] = @Original_delete_operator)) AND ((@IsNull_delete_t" +
                "ime = 1 AND [delete_time] IS NULL) OR ([delete_time] = @Original_delete_time)) A" +
                "ND ((@IsNull_status = 1 AND [status] IS NULL) OR ([status] = @Original_status)) " +
                "AND ((@IsNull_device_type = 1 AND [device_type] IS NULL) OR ([device_type] = @Or" +
                "iginal_device_type)) AND ((@IsNull_last_activity = 1 AND [last_activity] IS NULL" +
                ") OR ([last_activity] = @Original_last_activity)) AND ((@IsNull_trans_times = 1 " +
                "AND [trans_times] IS NULL) OR ([trans_times] = @Original_trans_times)) AND ((@Is" +
                "Null_TransInterval = 1 AND [TransInterval] IS NULL) OR ([TransInterval] = @Origi" +
                "nal_TransInterval)) AND ((@IsNull_log_stamp = 1 AND [log_stamp] IS NULL) OR ([lo" +
                "g_stamp] = @Original_log_stamp)) AND ((@IsNull_UpdateDB = 1 AND [UpdateDB] IS NU" +
                "LL) OR ([UpdateDB] = @Original_UpdateDB)) AND ((@IsNull_device_name = 1 AND [dev" +
                "ice_name] IS NULL) OR ([device_name] = @Original_device_name)) AND ((@IsNull_tra" +
                "nsaction_count = 1 AND [transaction_count] IS NULL) OR ([transaction_count] = @O" +
                "riginal_transaction_count)) AND ((@IsNull_main_time = 1 AND [main_time] IS NULL)" +
                " OR ([main_time] = @Original_main_time)) AND ((@IsNull_max_user_count = 1 AND [m" +
                "ax_user_count] IS NULL) OR ([max_user_count] = @Original_max_user_count)) AND ((" +
                "@IsNull_max_finger_count = 1 AND [max_finger_count] IS NULL) OR ([max_finger_cou" +
                "nt] = @Original_max_finger_count)) AND ((@IsNull_max_attlog_count = 1 AND [max_a" +
                "ttlog_count] IS NULL) OR ([max_attlog_count] = @Original_max_attlog_count)) AND " +
                "((@IsNull_alg_ver = 1 AND [alg_ver] IS NULL) OR ([alg_ver] = @Original_alg_ver))" +
                " AND ((@IsNull_flash_size = 1 AND [flash_size] IS NULL) OR ([flash_size] = @Orig" +
                "inal_flash_size)) AND ((@IsNull_free_flash_size = 1 AND [free_flash_size] IS NUL" +
                "L) OR ([free_flash_size] = @Original_free_flash_size)) AND ((@IsNull_language = " +
                "1 AND [language] IS NULL) OR ([language] = @Original_language)) AND ((@IsNull_ln" +
                "g_encode = 1 AND [lng_encode] IS NULL) OR ([lng_encode] = @Original_lng_encode))" +
                " AND ((@IsNull_volume = 1 AND [volume] IS NULL) OR ([volume] = @Original_volume)" +
                ") AND ((@IsNull_is_tft = 1 AND [is_tft] IS NULL) OR ([is_tft] = @Original_is_tft" +
                ")) AND ((@IsNull_platform = 1 AND [platform] IS NULL) OR ([platform] = @Original" +
                "_platform)) AND ((@IsNull_brightness = 1 AND [brightness] IS NULL) OR ([brightne" +
                "ss] = @Original_brightness)) AND ((@IsNull_oem_vendor = 1 AND [oem_vendor] IS NU" +
                "LL) OR ([oem_vendor] = @Original_oem_vendor)) AND ((@IsNull_city = 1 AND [city] " +
                "IS NULL) OR ([city] = @Original_city)) AND ((@IsNull_AccFun = 1 AND [AccFun] IS " +
                "NULL) OR ([AccFun] = @Original_AccFun)) AND ((@IsNull_TZAdj = 1 AND [TZAdj] IS N" +
                "ULL) OR ([TZAdj] = @Original_TZAdj)) AND ((@IsNull_comm_type = 1 AND [comm_type]" +
                " IS NULL) OR ([comm_type] = @Original_comm_type)) AND ((@IsNull_agent_ipaddress " +
                "= 1 AND [agent_ipaddress] IS NULL) OR ([agent_ipaddress] = @Original_agent_ipadd" +
                "ress)) AND ((@IsNull_subnet_mask = 1 AND [subnet_mask] IS NULL) OR ([subnet_mask" +
                "] = @Original_subnet_mask)) AND ((@IsNull_gateway = 1 AND [gateway] IS NULL) OR " +
                "([gateway] = @Original_gateway)) AND ((@IsNull_area_id = 1 AND [area_id] IS NULL" +
                ") OR ([area_id] = @Original_area_id)) AND ((@IsNull_acpanel_type = 1 AND [acpane" +
                "l_type] IS NULL) OR ([acpanel_type] = @Original_acpanel_type)) AND ([sync_time] " +
                "= @Original_sync_time) AND ([four_to_two] = @Original_four_to_two) AND ((@IsNull" +
                "_video_login = 1 AND [video_login] IS NULL) OR ([video_login] = @Original_video_" +
                "login)) AND ((@IsNull_fp_mthreshold = 1 AND [fp_mthreshold] IS NULL) OR ([fp_mth" +
                "reshold] = @Original_fp_mthreshold)) AND ((@IsNull_Fpversion = 1 AND [Fpversion]" +
                " IS NULL) OR ([Fpversion] = @Original_Fpversion)) AND ((@IsNull_max_comm_size = " +
                "1 AND [max_comm_size] IS NULL) OR ([max_comm_size] = @Original_max_comm_size)) A" +
                "ND ((@IsNull_max_comm_count = 1 AND [max_comm_count] IS NULL) OR ([max_comm_coun" +
                "t] = @Original_max_comm_count)) AND ([realtime] = @Original_realtime) AND ((@IsN" +
                "ull_delay = 1 AND [delay] IS NULL) OR ([delay] = @Original_delay)) AND ([encrypt" +
                "] = @Original_encrypt) AND ((@IsNull_dstime_id = 1 AND [dstime_id] IS NULL) OR (" +
                "[dstime_id] = @Original_dstime_id)) AND ((@IsNull_door_count = 1 AND [door_count" +
                "] IS NULL) OR ([door_count] = @Original_door_count)) AND ((@IsNull_reader_count " +
                "= 1 AND [reader_count] IS NULL) OR ([reader_count] = @Original_reader_count)) AN" +
                "D ((@IsNull_aux_in_count = 1 AND [aux_in_count] IS NULL) OR ([aux_in_count] = @O" +
                "riginal_aux_in_count)) AND ((@IsNull_aux_out_count = 1 AND [aux_out_count] IS NU" +
                "LL) OR ([aux_out_count] = @Original_aux_out_count)) AND ((@IsNull_IsOnlyRFMachin" +
                "e = 1 AND [IsOnlyRFMachine] IS NULL) OR ([IsOnlyRFMachine] = @Original_IsOnlyRFM" +
                "achine)) AND ((@IsNull_alias = 1 AND [alias] IS NULL) OR ([alias] = @Original_al" +
                "ias)) AND ((@IsNull_ipaddress = 1 AND [ipaddress] IS NULL) OR ([ipaddress] = @Or" +
                "iginal_ipaddress)) AND ((@IsNull_com_port = 1 AND [com_port] IS NULL) OR ([com_p" +
                "ort] = @Original_com_port)) AND ((@IsNull_com_address = 1 AND [com_address] IS N" +
                "ULL) OR ([com_address] = @Original_com_address)) AND ((@IsNull_SimpleEventType =" +
                " 1 AND [SimpleEventType] IS NULL) OR ([SimpleEventType] = @Original_SimpleEventT" +
                "ype)) AND ((@IsNull_FvFunOn = 1 AND [FvFunOn] IS NULL) OR ([FvFunOn] = @Original" +
                "_FvFunOn)) AND ((@IsNull_fvcount = 1 AND [fvcount] IS NULL) OR ([fvcount] = @Ori" +
                "ginal_fvcount)) AND ((@IsNull_DevSDKType = 1 AND [DevSDKType] IS NULL) OR ([DevS" +
                "DKType] = @Original_DevSDKType)) AND ((@IsNull_IsTFTMachine = 1 AND [IsTFTMachin" +
                "e] IS NULL) OR ([IsTFTMachine] = @Original_IsTFTMachine)) AND ((@IsNull_PinWidth" +
                " = 1 AND [PinWidth] IS NULL) OR ([PinWidth] = @Original_PinWidth)) AND ((@IsNull" +
                "_UserExtFmt = 1 AND [UserExtFmt] IS NULL) OR ([UserExtFmt] = @Original_UserExtFm" +
                "t)) AND ((@IsNull_FP1_NThreshold = 1 AND [FP1_NThreshold] IS NULL) OR ([FP1_NThr" +
                "eshold] = @Original_FP1_NThreshold)) AND ((@IsNull_FP1_1Threshold = 1 AND [FP1_1" +
                "Threshold] IS NULL) OR ([FP1_1Threshold] = @Original_FP1_1Threshold)) AND ((@IsN" +
                "ull_Face1_NThreshold = 1 AND [Face1_NThreshold] IS NULL) OR ([Face1_NThreshold] " +
                "= @Original_Face1_NThreshold)) AND ((@IsNull_Face1_1Threshold = 1 AND [Face1_1Th" +
                "reshold] IS NULL) OR ([Face1_1Threshold] = @Original_Face1_1Threshold)) AND ((@I" +
                "sNull_Only1_1Mode = 1 AND [Only1_1Mode] IS NULL) OR ([Only1_1Mode] = @Original_O" +
                "nly1_1Mode)) AND ((@IsNull_OnlyCheckCard = 1 AND [OnlyCheckCard] IS NULL) OR ([O" +
                "nlyCheckCard] = @Original_OnlyCheckCard)) AND ((@IsNull_MifireMustRegistered = 1" +
                " AND [MifireMustRegistered] IS NULL) OR ([MifireMustRegistered] = @Original_Mifi" +
                "reMustRegistered)) AND ((@IsNull_RFCardOn = 1 AND [RFCardOn] IS NULL) OR ([RFCar" +
                "dOn] = @Original_RFCardOn)) AND ((@IsNull_Mifire = 1 AND [Mifire] IS NULL) OR ([" +
                "Mifire] = @Original_Mifire)) AND ((@IsNull_MifireId = 1 AND [MifireId] IS NULL) " +
                "OR ([MifireId] = @Original_MifireId)) AND ((@IsNull_NetOn = 1 AND [NetOn] IS NUL" +
                "L) OR ([NetOn] = @Original_NetOn)) AND ((@IsNull_RS232On = 1 AND [RS232On] IS NU" +
                "LL) OR ([RS232On] = @Original_RS232On)) AND ((@IsNull_RS485On = 1 AND [RS485On] " +
                "IS NULL) OR ([RS485On] = @Original_RS485On)) AND ((@IsNull_FreeType = 1 AND [Fre" +
                "eType] IS NULL) OR ([FreeType] = @Original_FreeType)) AND ((@IsNull_FreeTime = 1" +
                " AND [FreeTime] IS NULL) OR ([FreeTime] = @Original_FreeTime)) AND ((@IsNull_NoD" +
                "isplayFun = 1 AND [NoDisplayFun] IS NULL) OR ([NoDisplayFun] = @Original_NoDispl" +
                "ayFun)) AND ((@IsNull_VoiceTipsOn = 1 AND [VoiceTipsOn] IS NULL) OR ([VoiceTipsO" +
                "n] = @Original_VoiceTipsOn)) AND ((@IsNull_TOMenu = 1 AND [TOMenu] IS NULL) OR (" +
                "[TOMenu] = @Original_TOMenu)) AND ((@IsNull_StdVolume = 1 AND [StdVolume] IS NUL" +
                "L) OR ([StdVolume] = @Original_StdVolume)) AND ((@IsNull_VRYVH = 1 AND [VRYVH] I" +
                "S NULL) OR ([VRYVH] = @Original_VRYVH)) AND ((@IsNull_KeyPadBeep = 1 AND [KeyPad" +
                "Beep] IS NULL) OR ([KeyPadBeep] = @Original_KeyPadBeep)) AND ((@IsNull_BatchUpda" +
                "te = 1 AND [BatchUpdate] IS NULL) OR ([BatchUpdate] = @Original_BatchUpdate)) AN" +
                "D ((@IsNull_CardFun = 1 AND [CardFun] IS NULL) OR ([CardFun] = @Original_CardFun" +
                ")) AND ((@IsNull_FaceFunOn = 1 AND [FaceFunOn] IS NULL) OR ([FaceFunOn] = @Origi" +
                "nal_FaceFunOn)) AND ((@IsNull_FaceCount = 1 AND [FaceCount] IS NULL) OR ([FaceCo" +
                "unt] = @Original_FaceCount)) AND ((@IsNull_TimeAPBFunOn = 1 AND [TimeAPBFunOn] I" +
                "S NULL) OR ([TimeAPBFunOn] = @Original_TimeAPBFunOn)) AND ((@IsNull_FingerFunOn " +
                "= 1 AND [FingerFunOn] IS NULL) OR ([FingerFunOn] = @Original_FingerFunOn)) AND (" +
                "(@IsNull_CompatOldFirmware = 1 AND [CompatOldFirmware] IS NULL) OR ([CompatOldFi" +
                "rmware] = @Original_CompatOldFirmware)) AND ((@IsNull_WirelessSSID = 1 AND [Wire" +
                "lessSSID] IS NULL) OR ([WirelessSSID] = @Original_WirelessSSID)) AND ((@IsNull_W" +
                "irelessKey = 1 AND [WirelessKey] IS NULL) OR ([WirelessKey] = @Original_Wireless" +
                "Key)) AND ((@IsNull_WirelessAddr = 1 AND [WirelessAddr] IS NULL) OR ([WirelessAd" +
                "dr] = @Original_WirelessAddr)) AND ((@IsNull_WirelessMask = 1 AND [WirelessMask]" +
                " IS NULL) OR ([WirelessMask] = @Original_WirelessMask)) AND ((@IsNull_WirelessGa" +
                "teWay = 1 AND [WirelessGateWay] IS NULL) OR ([WirelessGateWay] = @Original_Wirel" +
                "essGateWay)) AND ((@IsNull_IsWireless = 1 AND [IsWireless] IS NULL) OR ([IsWirel" +
                "ess] = @Original_IsWireless)) AND ((@IsNull_managercount = 1 AND [managercount] " +
                "IS NULL) OR ([managercount] = @Original_managercount)) AND ((@IsNull_usercount =" +
                " 1 AND [usercount] IS NULL) OR ([usercount] = @Original_usercount)) AND ((@IsNul" +
                "l_fingercount = 1 AND [fingercount] IS NULL) OR ([fingercount] = @Original_finge" +
                "rcount)) AND ((@IsNull_SecretCount = 1 AND [SecretCount] IS NULL) OR ([SecretCou" +
                "nt] = @Original_SecretCount)) AND ((@IsNull_ACFun = 1 AND [ACFun] IS NULL) OR ([" +
                "ACFun] = @Original_ACFun)) AND ((@IsNull_BiometricType = 1 AND [BiometricType] I" +
                "S NULL) OR ([BiometricType] = @Original_BiometricType)) AND ((@IsNull_BiometricV" +
                "ersion = 1 AND [BiometricVersion] IS NULL) OR ([BiometricVersion] = @Original_Bi" +
                "ometricVersion)) AND ((@IsNull_BiometricMaxCount = 1 AND [BiometricMaxCount] IS " +
                "NULL) OR ([BiometricMaxCount] = @Original_BiometricMaxCount)) AND ((@IsNull_Biom" +
                "etricUsedCount = 1 AND [BiometricUsedCount] IS NULL) OR ([BiometricUsedCount] = " +
                "@Original_BiometricUsedCount)) AND ((@IsNull_WIFI = 1 AND [WIFI] IS NULL) OR ([W" +
                "IFI] = @Original_WIFI)) AND ((@IsNull_WIFIOn = 1 AND [WIFIOn] IS NULL) OR ([WIFI" +
                "On] = @Original_WIFIOn)) AND ((@IsNull_WIFIDHCP = 1 AND [WIFIDHCP] IS NULL) OR (" +
                "[WIFIDHCP] = @Original_WIFIDHCP)));\r\nSELECT ID, MachineAlias, ConnectType, IP, S" +
                "erialPort, Port, Baudrate, MachineNumber, IsHost, Enabled, CommPassword, UILangu" +
                "age, DateFormat, InOutRecordWarn, Idle, Voice, FirmwareVersion, ProductType, Loc" +
                "kControl, Purpose, ProduceKind, sn, PhotoStamp, IsIfChangeConfigServer2, pushver" +
                ", change_operator, change_time, create_operator, create_time, delete_operator, d" +
                "elete_time, status, device_type, last_activity, trans_times, TransInterval, log_" +
                "stamp, oplog_stamp, photo_stamp, UpdateDB, device_name, transaction_count, main_" +
                "time, max_user_count, max_finger_count, max_attlog_count, alg_ver, flash_size, f" +
                "ree_flash_size, language, lng_encode, volume, is_tft, platform, brightness, oem_" +
                "vendor, city, AccFun, TZAdj, comm_type, agent_ipaddress, subnet_mask, gateway, a" +
                "rea_id, acpanel_type, sync_time, four_to_two, video_login, fp_mthreshold, Fpvers" +
                "ion, max_comm_size, max_comm_count, realtime, delay, encrypt, dstime_id, door_co" +
                "unt, reader_count, aux_in_count, aux_out_count, IsOnlyRFMachine, alias, ipaddres" +
                "s, com_port, com_address, SimpleEventType, FvFunOn, fvcount, deviceOption, DevSD" +
                "KType, UTableDesc, IsTFTMachine, PinWidth, UserExtFmt, FP1_NThreshold, FP1_1Thre" +
                "shold, Face1_NThreshold, Face1_1Threshold, Only1_1Mode, OnlyCheckCard, MifireMus" +
                "tRegistered, RFCardOn, Mifire, MifireId, NetOn, RS232On, RS485On, FreeType, Free" +
                "Time, NoDisplayFun, VoiceTipsOn, TOMenu, StdVolume, VRYVH, KeyPadBeep, BatchUpda" +
                "te, CardFun, FaceFunOn, FaceCount, TimeAPBFunOn, FingerFunOn, CompatOldFirmware," +
                " ParamValues, WirelessSSID, WirelessKey, WirelessAddr, WirelessMask, WirelessGat" +
                "eWay, IsWireless, managercount, usercount, fingercount, SecretCount, ACFun, Biom" +
                "etricType, BiometricVersion, BiometricMaxCount, BiometricUsedCount, WIFI, WIFIOn" +
                ", WIFIDHCP FROM Machines WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MachineAlias", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineAlias", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConnectType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SerialPort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Baudrate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Baudrate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MachineNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsHost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommPassword", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UILanguage", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UILanguage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateFormat", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFormat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InOutRecordWarn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InOutRecordWarn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Idle", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Idle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Voice", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Voice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirmwareVersion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirmwareVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LockControl", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LockControl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Purpose", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProduceKind", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProduceKind", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhotoStamp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhotoStamp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsIfChangeConfigServer2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsIfChangeConfigServer2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pushver", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pushver", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@change_operator", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "change_operator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@change_time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "change_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_operator", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_operator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@delete_operator", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delete_operator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@delete_time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delete_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@device_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "device_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@last_activity", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_activity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trans_times", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trans_times", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransInterval", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransInterval", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@log_stamp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "log_stamp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@oplog_stamp", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "oplog_stamp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@photo_stamp", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "photo_stamp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@device_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "device_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@transaction_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transaction_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@main_time", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "main_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@max_user_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_user_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@max_finger_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_finger_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@max_attlog_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_attlog_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@alg_ver", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alg_ver", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@flash_size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flash_size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@free_flash_size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "free_flash_size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@language", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "language", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lng_encode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lng_encode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@volume", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "volume", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_tft", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_tft", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@platform", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "platform", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@brightness", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "brightness", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@oem_vendor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "oem_vendor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@city", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccFun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TZAdj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TZAdj", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@comm_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "comm_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agent_ipaddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_ipaddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subnet_mask", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subnet_mask", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gateway", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gateway", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@area_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "area_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acpanel_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "acpanel_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sync_time", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sync_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@four_to_two", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "four_to_two", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@video_login", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "video_login", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fp_mthreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fp_mthreshold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fpversion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fpversion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@max_comm_size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_comm_size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@max_comm_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_comm_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@realtime", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "realtime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@encrypt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "encrypt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dstime_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dstime_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@door_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "door_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reader_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reader_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aux_in_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aux_in_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aux_out_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aux_out_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsOnlyRFMachine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsOnlyRFMachine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@alias", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alias", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ipaddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ipaddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@com_port", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "com_port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@com_address", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "com_address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SimpleEventType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SimpleEventType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FvFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FvFunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fvcount", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fvcount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@deviceOption", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "deviceOption", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DevSDKType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DevSDKType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTableDesc", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UTableDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsTFTMachine", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsTFTMachine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PinWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PinWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserExtFmt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserExtFmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FP1_NThreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FP1_NThreshold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FP1_1Threshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FP1_1Threshold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Face1_NThreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Face1_NThreshold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Face1_1Threshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Face1_1Threshold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Only1_1Mode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Only1_1Mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnlyCheckCard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlyCheckCard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MifireMustRegistered", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MifireMustRegistered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RFCardOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFCardOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mifire", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mifire", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MifireId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MifireId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RS232On", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RS232On", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RS485On", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RS485On", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FreeType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FreeTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoDisplayFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoDisplayFun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoiceTipsOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoiceTipsOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOMenu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOMenu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StdVolume", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StdVolume", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VRYVH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VRYVH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KeyPadBeep", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyPadBeep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchUpdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchUpdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardFun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FaceFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaceFunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FaceCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaceCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeAPBFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeAPBFunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FingerFunOn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FingerFunOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompatOldFirmware", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompatOldFirmware", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParamValues", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ParamValues", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WirelessSSID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessSSID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WirelessKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WirelessAddr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessAddr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WirelessMask", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessMask", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WirelessGateWay", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessGateWay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsWireless", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsWireless", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@managercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "managercount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@usercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usercount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fingercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fingercount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecretCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecretCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACFun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiometricType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiometricVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiometricMaxCount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricMaxCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiometricUsedCount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricUsedCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WIFI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WIFIOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFIOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WIFIDHCP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFIDHCP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MachineAlias", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineAlias", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MachineAlias", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineAlias", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConnectType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConnectType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConnectType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SerialPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SerialPort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SerialPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SerialPort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Baudrate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Baudrate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Baudrate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Baudrate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MachineNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsHost", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHost", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsHost", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsHost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enabled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CommPassword", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommPassword", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommPassword", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommPassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UILanguage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UILanguage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UILanguage", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UILanguage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateFormat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFormat", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateFormat", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFormat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InOutRecordWarn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InOutRecordWarn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InOutRecordWarn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InOutRecordWarn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Idle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Idle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Idle", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Idle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Voice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Voice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Voice", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Voice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FirmwareVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirmwareVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FirmwareVersion", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirmwareVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProductType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LockControl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LockControl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LockControl", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LockControl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Purpose", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Purpose", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Purpose", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProduceKind", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProduceKind", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProduceKind", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProduceKind", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PhotoStamp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhotoStamp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PhotoStamp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PhotoStamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsIfChangeConfigServer2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsIfChangeConfigServer2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsIfChangeConfigServer2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsIfChangeConfigServer2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_pushver", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pushver", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_pushver", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pushver", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_change_operator", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "change_operator", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_change_operator", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "change_operator", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_change_time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "change_time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_change_time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "change_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_operator", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_operator", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_operator", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_operator", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_delete_operator", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delete_operator", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_delete_operator", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delete_operator", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_delete_time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delete_time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_delete_time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delete_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_device_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "device_type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_device_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "device_type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_last_activity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_activity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_last_activity", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_activity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_trans_times", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trans_times", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_trans_times", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "trans_times", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransInterval", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransInterval", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransInterval", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransInterval", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_log_stamp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "log_stamp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_log_stamp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "log_stamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdateDB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateDB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_device_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "device_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_device_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "device_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_transaction_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transaction_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_transaction_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "transaction_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_main_time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "main_time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_main_time", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "main_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_max_user_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_user_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_max_user_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_user_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_max_finger_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_finger_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_max_finger_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_finger_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_max_attlog_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_attlog_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_max_attlog_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_attlog_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_alg_ver", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alg_ver", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_alg_ver", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alg_ver", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_flash_size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flash_size", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_flash_size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "flash_size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_free_flash_size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "free_flash_size", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_free_flash_size", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "free_flash_size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_language", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "language", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_language", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "language", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_lng_encode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lng_encode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_lng_encode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lng_encode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_volume", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "volume", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_volume", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "volume", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_tft", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_tft", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_tft", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_tft", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_platform", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "platform", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_platform", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "platform", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_brightness", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "brightness", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_brightness", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "brightness", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_oem_vendor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "oem_vendor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_oem_vendor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "oem_vendor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_city", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_city", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AccFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccFun", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AccFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccFun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TZAdj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TZAdj", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TZAdj", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TZAdj", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_comm_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "comm_type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_comm_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "comm_type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_agent_ipaddress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_ipaddress", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_agent_ipaddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_ipaddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_subnet_mask", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subnet_mask", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_subnet_mask", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subnet_mask", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_gateway", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gateway", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gateway", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gateway", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_area_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "area_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_area_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "area_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_acpanel_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "acpanel_type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_acpanel_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "acpanel_type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sync_time", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sync_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_four_to_two", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "four_to_two", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_video_login", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "video_login", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_video_login", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "video_login", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fp_mthreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fp_mthreshold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fp_mthreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fp_mthreshold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fpversion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fpversion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fpversion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fpversion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_max_comm_size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_comm_size", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_max_comm_size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_comm_size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_max_comm_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_comm_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_max_comm_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "max_comm_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_realtime", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "realtime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_encrypt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "encrypt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dstime_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dstime_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dstime_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dstime_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_door_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "door_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_door_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "door_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_reader_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reader_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reader_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reader_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_aux_in_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aux_in_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_aux_in_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aux_in_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_aux_out_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aux_out_count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_aux_out_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aux_out_count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsOnlyRFMachine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsOnlyRFMachine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsOnlyRFMachine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsOnlyRFMachine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_alias", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alias", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_alias", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "alias", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ipaddress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ipaddress", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ipaddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ipaddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_com_port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "com_port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_com_port", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "com_port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_com_address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "com_address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_com_address", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "com_address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SimpleEventType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SimpleEventType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SimpleEventType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SimpleEventType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FvFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FvFunOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FvFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FvFunOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fvcount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fvcount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fvcount", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fvcount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DevSDKType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DevSDKType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DevSDKType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DevSDKType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsTFTMachine", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsTFTMachine", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsTFTMachine", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsTFTMachine", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PinWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PinWidth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PinWidth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PinWidth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserExtFmt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserExtFmt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserExtFmt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserExtFmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FP1_NThreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FP1_NThreshold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FP1_NThreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FP1_NThreshold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FP1_1Threshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FP1_1Threshold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FP1_1Threshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FP1_1Threshold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Face1_NThreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Face1_NThreshold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Face1_NThreshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Face1_NThreshold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Face1_1Threshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Face1_1Threshold", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Face1_1Threshold", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Face1_1Threshold", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Only1_1Mode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Only1_1Mode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Only1_1Mode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Only1_1Mode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OnlyCheckCard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlyCheckCard", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OnlyCheckCard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlyCheckCard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MifireMustRegistered", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MifireMustRegistered", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MifireMustRegistered", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MifireMustRegistered", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RFCardOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFCardOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RFCardOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFCardOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mifire", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mifire", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mifire", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mifire", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MifireId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MifireId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MifireId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MifireId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NetOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NetOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RS232On", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RS232On", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RS232On", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RS232On", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RS485On", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RS485On", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RS485On", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RS485On", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FreeType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FreeType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FreeTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FreeTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FreeTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NoDisplayFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoDisplayFun", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NoDisplayFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoDisplayFun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoiceTipsOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoiceTipsOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoiceTipsOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoiceTipsOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TOMenu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOMenu", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOMenu", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TOMenu", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StdVolume", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StdVolume", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StdVolume", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StdVolume", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VRYVH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VRYVH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VRYVH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VRYVH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KeyPadBeep", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyPadBeep", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KeyPadBeep", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyPadBeep", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BatchUpdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchUpdate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BatchUpdate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchUpdate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardFun", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardFun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FaceFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaceFunOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FaceFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaceFunOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FaceCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaceCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FaceCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaceCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TimeAPBFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeAPBFunOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TimeAPBFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeAPBFunOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FingerFunOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FingerFunOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FingerFunOn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FingerFunOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CompatOldFirmware", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompatOldFirmware", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompatOldFirmware", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompatOldFirmware", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WirelessSSID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessSSID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WirelessSSID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessSSID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WirelessKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessKey", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WirelessKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WirelessAddr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessAddr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WirelessAddr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessAddr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WirelessMask", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessMask", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WirelessMask", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessMask", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WirelessGateWay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessGateWay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WirelessGateWay", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WirelessGateWay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsWireless", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsWireless", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsWireless", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsWireless", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_managercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "managercount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_managercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "managercount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_usercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usercount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_usercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "usercount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fingercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fingercount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fingercount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fingercount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecretCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecretCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecretCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecretCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ACFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACFun", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACFun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACFun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiometricType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiometricType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiometricVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiometricVersion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiometricMaxCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricMaxCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiometricMaxCount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricMaxCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiometricUsedCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricUsedCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiometricUsedCount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiometricUsedCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WIFI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WIFI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WIFIOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFIOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WIFIOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFIOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WIFIDHCP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFIDHCP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WIFIDHCP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WIFIDHCP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::KetharaATTGUI.Properties.Settings.Default.KetharaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, MachineAlias, ConnectType, IP, SerialPort, Port, Baudrate, MachineNumb" +
                "er, IsHost, Enabled, CommPassword, UILanguage, DateFormat, InOutRecordWarn, Idle" +
                ", Voice, FirmwareVersion, ProductType, LockControl, Purpose, ProduceKind, sn, Ph" +
                "otoStamp, IsIfChangeConfigServer2, pushver, change_operator, change_time, create" +
                "_operator, create_time, delete_operator, delete_time, status, device_type, last_" +
                "activity, trans_times, TransInterval, log_stamp, oplog_stamp, photo_stamp, Updat" +
                "eDB, device_name, transaction_count, main_time, max_user_count, max_finger_count" +
                ", max_attlog_count, alg_ver, flash_size, free_flash_size, language, lng_encode, " +
                "volume, is_tft, platform, brightness, oem_vendor, city, AccFun, TZAdj, comm_type" +
                ", agent_ipaddress, subnet_mask, gateway, area_id, acpanel_type, sync_time, four_" +
                "to_two, video_login, fp_mthreshold, Fpversion, max_comm_size, max_comm_count, re" +
                "altime, delay, encrypt, dstime_id, door_count, reader_count, aux_in_count, aux_o" +
                "ut_count, IsOnlyRFMachine, alias, ipaddress, com_port, com_address, SimpleEventT" +
                "ype, FvFunOn, fvcount, deviceOption, DevSDKType, UTableDesc, IsTFTMachine, PinWi" +
                "dth, UserExtFmt, FP1_NThreshold, FP1_1Threshold, Face1_NThreshold, Face1_1Thresh" +
                "old, Only1_1Mode, OnlyCheckCard, MifireMustRegistered, RFCardOn, Mifire, MifireI" +
                "d, NetOn, RS232On, RS485On, FreeType, FreeTime, NoDisplayFun, VoiceTipsOn, TOMen" +
                "u, StdVolume, VRYVH, KeyPadBeep, BatchUpdate, CardFun, FaceFunOn, FaceCount, Tim" +
                "eAPBFunOn, FingerFunOn, CompatOldFirmware, ParamValues, WirelessSSID, WirelessKe" +
                "y, WirelessAddr, WirelessMask, WirelessGateWay, IsWireless, managercount, userco" +
                "unt, fingercount, SecretCount, ACFun, BiometricType, BiometricVersion, Biometric" +
                "MaxCount, BiometricUsedCount, WIFI, WIFIOn, WIFIDHCP FROM dbo.Machines";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AttendanceDataSet.MachinesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AttendanceDataSet.MachinesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AttendanceDataSet.MachinesDataTable dataTable = new AttendanceDataSet.MachinesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AttendanceDataSet.MachinesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AttendanceDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Machines");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    string Original_MachineAlias, 
                    global::System.Nullable<int> Original_ConnectType, 
                    string Original_IP, 
                    global::System.Nullable<int> Original_SerialPort, 
                    global::System.Nullable<int> Original_Port, 
                    global::System.Nullable<int> Original_Baudrate, 
                    int Original_MachineNumber, 
                    global::System.Nullable<bool> Original_IsHost, 
                    bool Original_Enabled, 
                    string Original_CommPassword, 
                    global::System.Nullable<short> Original_UILanguage, 
                    global::System.Nullable<short> Original_DateFormat, 
                    global::System.Nullable<short> Original_InOutRecordWarn, 
                    global::System.Nullable<short> Original_Idle, 
                    global::System.Nullable<short> Original_Voice, 
                    string Original_FirmwareVersion, 
                    string Original_ProductType, 
                    global::System.Nullable<short> Original_LockControl, 
                    global::System.Nullable<short> Original_Purpose, 
                    global::System.Nullable<int> Original_ProduceKind, 
                    string Original_sn, 
                    string Original_PhotoStamp, 
                    global::System.Nullable<int> Original_IsIfChangeConfigServer2, 
                    global::System.Nullable<int> Original_pushver, 
                    string Original_change_operator, 
                    global::System.Nullable<global::System.DateTime> Original_change_time, 
                    string Original_create_operator, 
                    global::System.Nullable<global::System.DateTime> Original_create_time, 
                    string Original_delete_operator, 
                    global::System.Nullable<global::System.DateTime> Original_delete_time, 
                    global::System.Nullable<int> Original_status, 
                    global::System.Nullable<int> Original_device_type, 
                    global::System.Nullable<global::System.DateTime> Original_last_activity, 
                    string Original_trans_times, 
                    global::System.Nullable<int> Original_TransInterval, 
                    string Original_log_stamp, 
                    string Original_UpdateDB, 
                    string Original_device_name, 
                    global::System.Nullable<int> Original_transaction_count, 
                    string Original_main_time, 
                    global::System.Nullable<int> Original_max_user_count, 
                    global::System.Nullable<int> Original_max_finger_count, 
                    global::System.Nullable<int> Original_max_attlog_count, 
                    string Original_alg_ver, 
                    string Original_flash_size, 
                    string Original_free_flash_size, 
                    string Original_language, 
                    string Original_lng_encode, 
                    string Original_volume, 
                    string Original_is_tft, 
                    string Original_platform, 
                    string Original_brightness, 
                    string Original_oem_vendor, 
                    string Original_city, 
                    global::System.Nullable<int> Original_AccFun, 
                    global::System.Nullable<int> Original_TZAdj, 
                    global::System.Nullable<int> Original_comm_type, 
                    string Original_agent_ipaddress, 
                    string Original_subnet_mask, 
                    string Original_gateway, 
                    global::System.Nullable<int> Original_area_id, 
                    global::System.Nullable<int> Original_acpanel_type, 
                    bool Original_sync_time, 
                    bool Original_four_to_two, 
                    string Original_video_login, 
                    global::System.Nullable<int> Original_fp_mthreshold, 
                    global::System.Nullable<int> Original_Fpversion, 
                    global::System.Nullable<int> Original_max_comm_size, 
                    global::System.Nullable<int> Original_max_comm_count, 
                    bool Original_realtime, 
                    global::System.Nullable<int> Original_delay, 
                    bool Original_encrypt, 
                    global::System.Nullable<int> Original_dstime_id, 
                    global::System.Nullable<int> Original_door_count, 
                    global::System.Nullable<int> Original_reader_count, 
                    global::System.Nullable<int> Original_aux_in_count, 
                    global::System.Nullable<int> Original_aux_out_count, 
                    global::System.Nullable<int> Original_IsOnlyRFMachine, 
                    string Original_alias, 
                    string Original_ipaddress, 
                    global::System.Nullable<short> Original_com_port, 
                    global::System.Nullable<short> Original_com_address, 
                    global::System.Nullable<int> Original_SimpleEventType, 
                    global::System.Nullable<int> Original_FvFunOn, 
                    global::System.Nullable<short> Original_fvcount, 
                    global::System.Nullable<int> Original_DevSDKType, 
                    global::System.Nullable<bool> Original_IsTFTMachine, 
                    global::System.Nullable<int> Original_PinWidth, 
                    global::System.Nullable<int> Original_UserExtFmt, 
                    global::System.Nullable<int> Original_FP1_NThreshold, 
                    global::System.Nullable<int> Original_FP1_1Threshold, 
                    global::System.Nullable<int> Original_Face1_NThreshold, 
                    global::System.Nullable<int> Original_Face1_1Threshold, 
                    global::System.Nullable<int> Original_Only1_1Mode, 
                    global::System.Nullable<int> Original_OnlyCheckCard, 
                    global::System.Nullable<int> Original_MifireMustRegistered, 
                    global::System.Nullable<int> Original_RFCardOn, 
                    global::System.Nullable<int> Original_Mifire, 
                    global::System.Nullable<int> Original_MifireId, 
                    global::System.Nullable<int> Original_NetOn, 
                    global::System.Nullable<int> Original_RS232On, 
                    global::System.Nullable<int> Original_RS485On, 
                    global::System.Nullable<int> Original_FreeType, 
                    global::System.Nullable<int> Original_FreeTime, 
                    global::System.Nullable<int> Original_NoDisplayFun, 
                    global::System.Nullable<int> Original_VoiceTipsOn, 
                    global::System.Nullable<int> Original_TOMenu, 
                    global::System.Nullable<int> Original_StdVolume, 
                    global::System.Nullable<int> Original_VRYVH, 
                    global::System.Nullable<int> Original_KeyPadBeep, 
                    global::System.Nullable<int> Original_BatchUpdate, 
                    global::System.Nullable<int> Original_CardFun, 
                    global::System.Nullable<int> Original_FaceFunOn, 
                    global::System.Nullable<int> Original_FaceCount, 
                    global::System.Nullable<int> Original_TimeAPBFunOn, 
                    string Original_FingerFunOn, 
                    string Original_CompatOldFirmware, 
                    string Original_WirelessSSID, 
                    string Original_WirelessKey, 
                    string Original_WirelessAddr, 
                    string Original_WirelessMask, 
                    string Original_WirelessGateWay, 
                    global::System.Nullable<bool> Original_IsWireless, 
                    global::System.Nullable<int> Original_managercount, 
                    global::System.Nullable<int> Original_usercount, 
                    global::System.Nullable<int> Original_fingercount, 
                    global::System.Nullable<int> Original_SecretCount, 
                    global::System.Nullable<int> Original_ACFun, 
                    string Original_BiometricType, 
                    string Original_BiometricVersion, 
                    string Original_BiometricMaxCount, 
                    string Original_BiometricUsedCount, 
                    global::System.Nullable<int> Original_WIFI, 
                    global::System.Nullable<int> Original_WIFIOn, 
                    global::System.Nullable<int> Original_WIFIDHCP) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_MachineAlias == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MachineAlias));
            }
            if ((Original_ConnectType.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ConnectType.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_IP == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_IP));
            }
            if ((Original_SerialPort.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_SerialPort.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Port.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_Port.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Baudrate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_Baudrate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_MachineNumber));
            if ((Original_IsHost.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((bool)(Original_IsHost.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_Enabled));
            if ((Original_CommPassword == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_CommPassword));
            }
            if ((Original_UILanguage.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((short)(Original_UILanguage.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_DateFormat.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((short)(Original_DateFormat.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_InOutRecordWarn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((short)(Original_InOutRecordWarn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Idle.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((short)(Original_Idle.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Voice.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((short)(Original_Voice.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_FirmwareVersion == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_FirmwareVersion));
            }
            if ((Original_ProductType == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_ProductType));
            }
            if ((Original_LockControl.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((short)(Original_LockControl.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Purpose.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((short)(Original_Purpose.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_ProduceKind.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_ProduceKind.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_sn == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_sn));
            }
            if ((Original_PhotoStamp == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_PhotoStamp));
            }
            if ((Original_IsIfChangeConfigServer2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((int)(Original_IsIfChangeConfigServer2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_pushver.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((int)(Original_pushver.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_change_operator == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_change_operator));
            }
            if ((Original_change_time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((System.DateTime)(Original_change_time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_create_operator == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_create_operator));
            }
            if ((Original_create_time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((System.DateTime)(Original_create_time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_delete_operator == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_delete_operator));
            }
            if ((Original_delete_time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((System.DateTime)(Original_delete_time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_status.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((int)(Original_status.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_device_type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((int)(Original_device_type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_last_activity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((System.DateTime)(Original_last_activity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_trans_times == null)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_trans_times));
            }
            if ((Original_TransInterval.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((int)(Original_TransInterval.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_log_stamp == null)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((string)(Original_log_stamp));
            }
            if ((Original_UpdateDB == null)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((string)(Original_UpdateDB));
            }
            if ((Original_device_name == null)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((string)(Original_device_name));
            }
            if ((Original_transaction_count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((int)(Original_transaction_count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_main_time == null)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((string)(Original_main_time));
            }
            if ((Original_max_user_count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((int)(Original_max_user_count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_max_finger_count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((int)(Original_max_finger_count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_max_attlog_count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((int)(Original_max_attlog_count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_alg_ver == null)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((string)(Original_alg_ver));
            }
            if ((Original_flash_size == null)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((string)(Original_flash_size));
            }
            if ((Original_free_flash_size == null)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((string)(Original_free_flash_size));
            }
            if ((Original_language == null)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((string)(Original_language));
            }
            if ((Original_lng_encode == null)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((string)(Original_lng_encode));
            }
            if ((Original_volume == null)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((string)(Original_volume));
            }
            if ((Original_is_tft == null)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((string)(Original_is_tft));
            }
            if ((Original_platform == null)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((string)(Original_platform));
            }
            if ((Original_brightness == null)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((string)(Original_brightness));
            }
            if ((Original_oem_vendor == null)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((string)(Original_oem_vendor));
            }
            if ((Original_city == null)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((string)(Original_city));
            }
            if ((Original_AccFun.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((int)(Original_AccFun.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((Original_TZAdj.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((int)(Original_TZAdj.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((Original_comm_type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((int)(Original_comm_type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_agent_ipaddress == null)) {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[114].Value = ((string)(Original_agent_ipaddress));
            }
            if ((Original_subnet_mask == null)) {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[116].Value = ((string)(Original_subnet_mask));
            }
            if ((Original_gateway == null)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((string)(Original_gateway));
            }
            if ((Original_area_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((int)(Original_area_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_acpanel_type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((int)(Original_acpanel_type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[123].Value = ((bool)(Original_sync_time));
            this.Adapter.DeleteCommand.Parameters[124].Value = ((bool)(Original_four_to_two));
            if ((Original_video_login == null)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((string)(Original_video_login));
            }
            if ((Original_fp_mthreshold.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((int)(Original_fp_mthreshold.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_Fpversion.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((int)(Original_Fpversion.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_max_comm_size.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((int)(Original_max_comm_size.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((Original_max_comm_count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((int)(Original_max_comm_count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[135].Value = ((bool)(Original_realtime));
            if ((Original_delay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[137].Value = ((int)(Original_delay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[138].Value = ((bool)(Original_encrypt));
            if ((Original_dstime_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((int)(Original_dstime_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            if ((Original_door_count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[142].Value = ((int)(Original_door_count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((Original_reader_count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[144].Value = ((int)(Original_reader_count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            if ((Original_aux_in_count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[146].Value = ((int)(Original_aux_in_count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((Original_aux_out_count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((int)(Original_aux_out_count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_IsOnlyRFMachine.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((int)(Original_IsOnlyRFMachine.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((Original_alias == null)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((string)(Original_alias));
            }
            if ((Original_ipaddress == null)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((string)(Original_ipaddress));
            }
            if ((Original_com_port.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[156].Value = ((short)(Original_com_port.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            if ((Original_com_address.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[158].Value = ((short)(Original_com_address.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            if ((Original_SimpleEventType.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[160].Value = ((int)(Original_SimpleEventType.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            if ((Original_FvFunOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[162].Value = ((int)(Original_FvFunOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            if ((Original_fvcount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[164].Value = ((short)(Original_fvcount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[164].Value = global::System.DBNull.Value;
            }
            if ((Original_DevSDKType.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[165].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[166].Value = ((int)(Original_DevSDKType.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[165].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[166].Value = global::System.DBNull.Value;
            }
            if ((Original_IsTFTMachine.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[167].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[168].Value = ((bool)(Original_IsTFTMachine.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[167].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[168].Value = global::System.DBNull.Value;
            }
            if ((Original_PinWidth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[169].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[170].Value = ((int)(Original_PinWidth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[169].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[170].Value = global::System.DBNull.Value;
            }
            if ((Original_UserExtFmt.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[171].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[172].Value = ((int)(Original_UserExtFmt.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[171].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[172].Value = global::System.DBNull.Value;
            }
            if ((Original_FP1_NThreshold.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[173].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[174].Value = ((int)(Original_FP1_NThreshold.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[173].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[174].Value = global::System.DBNull.Value;
            }
            if ((Original_FP1_1Threshold.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[175].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[176].Value = ((int)(Original_FP1_1Threshold.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[175].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[176].Value = global::System.DBNull.Value;
            }
            if ((Original_Face1_NThreshold.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[177].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[178].Value = ((int)(Original_Face1_NThreshold.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[177].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[178].Value = global::System.DBNull.Value;
            }
            if ((Original_Face1_1Threshold.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[179].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[180].Value = ((int)(Original_Face1_1Threshold.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[179].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[180].Value = global::System.DBNull.Value;
            }
            if ((Original_Only1_1Mode.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[181].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[182].Value = ((int)(Original_Only1_1Mode.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[181].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[182].Value = global::System.DBNull.Value;
            }
            if ((Original_OnlyCheckCard.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[183].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[184].Value = ((int)(Original_OnlyCheckCard.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[183].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[184].Value = global::System.DBNull.Value;
            }
            if ((Original_MifireMustRegistered.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[185].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[186].Value = ((int)(Original_MifireMustRegistered.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[185].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[186].Value = global::System.DBNull.Value;
            }
            if ((Original_RFCardOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[187].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[188].Value = ((int)(Original_RFCardOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[187].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[188].Value = global::System.DBNull.Value;
            }
            if ((Original_Mifire.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[189].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[190].Value = ((int)(Original_Mifire.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[189].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[190].Value = global::System.DBNull.Value;
            }
            if ((Original_MifireId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[191].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[192].Value = ((int)(Original_MifireId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[191].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[192].Value = global::System.DBNull.Value;
            }
            if ((Original_NetOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[193].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[194].Value = ((int)(Original_NetOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[193].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[194].Value = global::System.DBNull.Value;
            }
            if ((Original_RS232On.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[195].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[196].Value = ((int)(Original_RS232On.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[195].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[196].Value = global::System.DBNull.Value;
            }
            if ((Original_RS485On.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[197].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[198].Value = ((int)(Original_RS485On.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[197].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            if ((Original_FreeType.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[199].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[200].Value = ((int)(Original_FreeType.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[199].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[200].Value = global::System.DBNull.Value;
            }
            if ((Original_FreeTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[201].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[202].Value = ((int)(Original_FreeTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[201].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            if ((Original_NoDisplayFun.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[203].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[204].Value = ((int)(Original_NoDisplayFun.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[203].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            if ((Original_VoiceTipsOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[205].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[206].Value = ((int)(Original_VoiceTipsOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[205].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            if ((Original_TOMenu.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[207].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[208].Value = ((int)(Original_TOMenu.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[207].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            if ((Original_StdVolume.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[210].Value = ((int)(Original_StdVolume.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            if ((Original_VRYVH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[212].Value = ((int)(Original_VRYVH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            if ((Original_KeyPadBeep.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[213].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[214].Value = ((int)(Original_KeyPadBeep.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[213].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[214].Value = global::System.DBNull.Value;
            }
            if ((Original_BatchUpdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[216].Value = ((int)(Original_BatchUpdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            if ((Original_CardFun.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[218].Value = ((int)(Original_CardFun.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            if ((Original_FaceFunOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[219].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[220].Value = ((int)(Original_FaceFunOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[219].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[220].Value = global::System.DBNull.Value;
            }
            if ((Original_FaceCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[221].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[222].Value = ((int)(Original_FaceCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[221].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[222].Value = global::System.DBNull.Value;
            }
            if ((Original_TimeAPBFunOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[223].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[224].Value = ((int)(Original_TimeAPBFunOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[223].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            if ((Original_FingerFunOn == null)) {
                this.Adapter.DeleteCommand.Parameters[225].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[226].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[225].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[226].Value = ((string)(Original_FingerFunOn));
            }
            if ((Original_CompatOldFirmware == null)) {
                this.Adapter.DeleteCommand.Parameters[227].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[228].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[227].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[228].Value = ((string)(Original_CompatOldFirmware));
            }
            if ((Original_WirelessSSID == null)) {
                this.Adapter.DeleteCommand.Parameters[229].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[230].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[229].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[230].Value = ((string)(Original_WirelessSSID));
            }
            if ((Original_WirelessKey == null)) {
                this.Adapter.DeleteCommand.Parameters[231].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[232].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[231].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[232].Value = ((string)(Original_WirelessKey));
            }
            if ((Original_WirelessAddr == null)) {
                this.Adapter.DeleteCommand.Parameters[233].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[234].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[233].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[234].Value = ((string)(Original_WirelessAddr));
            }
            if ((Original_WirelessMask == null)) {
                this.Adapter.DeleteCommand.Parameters[235].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[236].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[235].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[236].Value = ((string)(Original_WirelessMask));
            }
            if ((Original_WirelessGateWay == null)) {
                this.Adapter.DeleteCommand.Parameters[237].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[238].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[237].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[238].Value = ((string)(Original_WirelessGateWay));
            }
            if ((Original_IsWireless.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[239].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[240].Value = ((bool)(Original_IsWireless.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[239].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[240].Value = global::System.DBNull.Value;
            }
            if ((Original_managercount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[241].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[242].Value = ((int)(Original_managercount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[241].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[242].Value = global::System.DBNull.Value;
            }
            if ((Original_usercount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[243].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[244].Value = ((int)(Original_usercount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[243].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[244].Value = global::System.DBNull.Value;
            }
            if ((Original_fingercount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[245].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[246].Value = ((int)(Original_fingercount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[245].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[246].Value = global::System.DBNull.Value;
            }
            if ((Original_SecretCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[247].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[248].Value = ((int)(Original_SecretCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[247].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[248].Value = global::System.DBNull.Value;
            }
            if ((Original_ACFun.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[249].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[250].Value = ((int)(Original_ACFun.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[249].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[250].Value = global::System.DBNull.Value;
            }
            if ((Original_BiometricType == null)) {
                this.Adapter.DeleteCommand.Parameters[251].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[252].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[251].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[252].Value = ((string)(Original_BiometricType));
            }
            if ((Original_BiometricVersion == null)) {
                this.Adapter.DeleteCommand.Parameters[253].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[254].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[253].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[254].Value = ((string)(Original_BiometricVersion));
            }
            if ((Original_BiometricMaxCount == null)) {
                this.Adapter.DeleteCommand.Parameters[255].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[256].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[255].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[256].Value = ((string)(Original_BiometricMaxCount));
            }
            if ((Original_BiometricUsedCount == null)) {
                this.Adapter.DeleteCommand.Parameters[257].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[258].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[257].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[258].Value = ((string)(Original_BiometricUsedCount));
            }
            if ((Original_WIFI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[259].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[260].Value = ((int)(Original_WIFI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[259].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[260].Value = global::System.DBNull.Value;
            }
            if ((Original_WIFIOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[261].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[262].Value = ((int)(Original_WIFIOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[261].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[262].Value = global::System.DBNull.Value;
            }
            if ((Original_WIFIDHCP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[263].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[264].Value = ((int)(Original_WIFIDHCP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[263].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[264].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string MachineAlias, 
                    global::System.Nullable<int> ConnectType, 
                    string IP, 
                    global::System.Nullable<int> SerialPort, 
                    global::System.Nullable<int> Port, 
                    global::System.Nullable<int> Baudrate, 
                    int MachineNumber, 
                    global::System.Nullable<bool> IsHost, 
                    bool Enabled, 
                    string CommPassword, 
                    global::System.Nullable<short> UILanguage, 
                    global::System.Nullable<short> DateFormat, 
                    global::System.Nullable<short> InOutRecordWarn, 
                    global::System.Nullable<short> Idle, 
                    global::System.Nullable<short> Voice, 
                    string FirmwareVersion, 
                    string ProductType, 
                    global::System.Nullable<short> LockControl, 
                    global::System.Nullable<short> Purpose, 
                    global::System.Nullable<int> ProduceKind, 
                    string sn, 
                    string PhotoStamp, 
                    global::System.Nullable<int> IsIfChangeConfigServer2, 
                    global::System.Nullable<int> pushver, 
                    string change_operator, 
                    global::System.Nullable<global::System.DateTime> change_time, 
                    string create_operator, 
                    global::System.Nullable<global::System.DateTime> create_time, 
                    string delete_operator, 
                    global::System.Nullable<global::System.DateTime> delete_time, 
                    global::System.Nullable<int> status, 
                    global::System.Nullable<int> device_type, 
                    global::System.Nullable<global::System.DateTime> last_activity, 
                    string trans_times, 
                    global::System.Nullable<int> TransInterval, 
                    string log_stamp, 
                    byte[] oplog_stamp, 
                    byte[] photo_stamp, 
                    string UpdateDB, 
                    string device_name, 
                    global::System.Nullable<int> transaction_count, 
                    string main_time, 
                    global::System.Nullable<int> max_user_count, 
                    global::System.Nullable<int> max_finger_count, 
                    global::System.Nullable<int> max_attlog_count, 
                    string alg_ver, 
                    string flash_size, 
                    string free_flash_size, 
                    string language, 
                    string lng_encode, 
                    string volume, 
                    string is_tft, 
                    string platform, 
                    string brightness, 
                    string oem_vendor, 
                    string city, 
                    global::System.Nullable<int> AccFun, 
                    global::System.Nullable<int> TZAdj, 
                    global::System.Nullable<int> comm_type, 
                    string agent_ipaddress, 
                    string subnet_mask, 
                    string gateway, 
                    global::System.Nullable<int> area_id, 
                    global::System.Nullable<int> acpanel_type, 
                    bool sync_time, 
                    bool four_to_two, 
                    string video_login, 
                    global::System.Nullable<int> fp_mthreshold, 
                    global::System.Nullable<int> Fpversion, 
                    global::System.Nullable<int> max_comm_size, 
                    global::System.Nullable<int> max_comm_count, 
                    bool realtime, 
                    global::System.Nullable<int> delay, 
                    bool encrypt, 
                    global::System.Nullable<int> dstime_id, 
                    global::System.Nullable<int> door_count, 
                    global::System.Nullable<int> reader_count, 
                    global::System.Nullable<int> aux_in_count, 
                    global::System.Nullable<int> aux_out_count, 
                    global::System.Nullable<int> IsOnlyRFMachine, 
                    string alias, 
                    string ipaddress, 
                    global::System.Nullable<short> com_port, 
                    global::System.Nullable<short> com_address, 
                    global::System.Nullable<int> SimpleEventType, 
                    global::System.Nullable<int> FvFunOn, 
                    global::System.Nullable<short> fvcount, 
                    byte[] deviceOption, 
                    global::System.Nullable<int> DevSDKType, 
                    byte[] UTableDesc, 
                    global::System.Nullable<bool> IsTFTMachine, 
                    global::System.Nullable<int> PinWidth, 
                    global::System.Nullable<int> UserExtFmt, 
                    global::System.Nullable<int> FP1_NThreshold, 
                    global::System.Nullable<int> FP1_1Threshold, 
                    global::System.Nullable<int> Face1_NThreshold, 
                    global::System.Nullable<int> Face1_1Threshold, 
                    global::System.Nullable<int> Only1_1Mode, 
                    global::System.Nullable<int> OnlyCheckCard, 
                    global::System.Nullable<int> MifireMustRegistered, 
                    global::System.Nullable<int> RFCardOn, 
                    global::System.Nullable<int> Mifire, 
                    global::System.Nullable<int> MifireId, 
                    global::System.Nullable<int> NetOn, 
                    global::System.Nullable<int> RS232On, 
                    global::System.Nullable<int> RS485On, 
                    global::System.Nullable<int> FreeType, 
                    global::System.Nullable<int> FreeTime, 
                    global::System.Nullable<int> NoDisplayFun, 
                    global::System.Nullable<int> VoiceTipsOn, 
                    global::System.Nullable<int> TOMenu, 
                    global::System.Nullable<int> StdVolume, 
                    global::System.Nullable<int> VRYVH, 
                    global::System.Nullable<int> KeyPadBeep, 
                    global::System.Nullable<int> BatchUpdate, 
                    global::System.Nullable<int> CardFun, 
                    global::System.Nullable<int> FaceFunOn, 
                    global::System.Nullable<int> FaceCount, 
                    global::System.Nullable<int> TimeAPBFunOn, 
                    string FingerFunOn, 
                    string CompatOldFirmware, 
                    byte[] ParamValues, 
                    string WirelessSSID, 
                    string WirelessKey, 
                    string WirelessAddr, 
                    string WirelessMask, 
                    string WirelessGateWay, 
                    global::System.Nullable<bool> IsWireless, 
                    global::System.Nullable<int> managercount, 
                    global::System.Nullable<int> usercount, 
                    global::System.Nullable<int> fingercount, 
                    global::System.Nullable<int> SecretCount, 
                    global::System.Nullable<int> ACFun, 
                    string BiometricType, 
                    string BiometricVersion, 
                    string BiometricMaxCount, 
                    string BiometricUsedCount, 
                    global::System.Nullable<int> WIFI, 
                    global::System.Nullable<int> WIFIOn, 
                    global::System.Nullable<int> WIFIDHCP) {
            if ((MachineAlias == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MachineAlias));
            }
            if ((ConnectType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ConnectType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((IP == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(IP));
            }
            if ((SerialPort.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(SerialPort.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Port.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Port.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Baudrate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Baudrate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(MachineNumber));
            if ((IsHost.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(IsHost.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(Enabled));
            if ((CommPassword == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CommPassword));
            }
            if ((UILanguage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((short)(UILanguage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((DateFormat.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((short)(DateFormat.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((InOutRecordWarn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((short)(InOutRecordWarn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Idle.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((short)(Idle.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Voice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((short)(Voice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((FirmwareVersion == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(FirmwareVersion));
            }
            if ((ProductType == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ProductType));
            }
            if ((LockControl.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((short)(LockControl.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Purpose.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((short)(Purpose.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ProduceKind.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(ProduceKind.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((sn == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(sn));
            }
            if ((PhotoStamp == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(PhotoStamp));
            }
            if ((IsIfChangeConfigServer2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(IsIfChangeConfigServer2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((pushver.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(pushver.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((change_operator == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(change_operator));
            }
            if ((change_time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(change_time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((create_operator == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(create_operator));
            }
            if ((create_time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(create_time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((delete_operator == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(delete_operator));
            }
            if ((delete_time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((System.DateTime)(delete_time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((status.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((int)(status.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((device_type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((int)(device_type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((last_activity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((System.DateTime)(last_activity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((trans_times == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(trans_times));
            }
            if ((TransInterval.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((int)(TransInterval.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((log_stamp == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(log_stamp));
            }
            if ((oplog_stamp == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((byte[])(oplog_stamp));
            }
            if ((photo_stamp == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((byte[])(photo_stamp));
            }
            if ((UpdateDB == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(UpdateDB));
            }
            if ((device_name == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(device_name));
            }
            if ((transaction_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((int)(transaction_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((main_time == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(main_time));
            }
            if ((max_user_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((int)(max_user_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((max_finger_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((int)(max_finger_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((max_attlog_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((int)(max_attlog_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((alg_ver == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(alg_ver));
            }
            if ((flash_size == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(flash_size));
            }
            if ((free_flash_size == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(free_flash_size));
            }
            if ((language == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(language));
            }
            if ((lng_encode == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(lng_encode));
            }
            if ((volume == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(volume));
            }
            if ((is_tft == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(is_tft));
            }
            if ((platform == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(platform));
            }
            if ((brightness == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(brightness));
            }
            if ((oem_vendor == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(oem_vendor));
            }
            if ((city == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(city));
            }
            if ((AccFun.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((int)(AccFun.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((TZAdj.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((int)(TZAdj.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((comm_type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((int)(comm_type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((agent_ipaddress == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(agent_ipaddress));
            }
            if ((subnet_mask == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(subnet_mask));
            }
            if ((gateway == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(gateway));
            }
            if ((area_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((int)(area_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((acpanel_type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((int)(acpanel_type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[64].Value = ((bool)(sync_time));
            this.Adapter.InsertCommand.Parameters[65].Value = ((bool)(four_to_two));
            if ((video_login == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(video_login));
            }
            if ((fp_mthreshold.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((int)(fp_mthreshold.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Fpversion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((int)(Fpversion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((max_comm_size.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((int)(max_comm_size.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((max_comm_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((int)(max_comm_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[71].Value = ((bool)(realtime));
            if ((delay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((int)(delay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[73].Value = ((bool)(encrypt));
            if ((dstime_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((int)(dstime_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((door_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((int)(door_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((reader_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[76].Value = ((int)(reader_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((aux_in_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((int)(aux_in_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((aux_out_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((int)(aux_out_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((IsOnlyRFMachine.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((int)(IsOnlyRFMachine.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((alias == null)) {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = ((string)(alias));
            }
            if ((ipaddress == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(ipaddress));
            }
            if ((com_port.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[82].Value = ((short)(com_port.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((com_address.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[83].Value = ((short)(com_address.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((SimpleEventType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[84].Value = ((int)(SimpleEventType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((FvFunOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[85].Value = ((int)(FvFunOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((fvcount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[86].Value = ((short)(fvcount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((deviceOption == null)) {
                this.Adapter.InsertCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = ((byte[])(deviceOption));
            }
            if ((DevSDKType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[88].Value = ((int)(DevSDKType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((UTableDesc == null)) {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = ((byte[])(UTableDesc));
            }
            if ((IsTFTMachine.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[90].Value = ((bool)(IsTFTMachine.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((PinWidth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[91].Value = ((int)(PinWidth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((UserExtFmt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[92].Value = ((int)(UserExtFmt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((FP1_NThreshold.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[93].Value = ((int)(FP1_NThreshold.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((FP1_1Threshold.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[94].Value = ((int)(FP1_1Threshold.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Face1_NThreshold.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[95].Value = ((int)(Face1_NThreshold.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Face1_1Threshold.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[96].Value = ((int)(Face1_1Threshold.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Only1_1Mode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[97].Value = ((int)(Only1_1Mode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((OnlyCheckCard.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[98].Value = ((int)(OnlyCheckCard.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((MifireMustRegistered.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[99].Value = ((int)(MifireMustRegistered.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((RFCardOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[100].Value = ((int)(RFCardOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Mifire.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[101].Value = ((int)(Mifire.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((MifireId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[102].Value = ((int)(MifireId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((NetOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[103].Value = ((int)(NetOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((RS232On.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[104].Value = ((int)(RS232On.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((RS485On.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[105].Value = ((int)(RS485On.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((FreeType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[106].Value = ((int)(FreeType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((FreeTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[107].Value = ((int)(FreeTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((NoDisplayFun.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[108].Value = ((int)(NoDisplayFun.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((VoiceTipsOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[109].Value = ((int)(VoiceTipsOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((TOMenu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[110].Value = ((int)(TOMenu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((StdVolume.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[111].Value = ((int)(StdVolume.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((VRYVH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[112].Value = ((int)(VRYVH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((KeyPadBeep.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[113].Value = ((int)(KeyPadBeep.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((BatchUpdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[114].Value = ((int)(BatchUpdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((CardFun.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[115].Value = ((int)(CardFun.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((FaceFunOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[116].Value = ((int)(FaceFunOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((FaceCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[117].Value = ((int)(FaceCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((TimeAPBFunOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[118].Value = ((int)(TimeAPBFunOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((FingerFunOn == null)) {
                this.Adapter.InsertCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[119].Value = ((string)(FingerFunOn));
            }
            if ((CompatOldFirmware == null)) {
                this.Adapter.InsertCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[120].Value = ((string)(CompatOldFirmware));
            }
            if ((ParamValues == null)) {
                this.Adapter.InsertCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[121].Value = ((byte[])(ParamValues));
            }
            if ((WirelessSSID == null)) {
                this.Adapter.InsertCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[122].Value = ((string)(WirelessSSID));
            }
            if ((WirelessKey == null)) {
                this.Adapter.InsertCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[123].Value = ((string)(WirelessKey));
            }
            if ((WirelessAddr == null)) {
                this.Adapter.InsertCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[124].Value = ((string)(WirelessAddr));
            }
            if ((WirelessMask == null)) {
                this.Adapter.InsertCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[125].Value = ((string)(WirelessMask));
            }
            if ((WirelessGateWay == null)) {
                this.Adapter.InsertCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[126].Value = ((string)(WirelessGateWay));
            }
            if ((IsWireless.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[127].Value = ((bool)(IsWireless.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((managercount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[128].Value = ((int)(managercount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((usercount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[129].Value = ((int)(usercount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((fingercount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[130].Value = ((int)(fingercount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((SecretCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[131].Value = ((int)(SecretCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((ACFun.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[132].Value = ((int)(ACFun.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((BiometricType == null)) {
                this.Adapter.InsertCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[133].Value = ((string)(BiometricType));
            }
            if ((BiometricVersion == null)) {
                this.Adapter.InsertCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[134].Value = ((string)(BiometricVersion));
            }
            if ((BiometricMaxCount == null)) {
                this.Adapter.InsertCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[135].Value = ((string)(BiometricMaxCount));
            }
            if ((BiometricUsedCount == null)) {
                this.Adapter.InsertCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[136].Value = ((string)(BiometricUsedCount));
            }
            if ((WIFI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[137].Value = ((int)(WIFI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((WIFIOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[138].Value = ((int)(WIFIOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((WIFIDHCP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[139].Value = ((int)(WIFIDHCP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MachineAlias, 
                    global::System.Nullable<int> ConnectType, 
                    string IP, 
                    global::System.Nullable<int> SerialPort, 
                    global::System.Nullable<int> Port, 
                    global::System.Nullable<int> Baudrate, 
                    int MachineNumber, 
                    global::System.Nullable<bool> IsHost, 
                    bool Enabled, 
                    string CommPassword, 
                    global::System.Nullable<short> UILanguage, 
                    global::System.Nullable<short> DateFormat, 
                    global::System.Nullable<short> InOutRecordWarn, 
                    global::System.Nullable<short> Idle, 
                    global::System.Nullable<short> Voice, 
                    string FirmwareVersion, 
                    string ProductType, 
                    global::System.Nullable<short> LockControl, 
                    global::System.Nullable<short> Purpose, 
                    global::System.Nullable<int> ProduceKind, 
                    string sn, 
                    string PhotoStamp, 
                    global::System.Nullable<int> IsIfChangeConfigServer2, 
                    global::System.Nullable<int> pushver, 
                    string change_operator, 
                    global::System.Nullable<global::System.DateTime> change_time, 
                    string create_operator, 
                    global::System.Nullable<global::System.DateTime> create_time, 
                    string delete_operator, 
                    global::System.Nullable<global::System.DateTime> delete_time, 
                    global::System.Nullable<int> status, 
                    global::System.Nullable<int> device_type, 
                    global::System.Nullable<global::System.DateTime> last_activity, 
                    string trans_times, 
                    global::System.Nullable<int> TransInterval, 
                    string log_stamp, 
                    byte[] oplog_stamp, 
                    byte[] photo_stamp, 
                    string UpdateDB, 
                    string device_name, 
                    global::System.Nullable<int> transaction_count, 
                    string main_time, 
                    global::System.Nullable<int> max_user_count, 
                    global::System.Nullable<int> max_finger_count, 
                    global::System.Nullable<int> max_attlog_count, 
                    string alg_ver, 
                    string flash_size, 
                    string free_flash_size, 
                    string language, 
                    string lng_encode, 
                    string volume, 
                    string is_tft, 
                    string platform, 
                    string brightness, 
                    string oem_vendor, 
                    string city, 
                    global::System.Nullable<int> AccFun, 
                    global::System.Nullable<int> TZAdj, 
                    global::System.Nullable<int> comm_type, 
                    string agent_ipaddress, 
                    string subnet_mask, 
                    string gateway, 
                    global::System.Nullable<int> area_id, 
                    global::System.Nullable<int> acpanel_type, 
                    bool sync_time, 
                    bool four_to_two, 
                    string video_login, 
                    global::System.Nullable<int> fp_mthreshold, 
                    global::System.Nullable<int> Fpversion, 
                    global::System.Nullable<int> max_comm_size, 
                    global::System.Nullable<int> max_comm_count, 
                    bool realtime, 
                    global::System.Nullable<int> delay, 
                    bool encrypt, 
                    global::System.Nullable<int> dstime_id, 
                    global::System.Nullable<int> door_count, 
                    global::System.Nullable<int> reader_count, 
                    global::System.Nullable<int> aux_in_count, 
                    global::System.Nullable<int> aux_out_count, 
                    global::System.Nullable<int> IsOnlyRFMachine, 
                    string alias, 
                    string ipaddress, 
                    global::System.Nullable<short> com_port, 
                    global::System.Nullable<short> com_address, 
                    global::System.Nullable<int> SimpleEventType, 
                    global::System.Nullable<int> FvFunOn, 
                    global::System.Nullable<short> fvcount, 
                    byte[] deviceOption, 
                    global::System.Nullable<int> DevSDKType, 
                    byte[] UTableDesc, 
                    global::System.Nullable<bool> IsTFTMachine, 
                    global::System.Nullable<int> PinWidth, 
                    global::System.Nullable<int> UserExtFmt, 
                    global::System.Nullable<int> FP1_NThreshold, 
                    global::System.Nullable<int> FP1_1Threshold, 
                    global::System.Nullable<int> Face1_NThreshold, 
                    global::System.Nullable<int> Face1_1Threshold, 
                    global::System.Nullable<int> Only1_1Mode, 
                    global::System.Nullable<int> OnlyCheckCard, 
                    global::System.Nullable<int> MifireMustRegistered, 
                    global::System.Nullable<int> RFCardOn, 
                    global::System.Nullable<int> Mifire, 
                    global::System.Nullable<int> MifireId, 
                    global::System.Nullable<int> NetOn, 
                    global::System.Nullable<int> RS232On, 
                    global::System.Nullable<int> RS485On, 
                    global::System.Nullable<int> FreeType, 
                    global::System.Nullable<int> FreeTime, 
                    global::System.Nullable<int> NoDisplayFun, 
                    global::System.Nullable<int> VoiceTipsOn, 
                    global::System.Nullable<int> TOMenu, 
                    global::System.Nullable<int> StdVolume, 
                    global::System.Nullable<int> VRYVH, 
                    global::System.Nullable<int> KeyPadBeep, 
                    global::System.Nullable<int> BatchUpdate, 
                    global::System.Nullable<int> CardFun, 
                    global::System.Nullable<int> FaceFunOn, 
                    global::System.Nullable<int> FaceCount, 
                    global::System.Nullable<int> TimeAPBFunOn, 
                    string FingerFunOn, 
                    string CompatOldFirmware, 
                    byte[] ParamValues, 
                    string WirelessSSID, 
                    string WirelessKey, 
                    string WirelessAddr, 
                    string WirelessMask, 
                    string WirelessGateWay, 
                    global::System.Nullable<bool> IsWireless, 
                    global::System.Nullable<int> managercount, 
                    global::System.Nullable<int> usercount, 
                    global::System.Nullable<int> fingercount, 
                    global::System.Nullable<int> SecretCount, 
                    global::System.Nullable<int> ACFun, 
                    string BiometricType, 
                    string BiometricVersion, 
                    string BiometricMaxCount, 
                    string BiometricUsedCount, 
                    global::System.Nullable<int> WIFI, 
                    global::System.Nullable<int> WIFIOn, 
                    global::System.Nullable<int> WIFIDHCP, 
                    int Original_ID, 
                    string Original_MachineAlias, 
                    global::System.Nullable<int> Original_ConnectType, 
                    string Original_IP, 
                    global::System.Nullable<int> Original_SerialPort, 
                    global::System.Nullable<int> Original_Port, 
                    global::System.Nullable<int> Original_Baudrate, 
                    int Original_MachineNumber, 
                    global::System.Nullable<bool> Original_IsHost, 
                    bool Original_Enabled, 
                    string Original_CommPassword, 
                    global::System.Nullable<short> Original_UILanguage, 
                    global::System.Nullable<short> Original_DateFormat, 
                    global::System.Nullable<short> Original_InOutRecordWarn, 
                    global::System.Nullable<short> Original_Idle, 
                    global::System.Nullable<short> Original_Voice, 
                    string Original_FirmwareVersion, 
                    string Original_ProductType, 
                    global::System.Nullable<short> Original_LockControl, 
                    global::System.Nullable<short> Original_Purpose, 
                    global::System.Nullable<int> Original_ProduceKind, 
                    string Original_sn, 
                    string Original_PhotoStamp, 
                    global::System.Nullable<int> Original_IsIfChangeConfigServer2, 
                    global::System.Nullable<int> Original_pushver, 
                    string Original_change_operator, 
                    global::System.Nullable<global::System.DateTime> Original_change_time, 
                    string Original_create_operator, 
                    global::System.Nullable<global::System.DateTime> Original_create_time, 
                    string Original_delete_operator, 
                    global::System.Nullable<global::System.DateTime> Original_delete_time, 
                    global::System.Nullable<int> Original_status, 
                    global::System.Nullable<int> Original_device_type, 
                    global::System.Nullable<global::System.DateTime> Original_last_activity, 
                    string Original_trans_times, 
                    global::System.Nullable<int> Original_TransInterval, 
                    string Original_log_stamp, 
                    string Original_UpdateDB, 
                    string Original_device_name, 
                    global::System.Nullable<int> Original_transaction_count, 
                    string Original_main_time, 
                    global::System.Nullable<int> Original_max_user_count, 
                    global::System.Nullable<int> Original_max_finger_count, 
                    global::System.Nullable<int> Original_max_attlog_count, 
                    string Original_alg_ver, 
                    string Original_flash_size, 
                    string Original_free_flash_size, 
                    string Original_language, 
                    string Original_lng_encode, 
                    string Original_volume, 
                    string Original_is_tft, 
                    string Original_platform, 
                    string Original_brightness, 
                    string Original_oem_vendor, 
                    string Original_city, 
                    global::System.Nullable<int> Original_AccFun, 
                    global::System.Nullable<int> Original_TZAdj, 
                    global::System.Nullable<int> Original_comm_type, 
                    string Original_agent_ipaddress, 
                    string Original_subnet_mask, 
                    string Original_gateway, 
                    global::System.Nullable<int> Original_area_id, 
                    global::System.Nullable<int> Original_acpanel_type, 
                    bool Original_sync_time, 
                    bool Original_four_to_two, 
                    string Original_video_login, 
                    global::System.Nullable<int> Original_fp_mthreshold, 
                    global::System.Nullable<int> Original_Fpversion, 
                    global::System.Nullable<int> Original_max_comm_size, 
                    global::System.Nullable<int> Original_max_comm_count, 
                    bool Original_realtime, 
                    global::System.Nullable<int> Original_delay, 
                    bool Original_encrypt, 
                    global::System.Nullable<int> Original_dstime_id, 
                    global::System.Nullable<int> Original_door_count, 
                    global::System.Nullable<int> Original_reader_count, 
                    global::System.Nullable<int> Original_aux_in_count, 
                    global::System.Nullable<int> Original_aux_out_count, 
                    global::System.Nullable<int> Original_IsOnlyRFMachine, 
                    string Original_alias, 
                    string Original_ipaddress, 
                    global::System.Nullable<short> Original_com_port, 
                    global::System.Nullable<short> Original_com_address, 
                    global::System.Nullable<int> Original_SimpleEventType, 
                    global::System.Nullable<int> Original_FvFunOn, 
                    global::System.Nullable<short> Original_fvcount, 
                    global::System.Nullable<int> Original_DevSDKType, 
                    global::System.Nullable<bool> Original_IsTFTMachine, 
                    global::System.Nullable<int> Original_PinWidth, 
                    global::System.Nullable<int> Original_UserExtFmt, 
                    global::System.Nullable<int> Original_FP1_NThreshold, 
                    global::System.Nullable<int> Original_FP1_1Threshold, 
                    global::System.Nullable<int> Original_Face1_NThreshold, 
                    global::System.Nullable<int> Original_Face1_1Threshold, 
                    global::System.Nullable<int> Original_Only1_1Mode, 
                    global::System.Nullable<int> Original_OnlyCheckCard, 
                    global::System.Nullable<int> Original_MifireMustRegistered, 
                    global::System.Nullable<int> Original_RFCardOn, 
                    global::System.Nullable<int> Original_Mifire, 
                    global::System.Nullable<int> Original_MifireId, 
                    global::System.Nullable<int> Original_NetOn, 
                    global::System.Nullable<int> Original_RS232On, 
                    global::System.Nullable<int> Original_RS485On, 
                    global::System.Nullable<int> Original_FreeType, 
                    global::System.Nullable<int> Original_FreeTime, 
                    global::System.Nullable<int> Original_NoDisplayFun, 
                    global::System.Nullable<int> Original_VoiceTipsOn, 
                    global::System.Nullable<int> Original_TOMenu, 
                    global::System.Nullable<int> Original_StdVolume, 
                    global::System.Nullable<int> Original_VRYVH, 
                    global::System.Nullable<int> Original_KeyPadBeep, 
                    global::System.Nullable<int> Original_BatchUpdate, 
                    global::System.Nullable<int> Original_CardFun, 
                    global::System.Nullable<int> Original_FaceFunOn, 
                    global::System.Nullable<int> Original_FaceCount, 
                    global::System.Nullable<int> Original_TimeAPBFunOn, 
                    string Original_FingerFunOn, 
                    string Original_CompatOldFirmware, 
                    string Original_WirelessSSID, 
                    string Original_WirelessKey, 
                    string Original_WirelessAddr, 
                    string Original_WirelessMask, 
                    string Original_WirelessGateWay, 
                    global::System.Nullable<bool> Original_IsWireless, 
                    global::System.Nullable<int> Original_managercount, 
                    global::System.Nullable<int> Original_usercount, 
                    global::System.Nullable<int> Original_fingercount, 
                    global::System.Nullable<int> Original_SecretCount, 
                    global::System.Nullable<int> Original_ACFun, 
                    string Original_BiometricType, 
                    string Original_BiometricVersion, 
                    string Original_BiometricMaxCount, 
                    string Original_BiometricUsedCount, 
                    global::System.Nullable<int> Original_WIFI, 
                    global::System.Nullable<int> Original_WIFIOn, 
                    global::System.Nullable<int> Original_WIFIDHCP, 
                    int ID) {
            if ((MachineAlias == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MachineAlias));
            }
            if ((ConnectType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ConnectType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((IP == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(IP));
            }
            if ((SerialPort.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(SerialPort.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Port.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Port.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Baudrate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Baudrate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(MachineNumber));
            if ((IsHost.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(IsHost.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Enabled));
            if ((CommPassword == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CommPassword));
            }
            if ((UILanguage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((short)(UILanguage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((DateFormat.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((short)(DateFormat.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((InOutRecordWarn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((short)(InOutRecordWarn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Idle.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((short)(Idle.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Voice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((short)(Voice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((FirmwareVersion == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(FirmwareVersion));
            }
            if ((ProductType == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ProductType));
            }
            if ((LockControl.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((short)(LockControl.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Purpose.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((short)(Purpose.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ProduceKind.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(ProduceKind.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((sn == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(sn));
            }
            if ((PhotoStamp == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(PhotoStamp));
            }
            if ((IsIfChangeConfigServer2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(IsIfChangeConfigServer2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((pushver.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(pushver.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((change_operator == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(change_operator));
            }
            if ((change_time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(change_time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((create_operator == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(create_operator));
            }
            if ((create_time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(create_time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((delete_operator == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(delete_operator));
            }
            if ((delete_time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(delete_time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((device_type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(device_type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((last_activity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(last_activity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((trans_times == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(trans_times));
            }
            if ((TransInterval.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(TransInterval.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((log_stamp == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(log_stamp));
            }
            if ((oplog_stamp == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((byte[])(oplog_stamp));
            }
            if ((photo_stamp == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((byte[])(photo_stamp));
            }
            if ((UpdateDB == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(UpdateDB));
            }
            if ((device_name == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(device_name));
            }
            if ((transaction_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(transaction_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((main_time == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(main_time));
            }
            if ((max_user_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(max_user_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((max_finger_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(max_finger_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((max_attlog_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(max_attlog_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((alg_ver == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(alg_ver));
            }
            if ((flash_size == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(flash_size));
            }
            if ((free_flash_size == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(free_flash_size));
            }
            if ((language == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(language));
            }
            if ((lng_encode == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(lng_encode));
            }
            if ((volume == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(volume));
            }
            if ((is_tft == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(is_tft));
            }
            if ((platform == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(platform));
            }
            if ((brightness == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(brightness));
            }
            if ((oem_vendor == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(oem_vendor));
            }
            if ((city == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(city));
            }
            if ((AccFun.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(AccFun.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((TZAdj.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(TZAdj.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((comm_type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(comm_type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((agent_ipaddress == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(agent_ipaddress));
            }
            if ((subnet_mask == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(subnet_mask));
            }
            if ((gateway == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(gateway));
            }
            if ((area_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(area_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((acpanel_type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(acpanel_type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(sync_time));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(four_to_two));
            if ((video_login == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(video_login));
            }
            if ((fp_mthreshold.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(fp_mthreshold.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Fpversion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(Fpversion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((max_comm_size.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(max_comm_size.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((max_comm_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(max_comm_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[71].Value = ((bool)(realtime));
            if ((delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[73].Value = ((bool)(encrypt));
            if ((dstime_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(dstime_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((door_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(door_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((reader_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(reader_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((aux_in_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((int)(aux_in_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((aux_out_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(aux_out_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((IsOnlyRFMachine.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(IsOnlyRFMachine.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((alias == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(alias));
            }
            if ((ipaddress == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(ipaddress));
            }
            if ((com_port.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((short)(com_port.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((com_address.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((short)(com_address.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((SimpleEventType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((int)(SimpleEventType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((FvFunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((int)(FvFunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((fvcount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((short)(fvcount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((deviceOption == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((byte[])(deviceOption));
            }
            if ((DevSDKType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((int)(DevSDKType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((UTableDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((byte[])(UTableDesc));
            }
            if ((IsTFTMachine.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((bool)(IsTFTMachine.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((PinWidth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(PinWidth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((UserExtFmt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((int)(UserExtFmt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((FP1_NThreshold.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((int)(FP1_NThreshold.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((FP1_1Threshold.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((int)(FP1_1Threshold.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Face1_NThreshold.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((int)(Face1_NThreshold.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Face1_1Threshold.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((int)(Face1_1Threshold.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Only1_1Mode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((int)(Only1_1Mode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((OnlyCheckCard.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((int)(OnlyCheckCard.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((MifireMustRegistered.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((int)(MifireMustRegistered.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((RFCardOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((int)(RFCardOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Mifire.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((int)(Mifire.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((MifireId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((int)(MifireId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((NetOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((int)(NetOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((RS232On.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((int)(RS232On.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((RS485On.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((int)(RS485On.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((FreeType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((int)(FreeType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((FreeTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((int)(FreeTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((NoDisplayFun.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((int)(NoDisplayFun.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((VoiceTipsOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((int)(VoiceTipsOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((TOMenu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((int)(TOMenu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((StdVolume.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((int)(StdVolume.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((VRYVH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((int)(VRYVH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((KeyPadBeep.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((int)(KeyPadBeep.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((BatchUpdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((int)(BatchUpdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((CardFun.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((int)(CardFun.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((FaceFunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((int)(FaceFunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((FaceCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((int)(FaceCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((TimeAPBFunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((int)(TimeAPBFunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((FingerFunOn == null)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(FingerFunOn));
            }
            if ((CompatOldFirmware == null)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((string)(CompatOldFirmware));
            }
            if ((ParamValues == null)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((byte[])(ParamValues));
            }
            if ((WirelessSSID == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((string)(WirelessSSID));
            }
            if ((WirelessKey == null)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(WirelessKey));
            }
            if ((WirelessAddr == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(WirelessAddr));
            }
            if ((WirelessMask == null)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(WirelessMask));
            }
            if ((WirelessGateWay == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((string)(WirelessGateWay));
            }
            if ((IsWireless.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((bool)(IsWireless.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((managercount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((int)(managercount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((usercount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((int)(usercount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((fingercount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((int)(fingercount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((SecretCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((int)(SecretCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((ACFun.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((int)(ACFun.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((BiometricType == null)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((string)(BiometricType));
            }
            if ((BiometricVersion == null)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((string)(BiometricVersion));
            }
            if ((BiometricMaxCount == null)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(BiometricMaxCount));
            }
            if ((BiometricUsedCount == null)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((string)(BiometricUsedCount));
            }
            if ((WIFI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((int)(WIFI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((WIFIOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((int)(WIFIOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((WIFIDHCP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((int)(WIFIDHCP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[140].Value = ((int)(Original_ID));
            if ((Original_MachineAlias == null)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[142].Value = ((string)(Original_MachineAlias));
            }
            if ((Original_ConnectType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((int)(Original_ConnectType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            if ((Original_IP == null)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[146].Value = ((string)(Original_IP));
            }
            if ((Original_SerialPort.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((int)(Original_SerialPort.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_Port.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[150].Value = ((int)(Original_Port.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((Original_Baudrate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((int)(Original_Baudrate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[153].Value = ((int)(Original_MachineNumber));
            if ((Original_IsHost.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((bool)(Original_IsHost.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[156].Value = ((bool)(Original_Enabled));
            if ((Original_CommPassword == null)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((string)(Original_CommPassword));
            }
            if ((Original_UILanguage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[160].Value = ((short)(Original_UILanguage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            if ((Original_DateFormat.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[162].Value = ((short)(Original_DateFormat.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            if ((Original_InOutRecordWarn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[164].Value = ((short)(Original_InOutRecordWarn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[164].Value = global::System.DBNull.Value;
            }
            if ((Original_Idle.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[166].Value = ((short)(Original_Idle.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[166].Value = global::System.DBNull.Value;
            }
            if ((Original_Voice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[168].Value = ((short)(Original_Voice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[168].Value = global::System.DBNull.Value;
            }
            if ((Original_FirmwareVersion == null)) {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[170].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[170].Value = ((string)(Original_FirmwareVersion));
            }
            if ((Original_ProductType == null)) {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[172].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[172].Value = ((string)(Original_ProductType));
            }
            if ((Original_LockControl.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[174].Value = ((short)(Original_LockControl.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[174].Value = global::System.DBNull.Value;
            }
            if ((Original_Purpose.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[176].Value = ((short)(Original_Purpose.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[176].Value = global::System.DBNull.Value;
            }
            if ((Original_ProduceKind.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[178].Value = ((int)(Original_ProduceKind.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[178].Value = global::System.DBNull.Value;
            }
            if ((Original_sn == null)) {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[180].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[180].Value = ((string)(Original_sn));
            }
            if ((Original_PhotoStamp == null)) {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[182].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[182].Value = ((string)(Original_PhotoStamp));
            }
            if ((Original_IsIfChangeConfigServer2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[184].Value = ((int)(Original_IsIfChangeConfigServer2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[184].Value = global::System.DBNull.Value;
            }
            if ((Original_pushver.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[186].Value = ((int)(Original_pushver.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[186].Value = global::System.DBNull.Value;
            }
            if ((Original_change_operator == null)) {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[188].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[188].Value = ((string)(Original_change_operator));
            }
            if ((Original_change_time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[190].Value = ((System.DateTime)(Original_change_time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[190].Value = global::System.DBNull.Value;
            }
            if ((Original_create_operator == null)) {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[192].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[192].Value = ((string)(Original_create_operator));
            }
            if ((Original_create_time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[194].Value = ((System.DateTime)(Original_create_time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[194].Value = global::System.DBNull.Value;
            }
            if ((Original_delete_operator == null)) {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[196].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[196].Value = ((string)(Original_delete_operator));
            }
            if ((Original_delete_time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[198].Value = ((System.DateTime)(Original_delete_time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            if ((Original_status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[200].Value = ((int)(Original_status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[200].Value = global::System.DBNull.Value;
            }
            if ((Original_device_type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[202].Value = ((int)(Original_device_type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            if ((Original_last_activity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[204].Value = ((System.DateTime)(Original_last_activity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            if ((Original_trans_times == null)) {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[206].Value = ((string)(Original_trans_times));
            }
            if ((Original_TransInterval.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[208].Value = ((int)(Original_TransInterval.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            if ((Original_log_stamp == null)) {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[210].Value = ((string)(Original_log_stamp));
            }
            if ((Original_UpdateDB == null)) {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[212].Value = ((string)(Original_UpdateDB));
            }
            if ((Original_device_name == null)) {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[214].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[214].Value = ((string)(Original_device_name));
            }
            if ((Original_transaction_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[216].Value = ((int)(Original_transaction_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            if ((Original_main_time == null)) {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[218].Value = ((string)(Original_main_time));
            }
            if ((Original_max_user_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[220].Value = ((int)(Original_max_user_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[220].Value = global::System.DBNull.Value;
            }
            if ((Original_max_finger_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[222].Value = ((int)(Original_max_finger_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[222].Value = global::System.DBNull.Value;
            }
            if ((Original_max_attlog_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[224].Value = ((int)(Original_max_attlog_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            if ((Original_alg_ver == null)) {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[226].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[226].Value = ((string)(Original_alg_ver));
            }
            if ((Original_flash_size == null)) {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[228].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[228].Value = ((string)(Original_flash_size));
            }
            if ((Original_free_flash_size == null)) {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[230].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[230].Value = ((string)(Original_free_flash_size));
            }
            if ((Original_language == null)) {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[232].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[232].Value = ((string)(Original_language));
            }
            if ((Original_lng_encode == null)) {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[234].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[234].Value = ((string)(Original_lng_encode));
            }
            if ((Original_volume == null)) {
                this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[236].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[235].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[236].Value = ((string)(Original_volume));
            }
            if ((Original_is_tft == null)) {
                this.Adapter.UpdateCommand.Parameters[237].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[238].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[237].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[238].Value = ((string)(Original_is_tft));
            }
            if ((Original_platform == null)) {
                this.Adapter.UpdateCommand.Parameters[239].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[240].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[239].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[240].Value = ((string)(Original_platform));
            }
            if ((Original_brightness == null)) {
                this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[242].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[241].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[242].Value = ((string)(Original_brightness));
            }
            if ((Original_oem_vendor == null)) {
                this.Adapter.UpdateCommand.Parameters[243].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[244].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[243].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[244].Value = ((string)(Original_oem_vendor));
            }
            if ((Original_city == null)) {
                this.Adapter.UpdateCommand.Parameters[245].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[246].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[245].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[246].Value = ((string)(Original_city));
            }
            if ((Original_AccFun.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[247].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[248].Value = ((int)(Original_AccFun.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[247].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[248].Value = global::System.DBNull.Value;
            }
            if ((Original_TZAdj.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[249].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[250].Value = ((int)(Original_TZAdj.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[249].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[250].Value = global::System.DBNull.Value;
            }
            if ((Original_comm_type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[251].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[252].Value = ((int)(Original_comm_type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[251].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[252].Value = global::System.DBNull.Value;
            }
            if ((Original_agent_ipaddress == null)) {
                this.Adapter.UpdateCommand.Parameters[253].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[254].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[253].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[254].Value = ((string)(Original_agent_ipaddress));
            }
            if ((Original_subnet_mask == null)) {
                this.Adapter.UpdateCommand.Parameters[255].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[256].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[255].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[256].Value = ((string)(Original_subnet_mask));
            }
            if ((Original_gateway == null)) {
                this.Adapter.UpdateCommand.Parameters[257].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[258].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[257].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[258].Value = ((string)(Original_gateway));
            }
            if ((Original_area_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[259].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[260].Value = ((int)(Original_area_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[259].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[260].Value = global::System.DBNull.Value;
            }
            if ((Original_acpanel_type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[261].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[262].Value = ((int)(Original_acpanel_type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[261].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[262].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[263].Value = ((bool)(Original_sync_time));
            this.Adapter.UpdateCommand.Parameters[264].Value = ((bool)(Original_four_to_two));
            if ((Original_video_login == null)) {
                this.Adapter.UpdateCommand.Parameters[265].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[266].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[265].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[266].Value = ((string)(Original_video_login));
            }
            if ((Original_fp_mthreshold.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[267].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[268].Value = ((int)(Original_fp_mthreshold.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[267].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[268].Value = global::System.DBNull.Value;
            }
            if ((Original_Fpversion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[269].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[270].Value = ((int)(Original_Fpversion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[269].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[270].Value = global::System.DBNull.Value;
            }
            if ((Original_max_comm_size.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[271].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[272].Value = ((int)(Original_max_comm_size.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[271].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[272].Value = global::System.DBNull.Value;
            }
            if ((Original_max_comm_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[273].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[274].Value = ((int)(Original_max_comm_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[273].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[274].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[275].Value = ((bool)(Original_realtime));
            if ((Original_delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[276].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[277].Value = ((int)(Original_delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[276].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[277].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[278].Value = ((bool)(Original_encrypt));
            if ((Original_dstime_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[279].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[280].Value = ((int)(Original_dstime_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[279].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[280].Value = global::System.DBNull.Value;
            }
            if ((Original_door_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[281].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[282].Value = ((int)(Original_door_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[281].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[282].Value = global::System.DBNull.Value;
            }
            if ((Original_reader_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[283].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[284].Value = ((int)(Original_reader_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[283].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[284].Value = global::System.DBNull.Value;
            }
            if ((Original_aux_in_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[285].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[286].Value = ((int)(Original_aux_in_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[285].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[286].Value = global::System.DBNull.Value;
            }
            if ((Original_aux_out_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[287].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[288].Value = ((int)(Original_aux_out_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[287].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[288].Value = global::System.DBNull.Value;
            }
            if ((Original_IsOnlyRFMachine.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[289].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[290].Value = ((int)(Original_IsOnlyRFMachine.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[289].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[290].Value = global::System.DBNull.Value;
            }
            if ((Original_alias == null)) {
                this.Adapter.UpdateCommand.Parameters[291].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[292].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[291].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[292].Value = ((string)(Original_alias));
            }
            if ((Original_ipaddress == null)) {
                this.Adapter.UpdateCommand.Parameters[293].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[294].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[293].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[294].Value = ((string)(Original_ipaddress));
            }
            if ((Original_com_port.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[295].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[296].Value = ((short)(Original_com_port.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[295].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[296].Value = global::System.DBNull.Value;
            }
            if ((Original_com_address.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[297].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[298].Value = ((short)(Original_com_address.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[297].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[298].Value = global::System.DBNull.Value;
            }
            if ((Original_SimpleEventType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[299].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[300].Value = ((int)(Original_SimpleEventType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[299].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[300].Value = global::System.DBNull.Value;
            }
            if ((Original_FvFunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[301].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[302].Value = ((int)(Original_FvFunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[301].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[302].Value = global::System.DBNull.Value;
            }
            if ((Original_fvcount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[303].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[304].Value = ((short)(Original_fvcount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[303].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[304].Value = global::System.DBNull.Value;
            }
            if ((Original_DevSDKType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[305].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[306].Value = ((int)(Original_DevSDKType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[305].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[306].Value = global::System.DBNull.Value;
            }
            if ((Original_IsTFTMachine.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[307].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[308].Value = ((bool)(Original_IsTFTMachine.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[307].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[308].Value = global::System.DBNull.Value;
            }
            if ((Original_PinWidth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[309].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[310].Value = ((int)(Original_PinWidth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[309].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[310].Value = global::System.DBNull.Value;
            }
            if ((Original_UserExtFmt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[311].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[312].Value = ((int)(Original_UserExtFmt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[311].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[312].Value = global::System.DBNull.Value;
            }
            if ((Original_FP1_NThreshold.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[313].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[314].Value = ((int)(Original_FP1_NThreshold.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[313].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[314].Value = global::System.DBNull.Value;
            }
            if ((Original_FP1_1Threshold.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[315].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[316].Value = ((int)(Original_FP1_1Threshold.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[315].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[316].Value = global::System.DBNull.Value;
            }
            if ((Original_Face1_NThreshold.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[317].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[318].Value = ((int)(Original_Face1_NThreshold.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[317].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[318].Value = global::System.DBNull.Value;
            }
            if ((Original_Face1_1Threshold.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[319].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[320].Value = ((int)(Original_Face1_1Threshold.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[319].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[320].Value = global::System.DBNull.Value;
            }
            if ((Original_Only1_1Mode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[321].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[322].Value = ((int)(Original_Only1_1Mode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[321].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[322].Value = global::System.DBNull.Value;
            }
            if ((Original_OnlyCheckCard.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[323].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[324].Value = ((int)(Original_OnlyCheckCard.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[323].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[324].Value = global::System.DBNull.Value;
            }
            if ((Original_MifireMustRegistered.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[325].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[326].Value = ((int)(Original_MifireMustRegistered.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[325].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[326].Value = global::System.DBNull.Value;
            }
            if ((Original_RFCardOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[327].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[328].Value = ((int)(Original_RFCardOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[327].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[328].Value = global::System.DBNull.Value;
            }
            if ((Original_Mifire.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[329].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[330].Value = ((int)(Original_Mifire.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[329].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[330].Value = global::System.DBNull.Value;
            }
            if ((Original_MifireId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[331].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[332].Value = ((int)(Original_MifireId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[331].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[332].Value = global::System.DBNull.Value;
            }
            if ((Original_NetOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[333].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[334].Value = ((int)(Original_NetOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[333].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[334].Value = global::System.DBNull.Value;
            }
            if ((Original_RS232On.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[335].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[336].Value = ((int)(Original_RS232On.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[335].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[336].Value = global::System.DBNull.Value;
            }
            if ((Original_RS485On.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[337].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[338].Value = ((int)(Original_RS485On.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[337].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[338].Value = global::System.DBNull.Value;
            }
            if ((Original_FreeType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[339].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[340].Value = ((int)(Original_FreeType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[339].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[340].Value = global::System.DBNull.Value;
            }
            if ((Original_FreeTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[341].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[342].Value = ((int)(Original_FreeTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[341].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[342].Value = global::System.DBNull.Value;
            }
            if ((Original_NoDisplayFun.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[343].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[344].Value = ((int)(Original_NoDisplayFun.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[343].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[344].Value = global::System.DBNull.Value;
            }
            if ((Original_VoiceTipsOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[345].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[346].Value = ((int)(Original_VoiceTipsOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[345].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[346].Value = global::System.DBNull.Value;
            }
            if ((Original_TOMenu.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[347].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[348].Value = ((int)(Original_TOMenu.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[347].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[348].Value = global::System.DBNull.Value;
            }
            if ((Original_StdVolume.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[349].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[350].Value = ((int)(Original_StdVolume.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[349].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[350].Value = global::System.DBNull.Value;
            }
            if ((Original_VRYVH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[351].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[352].Value = ((int)(Original_VRYVH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[351].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[352].Value = global::System.DBNull.Value;
            }
            if ((Original_KeyPadBeep.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[353].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[354].Value = ((int)(Original_KeyPadBeep.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[353].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[354].Value = global::System.DBNull.Value;
            }
            if ((Original_BatchUpdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[355].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[356].Value = ((int)(Original_BatchUpdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[355].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[356].Value = global::System.DBNull.Value;
            }
            if ((Original_CardFun.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[357].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[358].Value = ((int)(Original_CardFun.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[357].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[358].Value = global::System.DBNull.Value;
            }
            if ((Original_FaceFunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[359].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[360].Value = ((int)(Original_FaceFunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[359].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[360].Value = global::System.DBNull.Value;
            }
            if ((Original_FaceCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[361].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[362].Value = ((int)(Original_FaceCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[361].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[362].Value = global::System.DBNull.Value;
            }
            if ((Original_TimeAPBFunOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[363].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[364].Value = ((int)(Original_TimeAPBFunOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[363].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[364].Value = global::System.DBNull.Value;
            }
            if ((Original_FingerFunOn == null)) {
                this.Adapter.UpdateCommand.Parameters[365].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[366].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[365].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[366].Value = ((string)(Original_FingerFunOn));
            }
            if ((Original_CompatOldFirmware == null)) {
                this.Adapter.UpdateCommand.Parameters[367].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[368].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[367].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[368].Value = ((string)(Original_CompatOldFirmware));
            }
            if ((Original_WirelessSSID == null)) {
                this.Adapter.UpdateCommand.Parameters[369].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[370].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[369].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[370].Value = ((string)(Original_WirelessSSID));
            }
            if ((Original_WirelessKey == null)) {
                this.Adapter.UpdateCommand.Parameters[371].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[372].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[371].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[372].Value = ((string)(Original_WirelessKey));
            }
            if ((Original_WirelessAddr == null)) {
                this.Adapter.UpdateCommand.Parameters[373].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[374].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[373].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[374].Value = ((string)(Original_WirelessAddr));
            }
            if ((Original_WirelessMask == null)) {
                this.Adapter.UpdateCommand.Parameters[375].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[376].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[375].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[376].Value = ((string)(Original_WirelessMask));
            }
            if ((Original_WirelessGateWay == null)) {
                this.Adapter.UpdateCommand.Parameters[377].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[378].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[377].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[378].Value = ((string)(Original_WirelessGateWay));
            }
            if ((Original_IsWireless.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[379].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[380].Value = ((bool)(Original_IsWireless.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[379].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[380].Value = global::System.DBNull.Value;
            }
            if ((Original_managercount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[381].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[382].Value = ((int)(Original_managercount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[381].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[382].Value = global::System.DBNull.Value;
            }
            if ((Original_usercount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[383].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[384].Value = ((int)(Original_usercount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[383].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[384].Value = global::System.DBNull.Value;
            }
            if ((Original_fingercount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[385].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[386].Value = ((int)(Original_fingercount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[385].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[386].Value = global::System.DBNull.Value;
            }
            if ((Original_SecretCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[387].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[388].Value = ((int)(Original_SecretCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[387].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[388].Value = global::System.DBNull.Value;
            }
            if ((Original_ACFun.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[389].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[390].Value = ((int)(Original_ACFun.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[389].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[390].Value = global::System.DBNull.Value;
            }
            if ((Original_BiometricType == null)) {
                this.Adapter.UpdateCommand.Parameters[391].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[392].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[391].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[392].Value = ((string)(Original_BiometricType));
            }
            if ((Original_BiometricVersion == null)) {
                this.Adapter.UpdateCommand.Parameters[393].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[394].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[393].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[394].Value = ((string)(Original_BiometricVersion));
            }
            if ((Original_BiometricMaxCount == null)) {
                this.Adapter.UpdateCommand.Parameters[395].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[396].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[395].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[396].Value = ((string)(Original_BiometricMaxCount));
            }
            if ((Original_BiometricUsedCount == null)) {
                this.Adapter.UpdateCommand.Parameters[397].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[398].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[397].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[398].Value = ((string)(Original_BiometricUsedCount));
            }
            if ((Original_WIFI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[399].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[400].Value = ((int)(Original_WIFI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[399].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[400].Value = global::System.DBNull.Value;
            }
            if ((Original_WIFIOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[401].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[402].Value = ((int)(Original_WIFIOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[401].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[402].Value = global::System.DBNull.Value;
            }
            if ((Original_WIFIDHCP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[403].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[404].Value = ((int)(Original_WIFIDHCP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[403].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[404].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[405].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MachineAlias, 
                    global::System.Nullable<int> ConnectType, 
                    string IP, 
                    global::System.Nullable<int> SerialPort, 
                    global::System.Nullable<int> Port, 
                    global::System.Nullable<int> Baudrate, 
                    int MachineNumber, 
                    global::System.Nullable<bool> IsHost, 
                    bool Enabled, 
                    string CommPassword, 
                    global::System.Nullable<short> UILanguage, 
                    global::System.Nullable<short> DateFormat, 
                    global::System.Nullable<short> InOutRecordWarn, 
                    global::System.Nullable<short> Idle, 
                    global::System.Nullable<short> Voice, 
                    string FirmwareVersion, 
                    string ProductType, 
                    global::System.Nullable<short> LockControl, 
                    global::System.Nullable<short> Purpose, 
                    global::System.Nullable<int> ProduceKind, 
                    string sn, 
                    string PhotoStamp, 
                    global::System.Nullable<int> IsIfChangeConfigServer2, 
                    global::System.Nullable<int> pushver, 
                    string change_operator, 
                    global::System.Nullable<global::System.DateTime> change_time, 
                    string create_operator, 
                    global::System.Nullable<global::System.DateTime> create_time, 
                    string delete_operator, 
                    global::System.Nullable<global::System.DateTime> delete_time, 
                    global::System.Nullable<int> status, 
                    global::System.Nullable<int> device_type, 
                    global::System.Nullable<global::System.DateTime> last_activity, 
                    string trans_times, 
                    global::System.Nullable<int> TransInterval, 
                    string log_stamp, 
                    byte[] oplog_stamp, 
                    byte[] photo_stamp, 
                    string UpdateDB, 
                    string device_name, 
                    global::System.Nullable<int> transaction_count, 
                    string main_time, 
                    global::System.Nullable<int> max_user_count, 
                    global::System.Nullable<int> max_finger_count, 
                    global::System.Nullable<int> max_attlog_count, 
                    string alg_ver, 
                    string flash_size, 
                    string free_flash_size, 
                    string language, 
                    string lng_encode, 
                    string volume, 
                    string is_tft, 
                    string platform, 
                    string brightness, 
                    string oem_vendor, 
                    string city, 
                    global::System.Nullable<int> AccFun, 
                    global::System.Nullable<int> TZAdj, 
                    global::System.Nullable<int> comm_type, 
                    string agent_ipaddress, 
                    string subnet_mask, 
                    string gateway, 
                    global::System.Nullable<int> area_id, 
                    global::System.Nullable<int> acpanel_type, 
                    bool sync_time, 
                    bool four_to_two, 
                    string video_login, 
                    global::System.Nullable<int> fp_mthreshold, 
                    global::System.Nullable<int> Fpversion, 
                    global::System.Nullable<int> max_comm_size, 
                    global::System.Nullable<int> max_comm_count, 
                    bool realtime, 
                    global::System.Nullable<int> delay, 
                    bool encrypt, 
                    global::System.Nullable<int> dstime_id, 
                    global::System.Nullable<int> door_count, 
                    global::System.Nullable<int> reader_count, 
                    global::System.Nullable<int> aux_in_count, 
                    global::System.Nullable<int> aux_out_count, 
                    global::System.Nullable<int> IsOnlyRFMachine, 
                    string alias, 
                    string ipaddress, 
                    global::System.Nullable<short> com_port, 
                    global::System.Nullable<short> com_address, 
                    global::System.Nullable<int> SimpleEventType, 
                    global::System.Nullable<int> FvFunOn, 
                    global::System.Nullable<short> fvcount, 
                    byte[] deviceOption, 
                    global::System.Nullable<int> DevSDKType, 
                    byte[] UTableDesc, 
                    global::System.Nullable<bool> IsTFTMachine, 
                    global::System.Nullable<int> PinWidth, 
                    global::System.Nullable<int> UserExtFmt, 
                    global::System.Nullable<int> FP1_NThreshold, 
                    global::System.Nullable<int> FP1_1Threshold, 
                    global::System.Nullable<int> Face1_NThreshold, 
                    global::System.Nullable<int> Face1_1Threshold, 
                    global::System.Nullable<int> Only1_1Mode, 
                    global::System.Nullable<int> OnlyCheckCard, 
                    global::System.Nullable<int> MifireMustRegistered, 
                    global::System.Nullable<int> RFCardOn, 
                    global::System.Nullable<int> Mifire, 
                    global::System.Nullable<int> MifireId, 
                    global::System.Nullable<int> NetOn, 
                    global::System.Nullable<int> RS232On, 
                    global::System.Nullable<int> RS485On, 
                    global::System.Nullable<int> FreeType, 
                    global::System.Nullable<int> FreeTime, 
                    global::System.Nullable<int> NoDisplayFun, 
                    global::System.Nullable<int> VoiceTipsOn, 
                    global::System.Nullable<int> TOMenu, 
                    global::System.Nullable<int> StdVolume, 
                    global::System.Nullable<int> VRYVH, 
                    global::System.Nullable<int> KeyPadBeep, 
                    global::System.Nullable<int> BatchUpdate, 
                    global::System.Nullable<int> CardFun, 
                    global::System.Nullable<int> FaceFunOn, 
                    global::System.Nullable<int> FaceCount, 
                    global::System.Nullable<int> TimeAPBFunOn, 
                    string FingerFunOn, 
                    string CompatOldFirmware, 
                    byte[] ParamValues, 
                    string WirelessSSID, 
                    string WirelessKey, 
                    string WirelessAddr, 
                    string WirelessMask, 
                    string WirelessGateWay, 
                    global::System.Nullable<bool> IsWireless, 
                    global::System.Nullable<int> managercount, 
                    global::System.Nullable<int> usercount, 
                    global::System.Nullable<int> fingercount, 
                    global::System.Nullable<int> SecretCount, 
                    global::System.Nullable<int> ACFun, 
                    string BiometricType, 
                    string BiometricVersion, 
                    string BiometricMaxCount, 
                    string BiometricUsedCount, 
                    global::System.Nullable<int> WIFI, 
                    global::System.Nullable<int> WIFIOn, 
                    global::System.Nullable<int> WIFIDHCP, 
                    int Original_ID, 
                    string Original_MachineAlias, 
                    global::System.Nullable<int> Original_ConnectType, 
                    string Original_IP, 
                    global::System.Nullable<int> Original_SerialPort, 
                    global::System.Nullable<int> Original_Port, 
                    global::System.Nullable<int> Original_Baudrate, 
                    int Original_MachineNumber, 
                    global::System.Nullable<bool> Original_IsHost, 
                    bool Original_Enabled, 
                    string Original_CommPassword, 
                    global::System.Nullable<short> Original_UILanguage, 
                    global::System.Nullable<short> Original_DateFormat, 
                    global::System.Nullable<short> Original_InOutRecordWarn, 
                    global::System.Nullable<short> Original_Idle, 
                    global::System.Nullable<short> Original_Voice, 
                    string Original_FirmwareVersion, 
                    string Original_ProductType, 
                    global::System.Nullable<short> Original_LockControl, 
                    global::System.Nullable<short> Original_Purpose, 
                    global::System.Nullable<int> Original_ProduceKind, 
                    string Original_sn, 
                    string Original_PhotoStamp, 
                    global::System.Nullable<int> Original_IsIfChangeConfigServer2, 
                    global::System.Nullable<int> Original_pushver, 
                    string Original_change_operator, 
                    global::System.Nullable<global::System.DateTime> Original_change_time, 
                    string Original_create_operator, 
                    global::System.Nullable<global::System.DateTime> Original_create_time, 
                    string Original_delete_operator, 
                    global::System.Nullable<global::System.DateTime> Original_delete_time, 
                    global::System.Nullable<int> Original_status, 
                    global::System.Nullable<int> Original_device_type, 
                    global::System.Nullable<global::System.DateTime> Original_last_activity, 
                    string Original_trans_times, 
                    global::System.Nullable<int> Original_TransInterval, 
                    string Original_log_stamp, 
                    string Original_UpdateDB, 
                    string Original_device_name, 
                    global::System.Nullable<int> Original_transaction_count, 
                    string Original_main_time, 
                    global::System.Nullable<int> Original_max_user_count, 
                    global::System.Nullable<int> Original_max_finger_count, 
                    global::System.Nullable<int> Original_max_attlog_count, 
                    string Original_alg_ver, 
                    string Original_flash_size, 
                    string Original_free_flash_size, 
                    string Original_language, 
                    string Original_lng_encode, 
                    string Original_volume, 
                    string Original_is_tft, 
                    string Original_platform, 
                    string Original_brightness, 
                    string Original_oem_vendor, 
                    string Original_city, 
                    global::System.Nullable<int> Original_AccFun, 
                    global::System.Nullable<int> Original_TZAdj, 
                    global::System.Nullable<int> Original_comm_type, 
                    string Original_agent_ipaddress, 
                    string Original_subnet_mask, 
                    string Original_gateway, 
                    global::System.Nullable<int> Original_area_id, 
                    global::System.Nullable<int> Original_acpanel_type, 
                    bool Original_sync_time, 
                    bool Original_four_to_two, 
                    string Original_video_login, 
                    global::System.Nullable<int> Original_fp_mthreshold, 
                    global::System.Nullable<int> Original_Fpversion, 
                    global::System.Nullable<int> Original_max_comm_size, 
                    global::System.Nullable<int> Original_max_comm_count, 
                    bool Original_realtime, 
                    global::System.Nullable<int> Original_delay, 
                    bool Original_encrypt, 
                    global::System.Nullable<int> Original_dstime_id, 
                    global::System.Nullable<int> Original_door_count, 
                    global::System.Nullable<int> Original_reader_count, 
                    global::System.Nullable<int> Original_aux_in_count, 
                    global::System.Nullable<int> Original_aux_out_count, 
                    global::System.Nullable<int> Original_IsOnlyRFMachine, 
                    string Original_alias, 
                    string Original_ipaddress, 
                    global::System.Nullable<short> Original_com_port, 
                    global::System.Nullable<short> Original_com_address, 
                    global::System.Nullable<int> Original_SimpleEventType, 
                    global::System.Nullable<int> Original_FvFunOn, 
                    global::System.Nullable<short> Original_fvcount, 
                    global::System.Nullable<int> Original_DevSDKType, 
                    global::System.Nullable<bool> Original_IsTFTMachine, 
                    global::System.Nullable<int> Original_PinWidth, 
                    global::System.Nullable<int> Original_UserExtFmt, 
                    global::System.Nullable<int> Original_FP1_NThreshold, 
                    global::System.Nullable<int> Original_FP1_1Threshold, 
                    global::System.Nullable<int> Original_Face1_NThreshold, 
                    global::System.Nullable<int> Original_Face1_1Threshold, 
                    global::System.Nullable<int> Original_Only1_1Mode, 
                    global::System.Nullable<int> Original_OnlyCheckCard, 
                    global::System.Nullable<int> Original_MifireMustRegistered, 
                    global::System.Nullable<int> Original_RFCardOn, 
                    global::System.Nullable<int> Original_Mifire, 
                    global::System.Nullable<int> Original_MifireId, 
                    global::System.Nullable<int> Original_NetOn, 
                    global::System.Nullable<int> Original_RS232On, 
                    global::System.Nullable<int> Original_RS485On, 
                    global::System.Nullable<int> Original_FreeType, 
                    global::System.Nullable<int> Original_FreeTime, 
                    global::System.Nullable<int> Original_NoDisplayFun, 
                    global::System.Nullable<int> Original_VoiceTipsOn, 
                    global::System.Nullable<int> Original_TOMenu, 
                    global::System.Nullable<int> Original_StdVolume, 
                    global::System.Nullable<int> Original_VRYVH, 
                    global::System.Nullable<int> Original_KeyPadBeep, 
                    global::System.Nullable<int> Original_BatchUpdate, 
                    global::System.Nullable<int> Original_CardFun, 
                    global::System.Nullable<int> Original_FaceFunOn, 
                    global::System.Nullable<int> Original_FaceCount, 
                    global::System.Nullable<int> Original_TimeAPBFunOn, 
                    string Original_FingerFunOn, 
                    string Original_CompatOldFirmware, 
                    string Original_WirelessSSID, 
                    string Original_WirelessKey, 
                    string Original_WirelessAddr, 
                    string Original_WirelessMask, 
                    string Original_WirelessGateWay, 
                    global::System.Nullable<bool> Original_IsWireless, 
                    global::System.Nullable<int> Original_managercount, 
                    global::System.Nullable<int> Original_usercount, 
                    global::System.Nullable<int> Original_fingercount, 
                    global::System.Nullable<int> Original_SecretCount, 
                    global::System.Nullable<int> Original_ACFun, 
                    string Original_BiometricType, 
                    string Original_BiometricVersion, 
                    string Original_BiometricMaxCount, 
                    string Original_BiometricUsedCount, 
                    global::System.Nullable<int> Original_WIFI, 
                    global::System.Nullable<int> Original_WIFIOn, 
                    global::System.Nullable<int> Original_WIFIDHCP) {
            return this.Update(MachineAlias, ConnectType, IP, SerialPort, Port, Baudrate, MachineNumber, IsHost, Enabled, CommPassword, UILanguage, DateFormat, InOutRecordWarn, Idle, Voice, FirmwareVersion, ProductType, LockControl, Purpose, ProduceKind, sn, PhotoStamp, IsIfChangeConfigServer2, pushver, change_operator, change_time, create_operator, create_time, delete_operator, delete_time, status, device_type, last_activity, trans_times, TransInterval, log_stamp, oplog_stamp, photo_stamp, UpdateDB, device_name, transaction_count, main_time, max_user_count, max_finger_count, max_attlog_count, alg_ver, flash_size, free_flash_size, language, lng_encode, volume, is_tft, platform, brightness, oem_vendor, city, AccFun, TZAdj, comm_type, agent_ipaddress, subnet_mask, gateway, area_id, acpanel_type, sync_time, four_to_two, video_login, fp_mthreshold, Fpversion, max_comm_size, max_comm_count, realtime, delay, encrypt, dstime_id, door_count, reader_count, aux_in_count, aux_out_count, IsOnlyRFMachine, alias, ipaddress, com_port, com_address, SimpleEventType, FvFunOn, fvcount, deviceOption, DevSDKType, UTableDesc, IsTFTMachine, PinWidth, UserExtFmt, FP1_NThreshold, FP1_1Threshold, Face1_NThreshold, Face1_1Threshold, Only1_1Mode, OnlyCheckCard, MifireMustRegistered, RFCardOn, Mifire, MifireId, NetOn, RS232On, RS485On, FreeType, FreeTime, NoDisplayFun, VoiceTipsOn, TOMenu, StdVolume, VRYVH, KeyPadBeep, BatchUpdate, CardFun, FaceFunOn, FaceCount, TimeAPBFunOn, FingerFunOn, CompatOldFirmware, ParamValues, WirelessSSID, WirelessKey, WirelessAddr, WirelessMask, WirelessGateWay, IsWireless, managercount, usercount, fingercount, SecretCount, ACFun, BiometricType, BiometricVersion, BiometricMaxCount, BiometricUsedCount, WIFI, WIFIOn, WIFIDHCP, Original_ID, Original_MachineAlias, Original_ConnectType, Original_IP, Original_SerialPort, Original_Port, Original_Baudrate, Original_MachineNumber, Original_IsHost, Original_Enabled, Original_CommPassword, Original_UILanguage, Original_DateFormat, Original_InOutRecordWarn, Original_Idle, Original_Voice, Original_FirmwareVersion, Original_ProductType, Original_LockControl, Original_Purpose, Original_ProduceKind, Original_sn, Original_PhotoStamp, Original_IsIfChangeConfigServer2, Original_pushver, Original_change_operator, Original_change_time, Original_create_operator, Original_create_time, Original_delete_operator, Original_delete_time, Original_status, Original_device_type, Original_last_activity, Original_trans_times, Original_TransInterval, Original_log_stamp, Original_UpdateDB, Original_device_name, Original_transaction_count, Original_main_time, Original_max_user_count, Original_max_finger_count, Original_max_attlog_count, Original_alg_ver, Original_flash_size, Original_free_flash_size, Original_language, Original_lng_encode, Original_volume, Original_is_tft, Original_platform, Original_brightness, Original_oem_vendor, Original_city, Original_AccFun, Original_TZAdj, Original_comm_type, Original_agent_ipaddress, Original_subnet_mask, Original_gateway, Original_area_id, Original_acpanel_type, Original_sync_time, Original_four_to_two, Original_video_login, Original_fp_mthreshold, Original_Fpversion, Original_max_comm_size, Original_max_comm_count, Original_realtime, Original_delay, Original_encrypt, Original_dstime_id, Original_door_count, Original_reader_count, Original_aux_in_count, Original_aux_out_count, Original_IsOnlyRFMachine, Original_alias, Original_ipaddress, Original_com_port, Original_com_address, Original_SimpleEventType, Original_FvFunOn, Original_fvcount, Original_DevSDKType, Original_IsTFTMachine, Original_PinWidth, Original_UserExtFmt, Original_FP1_NThreshold, Original_FP1_1Threshold, Original_Face1_NThreshold, Original_Face1_1Threshold, Original_Only1_1Mode, Original_OnlyCheckCard, Original_MifireMustRegistered, Original_RFCardOn, Original_Mifire, Original_MifireId, Original_NetOn, Original_RS232On, Original_RS485On, Original_FreeType, Original_FreeTime, Original_NoDisplayFun, Original_VoiceTipsOn, Original_TOMenu, Original_StdVolume, Original_VRYVH, Original_KeyPadBeep, Original_BatchUpdate, Original_CardFun, Original_FaceFunOn, Original_FaceCount, Original_TimeAPBFunOn, Original_FingerFunOn, Original_CompatOldFirmware, Original_WirelessSSID, Original_WirelessKey, Original_WirelessAddr, Original_WirelessMask, Original_WirelessGateWay, Original_IsWireless, Original_managercount, Original_usercount, Original_fingercount, Original_SecretCount, Original_ACFun, Original_BiometricType, Original_BiometricVersion, Original_BiometricMaxCount, Original_BiometricUsedCount, Original_WIFI, Original_WIFIOn, Original_WIFIDHCP, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CHECKINOUTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CHECKINOUTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CHECKINOUT";
            tableMapping.ColumnMappings.Add("USERID", "USERID");
            tableMapping.ColumnMappings.Add("CHECKTIME", "CHECKTIME");
            tableMapping.ColumnMappings.Add("CHECKTYPE", "CHECKTYPE");
            tableMapping.ColumnMappings.Add("VERIFYCODE", "VERIFYCODE");
            tableMapping.ColumnMappings.Add("SENSORID", "SENSORID");
            tableMapping.ColumnMappings.Add("LOGID", "LOGID");
            tableMapping.ColumnMappings.Add("MachineId", "MachineId");
            tableMapping.ColumnMappings.Add("UserExtFmt", "UserExtFmt");
            tableMapping.ColumnMappings.Add("WorkCode", "WorkCode");
            tableMapping.ColumnMappings.Add("Memoinfo", "Memoinfo");
            tableMapping.ColumnMappings.Add("sn", "sn");
            tableMapping.ColumnMappings.Add("isDone", "isDone");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [CHECKINOUT] WHERE (([USERID] = @Original_USERID) AND ([CHECKTIME] = @Original_CHECKTIME) AND ((@IsNull_CHECKTYPE = 1 AND [CHECKTYPE] IS NULL) OR ([CHECKTYPE] = @Original_CHECKTYPE)) AND ((@IsNull_VERIFYCODE = 1 AND [VERIFYCODE] IS NULL) OR ([VERIFYCODE] = @Original_VERIFYCODE)) AND ((@IsNull_SENSORID = 1 AND [SENSORID] IS NULL) OR ([SENSORID] = @Original_SENSORID)) AND ([LOGID] = @Original_LOGID) AND ((@IsNull_MachineId = 1 AND [MachineId] IS NULL) OR ([MachineId] = @Original_MachineId)) AND ((@IsNull_UserExtFmt = 1 AND [UserExtFmt] IS NULL) OR ([UserExtFmt] = @Original_UserExtFmt)) AND ((@IsNull_WorkCode = 1 AND [WorkCode] IS NULL) OR ([WorkCode] = @Original_WorkCode)) AND ((@IsNull_Memoinfo = 1 AND [Memoinfo] IS NULL) OR ([Memoinfo] = @Original_Memoinfo)) AND ((@IsNull_sn = 1 AND [sn] IS NULL) OR ([sn] = @Original_sn)) AND ((@IsNull_isDone = 1 AND [isDone] IS NULL) OR ([isDone] = @Original_isDone)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USERID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHECKTIME", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHECKTIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CHECKTYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHECKTYPE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHECKTYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHECKTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VERIFYCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VERIFYCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VERIFYCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VERIFYCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SENSORID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SENSORID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SENSORID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SENSORID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOGID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MachineId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MachineId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserExtFmt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserExtFmt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserExtFmt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserExtFmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WorkCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Memoinfo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memoinfo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Memoinfo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memoinfo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isDone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isDone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isDone", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isDone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [CHECKINOUT] ([USERID], [CHECKTIME], [CHECKTYPE], [VERIFYCODE], [SENSORID], [MachineId], [UserExtFmt], [WorkCode], [Memoinfo], [sn], [isDone]) VALUES (@USERID, @CHECKTIME, @CHECKTYPE, @VERIFYCODE, @SENSORID, @MachineId, @UserExtFmt, @WorkCode, @Memoinfo, @sn, @isDone);
SELECT USERID, CHECKTIME, CHECKTYPE, VERIFYCODE, SENSORID, LOGID, MachineId, UserExtFmt, WorkCode, Memoinfo, sn, isDone FROM CHECKINOUT WHERE (LOGID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHECKTIME", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHECKTIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHECKTYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHECKTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VERIFYCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VERIFYCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SENSORID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SENSORID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MachineId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserExtFmt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserExtFmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Memoinfo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memoinfo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isDone", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isDone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [CHECKINOUT] SET [USERID] = @USERID, [CHECKTIME] = @CHECKTIME, [CHECKTYPE] = @CHECKTYPE, [VERIFYCODE] = @VERIFYCODE, [SENSORID] = @SENSORID, [MachineId] = @MachineId, [UserExtFmt] = @UserExtFmt, [WorkCode] = @WorkCode, [Memoinfo] = @Memoinfo, [sn] = @sn, [isDone] = @isDone WHERE (([USERID] = @Original_USERID) AND ([CHECKTIME] = @Original_CHECKTIME) AND ((@IsNull_CHECKTYPE = 1 AND [CHECKTYPE] IS NULL) OR ([CHECKTYPE] = @Original_CHECKTYPE)) AND ((@IsNull_VERIFYCODE = 1 AND [VERIFYCODE] IS NULL) OR ([VERIFYCODE] = @Original_VERIFYCODE)) AND ((@IsNull_SENSORID = 1 AND [SENSORID] IS NULL) OR ([SENSORID] = @Original_SENSORID)) AND ([LOGID] = @Original_LOGID) AND ((@IsNull_MachineId = 1 AND [MachineId] IS NULL) OR ([MachineId] = @Original_MachineId)) AND ((@IsNull_UserExtFmt = 1 AND [UserExtFmt] IS NULL) OR ([UserExtFmt] = @Original_UserExtFmt)) AND ((@IsNull_WorkCode = 1 AND [WorkCode] IS NULL) OR ([WorkCode] = @Original_WorkCode)) AND ((@IsNull_Memoinfo = 1 AND [Memoinfo] IS NULL) OR ([Memoinfo] = @Original_Memoinfo)) AND ((@IsNull_sn = 1 AND [sn] IS NULL) OR ([sn] = @Original_sn)) AND ((@IsNull_isDone = 1 AND [isDone] IS NULL) OR ([isDone] = @Original_isDone)));
SELECT USERID, CHECKTIME, CHECKTYPE, VERIFYCODE, SENSORID, LOGID, MachineId, UserExtFmt, WorkCode, Memoinfo, sn, isDone FROM CHECKINOUT WHERE (LOGID = @LOGID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHECKTIME", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHECKTIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHECKTYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHECKTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VERIFYCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VERIFYCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SENSORID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SENSORID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MachineId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserExtFmt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserExtFmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WorkCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Memoinfo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memoinfo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isDone", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isDone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USERID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHECKTIME", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHECKTIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CHECKTYPE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHECKTYPE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHECKTYPE", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHECKTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VERIFYCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VERIFYCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VERIFYCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VERIFYCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SENSORID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SENSORID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SENSORID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SENSORID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOGID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MachineId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MachineId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MachineId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserExtFmt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserExtFmt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserExtFmt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserExtFmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WorkCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WorkCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WorkCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Memoinfo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memoinfo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Memoinfo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memoinfo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isDone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isDone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isDone", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isDone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOGID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "LOGID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::KetharaATTGUI.Properties.Settings.Default.KetharaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        USERID, CHECKTIME, CHECKTYPE, VERIFYCODE, SENSORID, LOGID, MachineI" +
                "d, UserExtFmt, WorkCode, Memoinfo, sn, isDone\r\nFROM            CHECKINOUT\r\nWHERE" +
                "        (isDone = 0)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AttendanceDataSet.CHECKINOUTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AttendanceDataSet.CHECKINOUTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            AttendanceDataSet.CHECKINOUTDataTable dataTable = new AttendanceDataSet.CHECKINOUTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AttendanceDataSet.CHECKINOUTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(AttendanceDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CHECKINOUT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_USERID, System.DateTime Original_CHECKTIME, string Original_CHECKTYPE, global::System.Nullable<int> Original_VERIFYCODE, string Original_SENSORID, int Original_LOGID, global::System.Nullable<int> Original_MachineId, global::System.Nullable<int> Original_UserExtFmt, global::System.Nullable<int> Original_WorkCode, string Original_Memoinfo, string Original_sn, global::System.Nullable<bool> Original_isDone) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_USERID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_CHECKTIME));
            if ((Original_CHECKTYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_CHECKTYPE));
            }
            if ((Original_VERIFYCODE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_VERIFYCODE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_SENSORID == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_SENSORID));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_LOGID));
            if ((Original_MachineId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_MachineId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_UserExtFmt.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_UserExtFmt.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_WorkCode.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_WorkCode.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Memoinfo == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Memoinfo));
            }
            if ((Original_sn == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_sn));
            }
            if ((Original_isDone.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_isDone.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int USERID, System.DateTime CHECKTIME, string CHECKTYPE, global::System.Nullable<int> VERIFYCODE, string SENSORID, global::System.Nullable<int> MachineId, global::System.Nullable<int> UserExtFmt, global::System.Nullable<int> WorkCode, string Memoinfo, string sn, global::System.Nullable<bool> isDone) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(USERID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(CHECKTIME));
            if ((CHECKTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CHECKTYPE));
            }
            if ((VERIFYCODE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(VERIFYCODE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SENSORID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SENSORID));
            }
            if ((MachineId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(MachineId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((UserExtFmt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(UserExtFmt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((WorkCode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(WorkCode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Memoinfo == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Memoinfo));
            }
            if ((sn == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(sn));
            }
            if ((isDone.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(isDone.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int USERID, 
                    System.DateTime CHECKTIME, 
                    string CHECKTYPE, 
                    global::System.Nullable<int> VERIFYCODE, 
                    string SENSORID, 
                    global::System.Nullable<int> MachineId, 
                    global::System.Nullable<int> UserExtFmt, 
                    global::System.Nullable<int> WorkCode, 
                    string Memoinfo, 
                    string sn, 
                    global::System.Nullable<bool> isDone, 
                    int Original_USERID, 
                    System.DateTime Original_CHECKTIME, 
                    string Original_CHECKTYPE, 
                    global::System.Nullable<int> Original_VERIFYCODE, 
                    string Original_SENSORID, 
                    int Original_LOGID, 
                    global::System.Nullable<int> Original_MachineId, 
                    global::System.Nullable<int> Original_UserExtFmt, 
                    global::System.Nullable<int> Original_WorkCode, 
                    string Original_Memoinfo, 
                    string Original_sn, 
                    global::System.Nullable<bool> Original_isDone, 
                    int LOGID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(USERID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(CHECKTIME));
            if ((CHECKTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CHECKTYPE));
            }
            if ((VERIFYCODE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(VERIFYCODE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SENSORID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SENSORID));
            }
            if ((MachineId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(MachineId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((UserExtFmt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(UserExtFmt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((WorkCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(WorkCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Memoinfo == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Memoinfo));
            }
            if ((sn == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(sn));
            }
            if ((isDone.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(isDone.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_USERID));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_CHECKTIME));
            if ((Original_CHECKTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_CHECKTYPE));
            }
            if ((Original_VERIFYCODE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_VERIFYCODE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_SENSORID == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_SENSORID));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_LOGID));
            if ((Original_MachineId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_MachineId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_UserExtFmt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_UserExtFmt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_WorkCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_WorkCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Memoinfo == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_Memoinfo));
            }
            if ((Original_sn == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_sn));
            }
            if ((Original_isDone.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(Original_isDone.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(LOGID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int USERID, 
                    System.DateTime CHECKTIME, 
                    string CHECKTYPE, 
                    global::System.Nullable<int> VERIFYCODE, 
                    string SENSORID, 
                    global::System.Nullable<int> MachineId, 
                    global::System.Nullable<int> UserExtFmt, 
                    global::System.Nullable<int> WorkCode, 
                    string Memoinfo, 
                    string sn, 
                    global::System.Nullable<bool> isDone, 
                    int Original_USERID, 
                    System.DateTime Original_CHECKTIME, 
                    string Original_CHECKTYPE, 
                    global::System.Nullable<int> Original_VERIFYCODE, 
                    string Original_SENSORID, 
                    int Original_LOGID, 
                    global::System.Nullable<int> Original_MachineId, 
                    global::System.Nullable<int> Original_UserExtFmt, 
                    global::System.Nullable<int> Original_WorkCode, 
                    string Original_Memoinfo, 
                    string Original_sn, 
                    global::System.Nullable<bool> Original_isDone) {
            return this.Update(USERID, CHECKTIME, CHECKTYPE, VERIFYCODE, SENSORID, MachineId, UserExtFmt, WorkCode, Memoinfo, sn, isDone, Original_USERID, Original_CHECKTIME, Original_CHECKTYPE, Original_VERIFYCODE, Original_SENSORID, Original_LOGID, Original_MachineId, Original_UserExtFmt, Original_WorkCode, Original_Memoinfo, Original_sn, Original_isDone, Original_LOGID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private MachinesTableAdapter _machinesTableAdapter;
        
        private CHECKINOUTTableAdapter _cHECKINOUTTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MachinesTableAdapter MachinesTableAdapter {
            get {
                return this._machinesTableAdapter;
            }
            set {
                this._machinesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CHECKINOUTTableAdapter CHECKINOUTTableAdapter {
            get {
                return this._cHECKINOUTTableAdapter;
            }
            set {
                this._cHECKINOUTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._machinesTableAdapter != null) 
                            && (this._machinesTableAdapter.Connection != null))) {
                    return this._machinesTableAdapter.Connection;
                }
                if (((this._cHECKINOUTTableAdapter != null) 
                            && (this._cHECKINOUTTableAdapter.Connection != null))) {
                    return this._cHECKINOUTTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._machinesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cHECKINOUTTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(AttendanceDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._machinesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Machines.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._machinesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cHECKINOUTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CHECKINOUT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cHECKINOUTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(AttendanceDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._machinesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Machines.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._machinesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cHECKINOUTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CHECKINOUT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cHECKINOUTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(AttendanceDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._cHECKINOUTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CHECKINOUT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cHECKINOUTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._machinesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Machines.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._machinesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(AttendanceDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._machinesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._machinesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cHECKINOUTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cHECKINOUTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._machinesTableAdapter != null)) {
                    revertConnections.Add(this._machinesTableAdapter, this._machinesTableAdapter.Connection);
                    this._machinesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._machinesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._machinesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._machinesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._machinesTableAdapter.Adapter);
                    }
                }
                if ((this._cHECKINOUTTableAdapter != null)) {
                    revertConnections.Add(this._cHECKINOUTTableAdapter, this._cHECKINOUTTableAdapter.Connection);
                    this._cHECKINOUTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cHECKINOUTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cHECKINOUTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cHECKINOUTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cHECKINOUTTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._machinesTableAdapter != null)) {
                    this._machinesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._machinesTableAdapter]));
                    this._machinesTableAdapter.Transaction = null;
                }
                if ((this._cHECKINOUTTableAdapter != null)) {
                    this._cHECKINOUTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cHECKINOUTTableAdapter]));
                    this._cHECKINOUTTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591